(this["webpackJsonp"] = this["webpackJsonp"] || []).push([[29],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.js":
/*!**************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.js ***!
  \**************************************************************************/
/*! exports provided: conf, language */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nvar conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [['[', ']'], ['(', ')'], ['{', '}']],\r\n    autoClosingPairs: [\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n    ]\r\n};\r\nvar language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.msdax',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '{', close: '}', token: 'delimiter.brackets' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n    ],\r\n    keywords: [\r\n        // Query keywords\r\n        'VAR',\r\n        'RETURN',\r\n        'NOT',\r\n        'EVALUATE',\r\n        'DATATABLE',\r\n        'ORDER',\r\n        'BY',\r\n        'START',\r\n        'AT',\r\n        'DEFINE',\r\n        'MEASURE',\r\n        'ASC',\r\n        'DESC',\r\n        'IN',\r\n        // Datatable types\r\n        'BOOLEAN',\r\n        'DOUBLE',\r\n        'INTEGER',\r\n        'DATETIME',\r\n        'CURRENCY',\r\n        'STRING'\r\n    ],\r\n    functions: [\r\n        // Relational\r\n        'CLOSINGBALANCEMONTH', 'CLOSINGBALANCEQUARTER', 'CLOSINGBALANCEYEAR', 'DATEADD', 'DATESBETWEEN',\r\n        'DATESINPERIOD', 'DATESMTD', 'DATESQTD', 'DATESYTD', 'ENDOFMONTH',\r\n        'ENDOFQUARTER', 'ENDOFYEAR', 'FIRSTDATE', 'FIRSTNONBLANK', 'LASTDATE',\r\n        'LASTNONBLANK', 'NEXTDAY', 'NEXTMONTH', 'NEXTQUARTER', 'NEXTYEAR',\r\n        'OPENINGBALANCEMONTH', 'OPENINGBALANCEQUARTER', 'OPENINGBALANCEYEAR', 'PARALLELPERIOD', 'PREVIOUSDAY',\r\n        'PREVIOUSMONTH', 'PREVIOUSQUARTER', 'PREVIOUSYEAR', 'SAMEPERIODLASTYEAR', 'STARTOFMONTH',\r\n        'STARTOFQUARTER', 'STARTOFYEAR', 'TOTALMTD', 'TOTALQTD', 'TOTALYTD',\r\n        'ADDCOLUMNS', 'ADDMISSINGITEMS', 'ALL', 'ALLEXCEPT', 'ALLNOBLANKROW',\r\n        'ALLSELECTED', 'CALCULATE', 'CALCULATETABLE', 'CALENDAR', 'CALENDARAUTO',\r\n        'CROSSFILTER', 'CROSSJOIN', 'CURRENTGROUP', 'DATATABLE', 'DETAILROWS',\r\n        'DISTINCT', 'EARLIER', 'EARLIEST', 'EXCEPT', 'FILTER',\r\n        'FILTERS', 'GENERATE', 'GENERATEALL', 'GROUPBY', 'IGNORE',\r\n        'INTERSECT', 'ISONORAFTER', 'KEEPFILTERS', 'LOOKUPVALUE', 'NATURALINNERJOIN',\r\n        'NATURALLEFTOUTERJOIN', 'RELATED', 'RELATEDTABLE', 'ROLLUP', 'ROLLUPADDISSUBTOTAL',\r\n        'ROLLUPGROUP', 'ROLLUPISSUBTOTAL', 'ROW', 'SAMPLE', 'SELECTCOLUMNS',\r\n        'SUBSTITUTEWITHINDEX', 'SUMMARIZE', 'SUMMARIZECOLUMNS', 'TOPN', 'TREATAS',\r\n        'UNION', 'USERELATIONSHIP', 'VALUES', 'SUM', 'SUMX',\r\n        'PATH', 'PATHCONTAINS', 'PATHITEM', 'PATHITEMREVERSE', 'PATHLENGTH',\r\n        'AVERAGE', 'AVERAGEA', 'AVERAGEX', 'COUNT', 'COUNTA',\r\n        'COUNTAX', 'COUNTBLANK', 'COUNTROWS', 'COUNTX', 'DISTINCTCOUNT',\r\n        'DIVIDE', 'GEOMEAN', 'GEOMEANX', 'MAX', 'MAXA',\r\n        'MAXX', 'MEDIAN', 'MEDIANX', 'MIN', 'MINA',\r\n        'MINX', 'PERCENTILE.EXC', 'PERCENTILE.INC', 'PERCENTILEX.EXC', 'PERCENTILEX.INC',\r\n        'PRODUCT', 'PRODUCTX', 'RANK.EQ', 'RANKX', 'STDEV.P',\r\n        'STDEV.S', 'STDEVX.P', 'STDEVX.S', 'VAR.P', 'VAR.S',\r\n        'VARX.P', 'VARX.S', 'XIRR', 'XNPV',\r\n        // Scalar\r\n        'DATE', 'DATEDIFF', 'DATEVALUE', 'DAY', 'EDATE',\r\n        'EOMONTH', 'HOUR', 'MINUTE', 'MONTH', 'NOW',\r\n        'SECOND', 'TIME', 'TIMEVALUE', 'TODAY', 'WEEKDAY',\r\n        'WEEKNUM', 'YEAR', 'YEARFRAC', 'CONTAINS', 'CONTAINSROW',\r\n        'CUSTOMDATA', 'ERROR', 'HASONEFILTER', 'HASONEVALUE', 'ISBLANK',\r\n        'ISCROSSFILTERED', 'ISEMPTY', 'ISERROR', 'ISEVEN', 'ISFILTERED',\r\n        'ISLOGICAL', 'ISNONTEXT', 'ISNUMBER', 'ISODD', 'ISSUBTOTAL',\r\n        'ISTEXT', 'USERNAME', 'USERPRINCIPALNAME', 'AND', 'FALSE',\r\n        'IF', 'IFERROR', 'NOT', 'OR', 'SWITCH',\r\n        'TRUE', 'ABS', 'ACOS', 'ACOSH', 'ACOT',\r\n        'ACOTH', 'ASIN', 'ASINH', 'ATAN', 'ATANH',\r\n        'BETA.DIST', 'BETA.INV', 'CEILING', 'CHISQ.DIST', 'CHISQ.DIST.RT',\r\n        'CHISQ.INV', 'CHISQ.INV.RT', 'COMBIN', 'COMBINA', 'CONFIDENCE.NORM',\r\n        'CONFIDENCE.T', 'COS', 'COSH', 'COT', 'COTH',\r\n        'CURRENCY', 'DEGREES', 'EVEN', 'EXP', 'EXPON.DIST',\r\n        'FACT', 'FLOOR', 'GCD', 'INT', 'ISO.CEILING',\r\n        'LCM', 'LN', 'LOG', 'LOG10', 'MOD',\r\n        'MROUND', 'ODD', 'PERMUT', 'PI', 'POISSON.DIST',\r\n        'POWER', 'QUOTIENT', 'RADIANS', 'RAND', 'RANDBETWEEN',\r\n        'ROUND', 'ROUNDDOWN', 'ROUNDUP', 'SIGN', 'SIN',\r\n        'SINH', 'SQRT', 'SQRTPI', 'TAN', 'TANH',\r\n        'TRUNC', 'BLANK', 'CONCATENATE', 'CONCATENATEX', 'EXACT',\r\n        'FIND', 'FIXED', 'FORMAT', 'LEFT', 'LEN',\r\n        'LOWER', 'MID', 'REPLACE', 'REPT', 'RIGHT',\r\n        'SEARCH', 'SUBSTITUTE', 'TRIM', 'UNICHAR', 'UNICODE',\r\n        'UPPER', 'VALUE'\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@comments' },\r\n            { include: '@whitespace' },\r\n            { include: '@numbers' },\r\n            { include: '@strings' },\r\n            { include: '@complexIdentifiers' },\r\n            [/[;,.]/, 'delimiter'],\r\n            [/[({})]/, '@brackets'],\r\n            [/[a-z_][a-zA-Z0-9_]*/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@functions': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n        ],\r\n        whitespace: [\r\n            [/\\s+/, 'white']\r\n        ],\r\n        comments: [\r\n            [/\\/\\/+.*/, 'comment'],\r\n            [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n        ],\r\n        comment: [\r\n            [/[^*/]+/, 'comment'],\r\n            [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n            [/./, 'comment']\r\n        ],\r\n        numbers: [\r\n            [/0[xX][0-9a-fA-F]*/, 'number'],\r\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n        ],\r\n        strings: [\r\n            [/N\"/, { token: 'string', next: '@string' }],\r\n            [/\"/, { token: 'string', next: '@string' }]\r\n        ],\r\n        string: [\r\n            [/[^\"]+/, 'string'],\r\n            [/\"\"/, 'string'],\r\n            [/\"/, { token: 'string', next: '@pop' }]\r\n        ],\r\n        complexIdentifiers: [\r\n            [/\\[/, { token: 'identifier.quote', next: '@bracketedIdentifier' }],\r\n            [/'/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n        ],\r\n        bracketedIdentifier: [\r\n            [/[^\\]]+/, 'identifier'],\r\n            [/]]/, 'identifier'],\r\n            [/]/, { token: 'identifier.quote', next: '@pop' }]\r\n        ],\r\n        quotedIdentifier: [\r\n            [/[^']+/, 'identifier'],\r\n            [/''/, 'identifier'],\r\n            [/'/, { token: 'identifier.quote', next: '@pop' }]\r\n        ]\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.js\n");

/***/ })

}]);