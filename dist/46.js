(this["webpackJsonp"] = this["webpackJsonp"] || []).push([[46],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.js ***!
  \************************************************************************************************/
/*! exports provided: conf, language */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nvar conf = {\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>', notIn: ['string'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '(', close: ')' },\r\n        { open: '[', close: ']' },\r\n        { open: '`', close: '`' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),\r\n            end: new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")\r\n        }\r\n    }\r\n};\r\nvar language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.rst',\r\n    control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\r\n    escapes: /\\\\(?:@control)/,\r\n    empty: [\r\n        'area', 'base', 'basefont', 'br', 'col', 'frame',\r\n        'hr', 'img', 'input', 'isindex', 'link', 'meta', 'param'\r\n    ],\r\n    alphanumerics: /[A-Za-z0-9]/,\r\n    alphanumericsplus: /[A-Za-z0-9-_+:.]/,\r\n    simpleRefNameWithoutBq: /(?:@alphanumerics@alphanumericsplus*@alphanumerics)+|(?:@alphanumerics+)/,\r\n    simpleRefName: /(?:`@simpleRefNameWithoutBq`|@simpleRefNameWithoutBq)/,\r\n    phrase: /@simpleRefName(?:\\s@simpleRefName)*/,\r\n    citationName: /[A-Za-z][A-Za-z0-9-_.]*/,\r\n    blockLiteralStart: /(?:[!\"#$%&'()*+,-./:;<=>?@\\[\\]^_`{|}~]|[\\s])/,\r\n    precedingChars: /(?:[ -:/'\"<([{])/,\r\n    followingChars: /(?:[ -.,:;!?/'\")\\]}>]|$)/,\r\n    punctuation: /(=|-|~|`|#|\"|\\^|\\+|\\*|:|\\.|'|_|\\+)/,\r\n    tokenizer: {\r\n        root: [\r\n            //sections\r\n            [/^(@punctuation{3,}$){1,1}?/, 'keyword'],\r\n            //line-blocks\r\n            //No rules on it\r\n            //bullet-lists\r\n            [/^\\s*([\\*\\-+‣•]|[a-zA-Z0-9]+\\.|\\([a-zA-Z0-9]+\\)|[a-zA-Z0-9]+\\))\\s/, 'keyword'],\r\n            //literal-blocks\r\n            [/([ ]::)\\s*$/, 'keyword', '@blankLineOfLiteralBlocks'],\r\n            [/(::)\\s*$/, 'keyword', '@blankLineOfLiteralBlocks'],\r\n            { include: '@tables' },\r\n            { include: '@explicitMarkupBlocks' },\r\n            { include: '@inlineMarkup' },\r\n        ],\r\n        explicitMarkupBlocks: [\r\n            //citations\r\n            { include: '@citations' },\r\n            //footnotes\r\n            { include: '@footnotes' },\r\n            //directives\r\n            [/^(\\.\\.\\s)(@simpleRefName)(::\\s)(.*)$/, [{ token: '', next: 'subsequentLines' }, 'keyword', '', '']],\r\n            //hyperlink-targets\r\n            [/^(\\.\\.)(\\s+)(_)(@simpleRefName)(:)(\\s+)(.*)/, [{ token: '', next: 'hyperlinks' }, '', '', 'string.link', '', '', 'string.link']],\r\n            //anonymous-hyperlinks\r\n            [/^((?:(?:\\.\\.)(?:\\s+))?)(__)(:)(\\s+)(.*)/, [{ token: '', next: 'subsequentLines' }, '', '', '', 'string.link']],\r\n            [/^(__\\s+)(.+)/, ['', 'string.link']],\r\n            //substitution-definitions\r\n            [/^(\\.\\.)( \\|)([^| ]+[^|]*[^| ]*)(\\| )(@simpleRefName)(:: .*)/, [{ token: '', next: 'subsequentLines' }, '', 'string.link', '', 'keyword', ''], '@rawBlocks'],\r\n            [/(\\|)([^| ]+[^|]*[^| ]*)(\\|_{0,2})/, ['', 'string.link', '']],\r\n            //comments\r\n            [/^(\\.\\.)([ ].*)$/, [{ token: '', next: '@comments' }, 'comment']],\r\n        ],\r\n        inlineMarkup: [\r\n            { include: '@citationsReference' },\r\n            { include: '@footnotesReference' },\r\n            //hyperlink-references\r\n            [/(@simpleRefName)(_{1,2})/, ['string.link', '']],\r\n            //embedded-uris-and-aliases\r\n            [/(`)([^<`]+\\s+)(<)(.*)(>)(`)(_)/, ['', 'string.link', '', 'string.link', '', '', '']],\r\n            //emphasis\r\n            [/\\*\\*([^\\\\*]|\\*(?!\\*))+\\*\\*/, 'strong'],\r\n            [/\\*[^*]+\\*/, 'emphasis'],\r\n            //inline-literals\r\n            [/(``)((?:[^`]|\\`(?!`))+)(``)/, ['', 'keyword', '']],\r\n            [/(__\\s+)(.+)/, ['', 'keyword']],\r\n            //interpreted-text\r\n            [/(:)((?:@simpleRefNameWithoutBq)?)(:`)([^`]+)(`)/, ['', 'keyword', '', '', '']],\r\n            [/(`)([^`]+)(`:)((?:@simpleRefNameWithoutBq)?)(:)/, ['', '', '', 'keyword', '']],\r\n            [/(`)([^`]+)(`)/, ''],\r\n            //inline-internal-targets\r\n            [/(_`)(@phrase)(`)/, ['', 'string.link', '']],\r\n        ],\r\n        citations: [\r\n            [/^(\\.\\.\\s+\\[)((?:@citationName))(\\]\\s+)(.*)/, [{ token: '', next: '@subsequentLines' }, 'string.link', '', '']],\r\n        ],\r\n        citationsReference: [\r\n            [/(\\[)(@citationName)(\\]_)/, ['', 'string.link', '']],\r\n        ],\r\n        footnotes: [\r\n            [/^(\\.\\.\\s+\\[)((?:[0-9]+))(\\]\\s+.*)/, [{ token: '', next: '@subsequentLines' }, 'string.link', '']],\r\n            [/^(\\.\\.\\s+\\[)((?:#@simpleRefName?))(\\]\\s+)(.*)/, [{ token: '', next: '@subsequentLines' }, 'string.link', '', '']],\r\n            [/^(\\.\\.\\s+\\[)((?:\\*))(\\]\\s+)(.*)/, [{ token: '', next: '@subsequentLines' }, 'string.link', '', '']],\r\n        ],\r\n        footnotesReference: [\r\n            [/(\\[)([0-9]+)(\\])(_)/, ['', 'string.link', '', '']],\r\n            [/(\\[)(#@simpleRefName?)(\\])(_)/, ['', 'string.link', '', '']],\r\n            [/(\\[)(\\*)(\\])(_)/, ['', 'string.link', '', '']]\r\n        ],\r\n        blankLineOfLiteralBlocks: [\r\n            [/^$/, '', '@subsequentLinesOfLiteralBlocks'],\r\n            [/^.*$/, '', '@pop'],\r\n        ],\r\n        subsequentLinesOfLiteralBlocks: [\r\n            [/(@blockLiteralStart+)(.*)/, ['keyword', '']],\r\n            [/^(?!blockLiteralStart)/, '', '@popall']\r\n        ],\r\n        subsequentLines: [\r\n            [/^[\\s]+.*/, ''],\r\n            [/^(?!\\s)/, '', '@pop'],\r\n        ],\r\n        hyperlinks: [\r\n            [/^[\\s]+.*/, 'string.link'],\r\n            [/^(?!\\s)/, '', '@pop'],\r\n        ],\r\n        comments: [\r\n            [/^[\\s]+.*/, 'comment'],\r\n            [/^(?!\\s)/, '', '@pop'],\r\n        ],\r\n        tables: [\r\n            [/\\+-[+-]+/, 'keyword'],\r\n            [/\\+=[+=]+/, 'keyword'],\r\n        ],\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Jlc3RydWN0dXJlZHRleHQvcmVzdHJ1Y3R1cmVkdGV4dC5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9yZXN0cnVjdHVyZWR0ZXh0L3Jlc3RydWN0dXJlZHRleHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuZXhwb3J0IHZhciBjb25mID0ge1xyXG4gICAgYnJhY2tldHM6IFtcclxuICAgICAgICBbJ3snLCAnfSddLFxyXG4gICAgICAgIFsnWycsICddJ10sXHJcbiAgICAgICAgWycoJywgJyknXVxyXG4gICAgXSxcclxuICAgIGF1dG9DbG9zaW5nUGFpcnM6IFtcclxuICAgICAgICB7IG9wZW46ICd7JywgY2xvc2U6ICd9JyB9LFxyXG4gICAgICAgIHsgb3BlbjogJ1snLCBjbG9zZTogJ10nIH0sXHJcbiAgICAgICAgeyBvcGVuOiAnKCcsIGNsb3NlOiAnKScgfSxcclxuICAgICAgICB7IG9wZW46ICc8JywgY2xvc2U6ICc+Jywgbm90SW46IFsnc3RyaW5nJ10gfVxyXG4gICAgXSxcclxuICAgIHN1cnJvdW5kaW5nUGFpcnM6IFtcclxuICAgICAgICB7IG9wZW46ICcoJywgY2xvc2U6ICcpJyB9LFxyXG4gICAgICAgIHsgb3BlbjogJ1snLCBjbG9zZTogJ10nIH0sXHJcbiAgICAgICAgeyBvcGVuOiAnYCcsIGNsb3NlOiAnYCcgfSxcclxuICAgIF0sXHJcbiAgICBmb2xkaW5nOiB7XHJcbiAgICAgICAgbWFya2Vyczoge1xyXG4gICAgICAgICAgICBzdGFydDogbmV3IFJlZ0V4cChcIl5cXFxccyo8IS0tXFxcXHMqIz9yZWdpb25cXFxcYi4qLS0+XCIpLFxyXG4gICAgICAgICAgICBlbmQ6IG5ldyBSZWdFeHAoXCJeXFxcXHMqPCEtLVxcXFxzKiM/ZW5kcmVnaW9uXFxcXGIuKi0tPlwiKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuZXhwb3J0IHZhciBsYW5ndWFnZSA9IHtcclxuICAgIGRlZmF1bHRUb2tlbjogJycsXHJcbiAgICB0b2tlblBvc3RmaXg6ICcucnN0JyxcclxuICAgIGNvbnRyb2w6IC9bXFxcXGAqX1xcW1xcXXt9KCkjK1xcLVxcLiFdLyxcclxuICAgIGVzY2FwZXM6IC9cXFxcKD86QGNvbnRyb2wpLyxcclxuICAgIGVtcHR5OiBbXHJcbiAgICAgICAgJ2FyZWEnLCAnYmFzZScsICdiYXNlZm9udCcsICdicicsICdjb2wnLCAnZnJhbWUnLFxyXG4gICAgICAgICdocicsICdpbWcnLCAnaW5wdXQnLCAnaXNpbmRleCcsICdsaW5rJywgJ21ldGEnLCAncGFyYW0nXHJcbiAgICBdLFxyXG4gICAgYWxwaGFudW1lcmljczogL1tBLVphLXowLTldLyxcclxuICAgIGFscGhhbnVtZXJpY3NwbHVzOiAvW0EtWmEtejAtOS1fKzouXS8sXHJcbiAgICBzaW1wbGVSZWZOYW1lV2l0aG91dEJxOiAvKD86QGFscGhhbnVtZXJpY3NAYWxwaGFudW1lcmljc3BsdXMqQGFscGhhbnVtZXJpY3MpK3woPzpAYWxwaGFudW1lcmljcyspLyxcclxuICAgIHNpbXBsZVJlZk5hbWU6IC8oPzpgQHNpbXBsZVJlZk5hbWVXaXRob3V0QnFgfEBzaW1wbGVSZWZOYW1lV2l0aG91dEJxKS8sXHJcbiAgICBwaHJhc2U6IC9Ac2ltcGxlUmVmTmFtZSg/Olxcc0BzaW1wbGVSZWZOYW1lKSovLFxyXG4gICAgY2l0YXRpb25OYW1lOiAvW0EtWmEtel1bQS1aYS16MC05LV8uXSovLFxyXG4gICAgYmxvY2tMaXRlcmFsU3RhcnQ6IC8oPzpbIVwiIyQlJicoKSorLC0uLzo7PD0+P0BcXFtcXF1eX2B7fH1+XXxbXFxzXSkvLFxyXG4gICAgcHJlY2VkaW5nQ2hhcnM6IC8oPzpbIC06LydcIjwoW3tdKS8sXHJcbiAgICBmb2xsb3dpbmdDaGFyczogLyg/OlsgLS4sOjshPy8nXCIpXFxdfT5dfCQpLyxcclxuICAgIHB1bmN0dWF0aW9uOiAvKD18LXx+fGB8I3xcInxcXF58XFwrfFxcKnw6fFxcLnwnfF98XFwrKS8sXHJcbiAgICB0b2tlbml6ZXI6IHtcclxuICAgICAgICByb290OiBbXHJcbiAgICAgICAgICAgIC8vc2VjdGlvbnNcclxuICAgICAgICAgICAgWy9eKEBwdW5jdHVhdGlvbnszLH0kKXsxLDF9Py8sICdrZXl3b3JkJ10sXHJcbiAgICAgICAgICAgIC8vbGluZS1ibG9ja3NcclxuICAgICAgICAgICAgLy9ObyBydWxlcyBvbiBpdFxyXG4gICAgICAgICAgICAvL2J1bGxldC1saXN0c1xyXG4gICAgICAgICAgICBbL15cXHMqKFtcXCpcXC0r4oCj4oCiXXxbYS16QS1aMC05XStcXC58XFwoW2EtekEtWjAtOV0rXFwpfFthLXpBLVowLTldK1xcKSlcXHMvLCAna2V5d29yZCddLFxyXG4gICAgICAgICAgICAvL2xpdGVyYWwtYmxvY2tzXHJcbiAgICAgICAgICAgIFsvKFsgXTo6KVxccyokLywgJ2tleXdvcmQnLCAnQGJsYW5rTGluZU9mTGl0ZXJhbEJsb2NrcyddLFxyXG4gICAgICAgICAgICBbLyg6OilcXHMqJC8sICdrZXl3b3JkJywgJ0BibGFua0xpbmVPZkxpdGVyYWxCbG9ja3MnXSxcclxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQHRhYmxlcycgfSxcclxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQGV4cGxpY2l0TWFya3VwQmxvY2tzJyB9LFxyXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdAaW5saW5lTWFya3VwJyB9LFxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgZXhwbGljaXRNYXJrdXBCbG9ja3M6IFtcclxuICAgICAgICAgICAgLy9jaXRhdGlvbnNcclxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQGNpdGF0aW9ucycgfSxcclxuICAgICAgICAgICAgLy9mb290bm90ZXNcclxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQGZvb3Rub3RlcycgfSxcclxuICAgICAgICAgICAgLy9kaXJlY3RpdmVzXHJcbiAgICAgICAgICAgIFsvXihcXC5cXC5cXHMpKEBzaW1wbGVSZWZOYW1lKSg6OlxccykoLiopJC8sIFt7IHRva2VuOiAnJywgbmV4dDogJ3N1YnNlcXVlbnRMaW5lcycgfSwgJ2tleXdvcmQnLCAnJywgJyddXSxcclxuICAgICAgICAgICAgLy9oeXBlcmxpbmstdGFyZ2V0c1xyXG4gICAgICAgICAgICBbL14oXFwuXFwuKShcXHMrKShfKShAc2ltcGxlUmVmTmFtZSkoOikoXFxzKykoLiopLywgW3sgdG9rZW46ICcnLCBuZXh0OiAnaHlwZXJsaW5rcycgfSwgJycsICcnLCAnc3RyaW5nLmxpbmsnLCAnJywgJycsICdzdHJpbmcubGluayddXSxcclxuICAgICAgICAgICAgLy9hbm9ueW1vdXMtaHlwZXJsaW5rc1xyXG4gICAgICAgICAgICBbL14oKD86KD86XFwuXFwuKSg/OlxccyspKT8pKF9fKSg6KShcXHMrKSguKikvLCBbeyB0b2tlbjogJycsIG5leHQ6ICdzdWJzZXF1ZW50TGluZXMnIH0sICcnLCAnJywgJycsICdzdHJpbmcubGluayddXSxcclxuICAgICAgICAgICAgWy9eKF9fXFxzKykoLispLywgWycnLCAnc3RyaW5nLmxpbmsnXV0sXHJcbiAgICAgICAgICAgIC8vc3Vic3RpdHV0aW9uLWRlZmluaXRpb25zXHJcbiAgICAgICAgICAgIFsvXihcXC5cXC4pKCBcXHwpKFtefCBdK1tefF0qW158IF0qKShcXHwgKShAc2ltcGxlUmVmTmFtZSkoOjogLiopLywgW3sgdG9rZW46ICcnLCBuZXh0OiAnc3Vic2VxdWVudExpbmVzJyB9LCAnJywgJ3N0cmluZy5saW5rJywgJycsICdrZXl3b3JkJywgJyddLCAnQHJhd0Jsb2NrcyddLFxyXG4gICAgICAgICAgICBbLyhcXHwpKFtefCBdK1tefF0qW158IF0qKShcXHxfezAsMn0pLywgWycnLCAnc3RyaW5nLmxpbmsnLCAnJ11dLFxyXG4gICAgICAgICAgICAvL2NvbW1lbnRzXHJcbiAgICAgICAgICAgIFsvXihcXC5cXC4pKFsgXS4qKSQvLCBbeyB0b2tlbjogJycsIG5leHQ6ICdAY29tbWVudHMnIH0sICdjb21tZW50J11dLFxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgaW5saW5lTWFya3VwOiBbXHJcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ0BjaXRhdGlvbnNSZWZlcmVuY2UnIH0sXHJcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ0Bmb290bm90ZXNSZWZlcmVuY2UnIH0sXHJcbiAgICAgICAgICAgIC8vaHlwZXJsaW5rLXJlZmVyZW5jZXNcclxuICAgICAgICAgICAgWy8oQHNpbXBsZVJlZk5hbWUpKF97MSwyfSkvLCBbJ3N0cmluZy5saW5rJywgJyddXSxcclxuICAgICAgICAgICAgLy9lbWJlZGRlZC11cmlzLWFuZC1hbGlhc2VzXHJcbiAgICAgICAgICAgIFsvKGApKFtePGBdK1xccyspKDwpKC4qKSg+KShgKShfKS8sIFsnJywgJ3N0cmluZy5saW5rJywgJycsICdzdHJpbmcubGluaycsICcnLCAnJywgJyddXSxcclxuICAgICAgICAgICAgLy9lbXBoYXNpc1xyXG4gICAgICAgICAgICBbL1xcKlxcKihbXlxcXFwqXXxcXCooPyFcXCopKStcXCpcXCovLCAnc3Ryb25nJ10sXHJcbiAgICAgICAgICAgIFsvXFwqW14qXStcXCovLCAnZW1waGFzaXMnXSxcclxuICAgICAgICAgICAgLy9pbmxpbmUtbGl0ZXJhbHNcclxuICAgICAgICAgICAgWy8oYGApKCg/OlteYF18XFxgKD8hYCkpKykoYGApLywgWycnLCAna2V5d29yZCcsICcnXV0sXHJcbiAgICAgICAgICAgIFsvKF9fXFxzKykoLispLywgWycnLCAna2V5d29yZCddXSxcclxuICAgICAgICAgICAgLy9pbnRlcnByZXRlZC10ZXh0XHJcbiAgICAgICAgICAgIFsvKDopKCg/OkBzaW1wbGVSZWZOYW1lV2l0aG91dEJxKT8pKDpgKShbXmBdKykoYCkvLCBbJycsICdrZXl3b3JkJywgJycsICcnLCAnJ11dLFxyXG4gICAgICAgICAgICBbLyhgKShbXmBdKykoYDopKCg/OkBzaW1wbGVSZWZOYW1lV2l0aG91dEJxKT8pKDopLywgWycnLCAnJywgJycsICdrZXl3b3JkJywgJyddXSxcclxuICAgICAgICAgICAgWy8oYCkoW15gXSspKGApLywgJyddLFxyXG4gICAgICAgICAgICAvL2lubGluZS1pbnRlcm5hbC10YXJnZXRzXHJcbiAgICAgICAgICAgIFsvKF9gKShAcGhyYXNlKShgKS8sIFsnJywgJ3N0cmluZy5saW5rJywgJyddXSxcclxuICAgICAgICBdLFxyXG4gICAgICAgIGNpdGF0aW9uczogW1xyXG4gICAgICAgICAgICBbL14oXFwuXFwuXFxzK1xcWykoKD86QGNpdGF0aW9uTmFtZSkpKFxcXVxccyspKC4qKS8sIFt7IHRva2VuOiAnJywgbmV4dDogJ0BzdWJzZXF1ZW50TGluZXMnIH0sICdzdHJpbmcubGluaycsICcnLCAnJ11dLFxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgY2l0YXRpb25zUmVmZXJlbmNlOiBbXHJcbiAgICAgICAgICAgIFsvKFxcWykoQGNpdGF0aW9uTmFtZSkoXFxdXykvLCBbJycsICdzdHJpbmcubGluaycsICcnXV0sXHJcbiAgICAgICAgXSxcclxuICAgICAgICBmb290bm90ZXM6IFtcclxuICAgICAgICAgICAgWy9eKFxcLlxcLlxccytcXFspKCg/OlswLTldKykpKFxcXVxccysuKikvLCBbeyB0b2tlbjogJycsIG5leHQ6ICdAc3Vic2VxdWVudExpbmVzJyB9LCAnc3RyaW5nLmxpbmsnLCAnJ11dLFxyXG4gICAgICAgICAgICBbL14oXFwuXFwuXFxzK1xcWykoKD86I0BzaW1wbGVSZWZOYW1lPykpKFxcXVxccyspKC4qKS8sIFt7IHRva2VuOiAnJywgbmV4dDogJ0BzdWJzZXF1ZW50TGluZXMnIH0sICdzdHJpbmcubGluaycsICcnLCAnJ11dLFxyXG4gICAgICAgICAgICBbL14oXFwuXFwuXFxzK1xcWykoKD86XFwqKSkoXFxdXFxzKykoLiopLywgW3sgdG9rZW46ICcnLCBuZXh0OiAnQHN1YnNlcXVlbnRMaW5lcycgfSwgJ3N0cmluZy5saW5rJywgJycsICcnXV0sXHJcbiAgICAgICAgXSxcclxuICAgICAgICBmb290bm90ZXNSZWZlcmVuY2U6IFtcclxuICAgICAgICAgICAgWy8oXFxbKShbMC05XSspKFxcXSkoXykvLCBbJycsICdzdHJpbmcubGluaycsICcnLCAnJ11dLFxyXG4gICAgICAgICAgICBbLyhcXFspKCNAc2ltcGxlUmVmTmFtZT8pKFxcXSkoXykvLCBbJycsICdzdHJpbmcubGluaycsICcnLCAnJ11dLFxyXG4gICAgICAgICAgICBbLyhcXFspKFxcKikoXFxdKShfKS8sIFsnJywgJ3N0cmluZy5saW5rJywgJycsICcnXV1cclxuICAgICAgICBdLFxyXG4gICAgICAgIGJsYW5rTGluZU9mTGl0ZXJhbEJsb2NrczogW1xyXG4gICAgICAgICAgICBbL14kLywgJycsICdAc3Vic2VxdWVudExpbmVzT2ZMaXRlcmFsQmxvY2tzJ10sXHJcbiAgICAgICAgICAgIFsvXi4qJC8sICcnLCAnQHBvcCddLFxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgc3Vic2VxdWVudExpbmVzT2ZMaXRlcmFsQmxvY2tzOiBbXHJcbiAgICAgICAgICAgIFsvKEBibG9ja0xpdGVyYWxTdGFydCspKC4qKS8sIFsna2V5d29yZCcsICcnXV0sXHJcbiAgICAgICAgICAgIFsvXig/IWJsb2NrTGl0ZXJhbFN0YXJ0KS8sICcnLCAnQHBvcGFsbCddXHJcbiAgICAgICAgXSxcclxuICAgICAgICBzdWJzZXF1ZW50TGluZXM6IFtcclxuICAgICAgICAgICAgWy9eW1xcc10rLiovLCAnJ10sXHJcbiAgICAgICAgICAgIFsvXig/IVxccykvLCAnJywgJ0Bwb3AnXSxcclxuICAgICAgICBdLFxyXG4gICAgICAgIGh5cGVybGlua3M6IFtcclxuICAgICAgICAgICAgWy9eW1xcc10rLiovLCAnc3RyaW5nLmxpbmsnXSxcclxuICAgICAgICAgICAgWy9eKD8hXFxzKS8sICcnLCAnQHBvcCddLFxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgY29tbWVudHM6IFtcclxuICAgICAgICAgICAgWy9eW1xcc10rLiovLCAnY29tbWVudCddLFxyXG4gICAgICAgICAgICBbL14oPyFcXHMpLywgJycsICdAcG9wJ10sXHJcbiAgICAgICAgXSxcclxuICAgICAgICB0YWJsZXM6IFtcclxuICAgICAgICAgICAgWy9cXCstWystXSsvLCAna2V5d29yZCddLFxyXG4gICAgICAgICAgICBbL1xcKz1bKz1dKy8sICdrZXl3b3JkJ10sXHJcbiAgICAgICAgXSxcclxuICAgIH1cclxufTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.js\n");

/***/ })

}]);