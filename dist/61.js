(this["webpackJsonp"] = this["webpackJsonp"] || []).push([[61],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/vb/vb.js":
/*!********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/vb/vb.js ***!
  \********************************************************************/
/*! exports provided: conf, language */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nvar conf = {\r\n    comments: {\r\n        lineComment: '\\'',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'], ['[', ']'], ['(', ')'], ['<', '>'],\r\n        ['addhandler', 'end addhandler'],\r\n        ['class', 'end class'],\r\n        ['enum', 'end enum'],\r\n        ['event', 'end event'],\r\n        ['function', 'end function'],\r\n        ['get', 'end get'],\r\n        ['if', 'end if'],\r\n        ['interface', 'end interface'],\r\n        ['module', 'end module'],\r\n        ['namespace', 'end namespace'],\r\n        ['operator', 'end operator'],\r\n        ['property', 'end property'],\r\n        ['raiseevent', 'end raiseevent'],\r\n        ['removehandler', 'end removehandler'],\r\n        ['select', 'end select'],\r\n        ['set', 'end set'],\r\n        ['structure', 'end structure'],\r\n        ['sub', 'end sub'],\r\n        ['synclock', 'end synclock'],\r\n        ['try', 'end try'],\r\n        ['while', 'end while'],\r\n        ['with', 'end with'],\r\n        ['using', 'end using'],\r\n        ['do', 'loop'],\r\n        ['for', 'next']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '<', close: '>', notIn: ['string', 'comment'] },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#Region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#End Region\\\\b\")\r\n        }\r\n    }\r\n};\r\nvar language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.vb',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { token: 'delimiter.bracket', open: '{', close: '}' },\r\n        { token: 'delimiter.array', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.angle', open: '<', close: '>' },\r\n        // Special bracket statement pairs\r\n        // according to https://msdn.microsoft.com/en-us/library/tsw2a11z.aspx\r\n        { token: 'keyword.tag-addhandler', open: 'addhandler', close: 'end addhandler' },\r\n        { token: 'keyword.tag-class', open: 'class', close: 'end class' },\r\n        { token: 'keyword.tag-enum', open: 'enum', close: 'end enum' },\r\n        { token: 'keyword.tag-event', open: 'event', close: 'end event' },\r\n        { token: 'keyword.tag-function', open: 'function', close: 'end function' },\r\n        { token: 'keyword.tag-get', open: 'get', close: 'end get' },\r\n        { token: 'keyword.tag-if', open: 'if', close: 'end if' },\r\n        { token: 'keyword.tag-interface', open: 'interface', close: 'end interface' },\r\n        { token: 'keyword.tag-module', open: 'module', close: 'end module' },\r\n        { token: 'keyword.tag-namespace', open: 'namespace', close: 'end namespace' },\r\n        { token: 'keyword.tag-operator', open: 'operator', close: 'end operator' },\r\n        { token: 'keyword.tag-property', open: 'property', close: 'end property' },\r\n        { token: 'keyword.tag-raiseevent', open: 'raiseevent', close: 'end raiseevent' },\r\n        { token: 'keyword.tag-removehandler', open: 'removehandler', close: 'end removehandler' },\r\n        { token: 'keyword.tag-select', open: 'select', close: 'end select' },\r\n        { token: 'keyword.tag-set', open: 'set', close: 'end set' },\r\n        { token: 'keyword.tag-structure', open: 'structure', close: 'end structure' },\r\n        { token: 'keyword.tag-sub', open: 'sub', close: 'end sub' },\r\n        { token: 'keyword.tag-synclock', open: 'synclock', close: 'end synclock' },\r\n        { token: 'keyword.tag-try', open: 'try', close: 'end try' },\r\n        { token: 'keyword.tag-while', open: 'while', close: 'end while' },\r\n        { token: 'keyword.tag-with', open: 'with', close: 'end with' },\r\n        // Other pairs\r\n        { token: 'keyword.tag-using', open: 'using', close: 'end using' },\r\n        { token: 'keyword.tag-do', open: 'do', close: 'loop' },\r\n        { token: 'keyword.tag-for', open: 'for', close: 'next' }\r\n    ],\r\n    keywords: [\r\n        'AddHandler', 'AddressOf', 'Alias', 'And', 'AndAlso', 'As', 'Async', 'Boolean', 'ByRef', 'Byte', 'ByVal', 'Call',\r\n        'Case', 'Catch', 'CBool', 'CByte', 'CChar', 'CDate', 'CDbl', 'CDec', 'Char', 'CInt', 'Class', 'CLng',\r\n        'CObj', 'Const', 'Continue', 'CSByte', 'CShort', 'CSng', 'CStr', 'CType', 'CUInt', 'CULng', 'CUShort',\r\n        'Date', 'Decimal', 'Declare', 'Default', 'Delegate', 'Dim', 'DirectCast', 'Do', 'Double', 'Each', 'Else',\r\n        'ElseIf', 'End', 'EndIf', 'Enum', 'Erase', 'Error', 'Event', 'Exit', 'False', 'Finally', 'For', 'Friend',\r\n        'Function', 'Get', 'GetType', 'GetXMLNamespace', 'Global', 'GoSub', 'GoTo', 'Handles', 'If', 'Implements',\r\n        'Imports', 'In', 'Inherits', 'Integer', 'Interface', 'Is', 'IsNot', 'Let', 'Lib', 'Like', 'Long', 'Loop',\r\n        'Me', 'Mod', 'Module', 'MustInherit', 'MustOverride', 'MyBase', 'MyClass', 'NameOf', 'Namespace', 'Narrowing', 'New',\r\n        'Next', 'Not', 'Nothing', 'NotInheritable', 'NotOverridable', 'Object', 'Of', 'On', 'Operator', 'Option',\r\n        'Optional', 'Or', 'OrElse', 'Out', 'Overloads', 'Overridable', 'Overrides', 'ParamArray', 'Partial',\r\n        'Private', 'Property', 'Protected', 'Public', 'RaiseEvent', 'ReadOnly', 'ReDim', 'RemoveHandler', 'Resume',\r\n        'Return', 'SByte', 'Select', 'Set', 'Shadows', 'Shared', 'Short', 'Single', 'Static', 'Step', 'Stop',\r\n        'String', 'Structure', 'Sub', 'SyncLock', 'Then', 'Throw', 'To', 'True', 'Try', 'TryCast', 'TypeOf',\r\n        'UInteger', 'ULong', 'UShort', 'Using', 'Variant', 'Wend', 'When', 'While', 'Widening', 'With', 'WithEvents',\r\n        'WriteOnly', 'Xor'\r\n    ],\r\n    tagwords: [\r\n        'If', 'Sub', 'Select', 'Try', 'Class', 'Enum',\r\n        'Function', 'Get', 'Interface', 'Module', 'Namespace', 'Operator', 'Set', 'Structure', 'Using', 'While', 'With',\r\n        'Do', 'Loop', 'For', 'Next', 'Property', 'Continue', 'AddHandler', 'RemoveHandler', 'Event', 'RaiseEvent', 'SyncLock'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?;\\.,:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    integersuffix: /U?[DI%L&S@]?/,\r\n    floatsuffix: /[R#F!]?/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // special ending tag-words\r\n            [/next(?!\\w)/, { token: 'keyword.tag-for' }],\r\n            [/loop(?!\\w)/, { token: 'keyword.tag-do' }],\r\n            // usual ending tags\r\n            [/end\\s+(?!for|do)(addhandler|class|enum|event|function|get|if|interface|module|namespace|operator|property|raiseevent|removehandler|select|set|structure|sub|synclock|try|while|with|using)/, { token: 'keyword.tag-$1' }],\r\n            // identifiers, tagwords, and keywords\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@tagwords': { token: 'keyword.tag-$0' },\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // Preprocessor directive\r\n            [/^\\s*#\\w+/, 'keyword'],\r\n            // numbers\r\n            [/\\d*\\d+e([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/\\d*\\.\\d+(e[\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/&H[0-9a-f]+(@integersuffix)/, 'number.hex'],\r\n            [/&0[0-7]+(@integersuffix)/, 'number.octal'],\r\n            [/\\d+(@integersuffix)/, 'number'],\r\n            // date literal\r\n            [/#.*#/, 'number'],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // strings\r\n            [/\"/, 'string', '@string'],\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/(\\'|REM(?!\\w)).*$/, 'comment'],\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"C?/, 'string', '@pop']\r\n        ],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3ZiL3ZiLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3ZiL3ZiLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmV4cG9ydCB2YXIgY29uZiA9IHtcclxuICAgIGNvbW1lbnRzOiB7XHJcbiAgICAgICAgbGluZUNvbW1lbnQ6ICdcXCcnLFxyXG4gICAgICAgIGJsb2NrQ29tbWVudDogWycvKicsICcqLyddLFxyXG4gICAgfSxcclxuICAgIGJyYWNrZXRzOiBbXHJcbiAgICAgICAgWyd7JywgJ30nXSwgWydbJywgJ10nXSwgWycoJywgJyknXSwgWyc8JywgJz4nXSxcclxuICAgICAgICBbJ2FkZGhhbmRsZXInLCAnZW5kIGFkZGhhbmRsZXInXSxcclxuICAgICAgICBbJ2NsYXNzJywgJ2VuZCBjbGFzcyddLFxyXG4gICAgICAgIFsnZW51bScsICdlbmQgZW51bSddLFxyXG4gICAgICAgIFsnZXZlbnQnLCAnZW5kIGV2ZW50J10sXHJcbiAgICAgICAgWydmdW5jdGlvbicsICdlbmQgZnVuY3Rpb24nXSxcclxuICAgICAgICBbJ2dldCcsICdlbmQgZ2V0J10sXHJcbiAgICAgICAgWydpZicsICdlbmQgaWYnXSxcclxuICAgICAgICBbJ2ludGVyZmFjZScsICdlbmQgaW50ZXJmYWNlJ10sXHJcbiAgICAgICAgWydtb2R1bGUnLCAnZW5kIG1vZHVsZSddLFxyXG4gICAgICAgIFsnbmFtZXNwYWNlJywgJ2VuZCBuYW1lc3BhY2UnXSxcclxuICAgICAgICBbJ29wZXJhdG9yJywgJ2VuZCBvcGVyYXRvciddLFxyXG4gICAgICAgIFsncHJvcGVydHknLCAnZW5kIHByb3BlcnR5J10sXHJcbiAgICAgICAgWydyYWlzZWV2ZW50JywgJ2VuZCByYWlzZWV2ZW50J10sXHJcbiAgICAgICAgWydyZW1vdmVoYW5kbGVyJywgJ2VuZCByZW1vdmVoYW5kbGVyJ10sXHJcbiAgICAgICAgWydzZWxlY3QnLCAnZW5kIHNlbGVjdCddLFxyXG4gICAgICAgIFsnc2V0JywgJ2VuZCBzZXQnXSxcclxuICAgICAgICBbJ3N0cnVjdHVyZScsICdlbmQgc3RydWN0dXJlJ10sXHJcbiAgICAgICAgWydzdWInLCAnZW5kIHN1YiddLFxyXG4gICAgICAgIFsnc3luY2xvY2snLCAnZW5kIHN5bmNsb2NrJ10sXHJcbiAgICAgICAgWyd0cnknLCAnZW5kIHRyeSddLFxyXG4gICAgICAgIFsnd2hpbGUnLCAnZW5kIHdoaWxlJ10sXHJcbiAgICAgICAgWyd3aXRoJywgJ2VuZCB3aXRoJ10sXHJcbiAgICAgICAgWyd1c2luZycsICdlbmQgdXNpbmcnXSxcclxuICAgICAgICBbJ2RvJywgJ2xvb3AnXSxcclxuICAgICAgICBbJ2ZvcicsICduZXh0J11cclxuICAgIF0sXHJcbiAgICBhdXRvQ2xvc2luZ1BhaXJzOiBbXHJcbiAgICAgICAgeyBvcGVuOiAneycsIGNsb3NlOiAnfScsIG5vdEluOiBbJ3N0cmluZycsICdjb21tZW50J10gfSxcclxuICAgICAgICB7IG9wZW46ICdbJywgY2xvc2U6ICddJywgbm90SW46IFsnc3RyaW5nJywgJ2NvbW1lbnQnXSB9LFxyXG4gICAgICAgIHsgb3BlbjogJygnLCBjbG9zZTogJyknLCBub3RJbjogWydzdHJpbmcnLCAnY29tbWVudCddIH0sXHJcbiAgICAgICAgeyBvcGVuOiAnXCInLCBjbG9zZTogJ1wiJywgbm90SW46IFsnc3RyaW5nJywgJ2NvbW1lbnQnXSB9LFxyXG4gICAgICAgIHsgb3BlbjogJzwnLCBjbG9zZTogJz4nLCBub3RJbjogWydzdHJpbmcnLCAnY29tbWVudCddIH0sXHJcbiAgICBdLFxyXG4gICAgZm9sZGluZzoge1xyXG4gICAgICAgIG1hcmtlcnM6IHtcclxuICAgICAgICAgICAgc3RhcnQ6IG5ldyBSZWdFeHAoXCJeXFxcXHMqI1JlZ2lvblxcXFxiXCIpLFxyXG4gICAgICAgICAgICBlbmQ6IG5ldyBSZWdFeHAoXCJeXFxcXHMqI0VuZCBSZWdpb25cXFxcYlwiKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuZXhwb3J0IHZhciBsYW5ndWFnZSA9IHtcclxuICAgIGRlZmF1bHRUb2tlbjogJycsXHJcbiAgICB0b2tlblBvc3RmaXg6ICcudmInLFxyXG4gICAgaWdub3JlQ2FzZTogdHJ1ZSxcclxuICAgIGJyYWNrZXRzOiBbXHJcbiAgICAgICAgeyB0b2tlbjogJ2RlbGltaXRlci5icmFja2V0Jywgb3BlbjogJ3snLCBjbG9zZTogJ30nIH0sXHJcbiAgICAgICAgeyB0b2tlbjogJ2RlbGltaXRlci5hcnJheScsIG9wZW46ICdbJywgY2xvc2U6ICddJyB9LFxyXG4gICAgICAgIHsgdG9rZW46ICdkZWxpbWl0ZXIucGFyZW50aGVzaXMnLCBvcGVuOiAnKCcsIGNsb3NlOiAnKScgfSxcclxuICAgICAgICB7IHRva2VuOiAnZGVsaW1pdGVyLmFuZ2xlJywgb3BlbjogJzwnLCBjbG9zZTogJz4nIH0sXHJcbiAgICAgICAgLy8gU3BlY2lhbCBicmFja2V0IHN0YXRlbWVudCBwYWlyc1xyXG4gICAgICAgIC8vIGFjY29yZGluZyB0byBodHRwczovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L3RzdzJhMTF6LmFzcHhcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctYWRkaGFuZGxlcicsIG9wZW46ICdhZGRoYW5kbGVyJywgY2xvc2U6ICdlbmQgYWRkaGFuZGxlcicgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctY2xhc3MnLCBvcGVuOiAnY2xhc3MnLCBjbG9zZTogJ2VuZCBjbGFzcycgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctZW51bScsIG9wZW46ICdlbnVtJywgY2xvc2U6ICdlbmQgZW51bScgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctZXZlbnQnLCBvcGVuOiAnZXZlbnQnLCBjbG9zZTogJ2VuZCBldmVudCcgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctZnVuY3Rpb24nLCBvcGVuOiAnZnVuY3Rpb24nLCBjbG9zZTogJ2VuZCBmdW5jdGlvbicgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctZ2V0Jywgb3BlbjogJ2dldCcsIGNsb3NlOiAnZW5kIGdldCcgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctaWYnLCBvcGVuOiAnaWYnLCBjbG9zZTogJ2VuZCBpZicgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctaW50ZXJmYWNlJywgb3BlbjogJ2ludGVyZmFjZScsIGNsb3NlOiAnZW5kIGludGVyZmFjZScgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctbW9kdWxlJywgb3BlbjogJ21vZHVsZScsIGNsb3NlOiAnZW5kIG1vZHVsZScgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctbmFtZXNwYWNlJywgb3BlbjogJ25hbWVzcGFjZScsIGNsb3NlOiAnZW5kIG5hbWVzcGFjZScgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctb3BlcmF0b3InLCBvcGVuOiAnb3BlcmF0b3InLCBjbG9zZTogJ2VuZCBvcGVyYXRvcicgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctcHJvcGVydHknLCBvcGVuOiAncHJvcGVydHknLCBjbG9zZTogJ2VuZCBwcm9wZXJ0eScgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctcmFpc2VldmVudCcsIG9wZW46ICdyYWlzZWV2ZW50JywgY2xvc2U6ICdlbmQgcmFpc2VldmVudCcgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctcmVtb3ZlaGFuZGxlcicsIG9wZW46ICdyZW1vdmVoYW5kbGVyJywgY2xvc2U6ICdlbmQgcmVtb3ZlaGFuZGxlcicgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctc2VsZWN0Jywgb3BlbjogJ3NlbGVjdCcsIGNsb3NlOiAnZW5kIHNlbGVjdCcgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctc2V0Jywgb3BlbjogJ3NldCcsIGNsb3NlOiAnZW5kIHNldCcgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctc3RydWN0dXJlJywgb3BlbjogJ3N0cnVjdHVyZScsIGNsb3NlOiAnZW5kIHN0cnVjdHVyZScgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctc3ViJywgb3BlbjogJ3N1YicsIGNsb3NlOiAnZW5kIHN1YicgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctc3luY2xvY2snLCBvcGVuOiAnc3luY2xvY2snLCBjbG9zZTogJ2VuZCBzeW5jbG9jaycgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctdHJ5Jywgb3BlbjogJ3RyeScsIGNsb3NlOiAnZW5kIHRyeScgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctd2hpbGUnLCBvcGVuOiAnd2hpbGUnLCBjbG9zZTogJ2VuZCB3aGlsZScgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctd2l0aCcsIG9wZW46ICd3aXRoJywgY2xvc2U6ICdlbmQgd2l0aCcgfSxcclxuICAgICAgICAvLyBPdGhlciBwYWlyc1xyXG4gICAgICAgIHsgdG9rZW46ICdrZXl3b3JkLnRhZy11c2luZycsIG9wZW46ICd1c2luZycsIGNsb3NlOiAnZW5kIHVzaW5nJyB9LFxyXG4gICAgICAgIHsgdG9rZW46ICdrZXl3b3JkLnRhZy1kbycsIG9wZW46ICdkbycsIGNsb3NlOiAnbG9vcCcgfSxcclxuICAgICAgICB7IHRva2VuOiAna2V5d29yZC50YWctZm9yJywgb3BlbjogJ2ZvcicsIGNsb3NlOiAnbmV4dCcgfVxyXG4gICAgXSxcclxuICAgIGtleXdvcmRzOiBbXHJcbiAgICAgICAgJ0FkZEhhbmRsZXInLCAnQWRkcmVzc09mJywgJ0FsaWFzJywgJ0FuZCcsICdBbmRBbHNvJywgJ0FzJywgJ0FzeW5jJywgJ0Jvb2xlYW4nLCAnQnlSZWYnLCAnQnl0ZScsICdCeVZhbCcsICdDYWxsJyxcclxuICAgICAgICAnQ2FzZScsICdDYXRjaCcsICdDQm9vbCcsICdDQnl0ZScsICdDQ2hhcicsICdDRGF0ZScsICdDRGJsJywgJ0NEZWMnLCAnQ2hhcicsICdDSW50JywgJ0NsYXNzJywgJ0NMbmcnLFxyXG4gICAgICAgICdDT2JqJywgJ0NvbnN0JywgJ0NvbnRpbnVlJywgJ0NTQnl0ZScsICdDU2hvcnQnLCAnQ1NuZycsICdDU3RyJywgJ0NUeXBlJywgJ0NVSW50JywgJ0NVTG5nJywgJ0NVU2hvcnQnLFxyXG4gICAgICAgICdEYXRlJywgJ0RlY2ltYWwnLCAnRGVjbGFyZScsICdEZWZhdWx0JywgJ0RlbGVnYXRlJywgJ0RpbScsICdEaXJlY3RDYXN0JywgJ0RvJywgJ0RvdWJsZScsICdFYWNoJywgJ0Vsc2UnLFxyXG4gICAgICAgICdFbHNlSWYnLCAnRW5kJywgJ0VuZElmJywgJ0VudW0nLCAnRXJhc2UnLCAnRXJyb3InLCAnRXZlbnQnLCAnRXhpdCcsICdGYWxzZScsICdGaW5hbGx5JywgJ0ZvcicsICdGcmllbmQnLFxyXG4gICAgICAgICdGdW5jdGlvbicsICdHZXQnLCAnR2V0VHlwZScsICdHZXRYTUxOYW1lc3BhY2UnLCAnR2xvYmFsJywgJ0dvU3ViJywgJ0dvVG8nLCAnSGFuZGxlcycsICdJZicsICdJbXBsZW1lbnRzJyxcclxuICAgICAgICAnSW1wb3J0cycsICdJbicsICdJbmhlcml0cycsICdJbnRlZ2VyJywgJ0ludGVyZmFjZScsICdJcycsICdJc05vdCcsICdMZXQnLCAnTGliJywgJ0xpa2UnLCAnTG9uZycsICdMb29wJyxcclxuICAgICAgICAnTWUnLCAnTW9kJywgJ01vZHVsZScsICdNdXN0SW5oZXJpdCcsICdNdXN0T3ZlcnJpZGUnLCAnTXlCYXNlJywgJ015Q2xhc3MnLCAnTmFtZU9mJywgJ05hbWVzcGFjZScsICdOYXJyb3dpbmcnLCAnTmV3JyxcclxuICAgICAgICAnTmV4dCcsICdOb3QnLCAnTm90aGluZycsICdOb3RJbmhlcml0YWJsZScsICdOb3RPdmVycmlkYWJsZScsICdPYmplY3QnLCAnT2YnLCAnT24nLCAnT3BlcmF0b3InLCAnT3B0aW9uJyxcclxuICAgICAgICAnT3B0aW9uYWwnLCAnT3InLCAnT3JFbHNlJywgJ091dCcsICdPdmVybG9hZHMnLCAnT3ZlcnJpZGFibGUnLCAnT3ZlcnJpZGVzJywgJ1BhcmFtQXJyYXknLCAnUGFydGlhbCcsXHJcbiAgICAgICAgJ1ByaXZhdGUnLCAnUHJvcGVydHknLCAnUHJvdGVjdGVkJywgJ1B1YmxpYycsICdSYWlzZUV2ZW50JywgJ1JlYWRPbmx5JywgJ1JlRGltJywgJ1JlbW92ZUhhbmRsZXInLCAnUmVzdW1lJyxcclxuICAgICAgICAnUmV0dXJuJywgJ1NCeXRlJywgJ1NlbGVjdCcsICdTZXQnLCAnU2hhZG93cycsICdTaGFyZWQnLCAnU2hvcnQnLCAnU2luZ2xlJywgJ1N0YXRpYycsICdTdGVwJywgJ1N0b3AnLFxyXG4gICAgICAgICdTdHJpbmcnLCAnU3RydWN0dXJlJywgJ1N1YicsICdTeW5jTG9jaycsICdUaGVuJywgJ1Rocm93JywgJ1RvJywgJ1RydWUnLCAnVHJ5JywgJ1RyeUNhc3QnLCAnVHlwZU9mJyxcclxuICAgICAgICAnVUludGVnZXInLCAnVUxvbmcnLCAnVVNob3J0JywgJ1VzaW5nJywgJ1ZhcmlhbnQnLCAnV2VuZCcsICdXaGVuJywgJ1doaWxlJywgJ1dpZGVuaW5nJywgJ1dpdGgnLCAnV2l0aEV2ZW50cycsXHJcbiAgICAgICAgJ1dyaXRlT25seScsICdYb3InXHJcbiAgICBdLFxyXG4gICAgdGFnd29yZHM6IFtcclxuICAgICAgICAnSWYnLCAnU3ViJywgJ1NlbGVjdCcsICdUcnknLCAnQ2xhc3MnLCAnRW51bScsXHJcbiAgICAgICAgJ0Z1bmN0aW9uJywgJ0dldCcsICdJbnRlcmZhY2UnLCAnTW9kdWxlJywgJ05hbWVzcGFjZScsICdPcGVyYXRvcicsICdTZXQnLCAnU3RydWN0dXJlJywgJ1VzaW5nJywgJ1doaWxlJywgJ1dpdGgnLFxyXG4gICAgICAgICdEbycsICdMb29wJywgJ0ZvcicsICdOZXh0JywgJ1Byb3BlcnR5JywgJ0NvbnRpbnVlJywgJ0FkZEhhbmRsZXInLCAnUmVtb3ZlSGFuZGxlcicsICdFdmVudCcsICdSYWlzZUV2ZW50JywgJ1N5bmNMb2NrJ1xyXG4gICAgXSxcclxuICAgIC8vIHdlIGluY2x1ZGUgdGhlc2UgY29tbW9uIHJlZ3VsYXIgZXhwcmVzc2lvbnNcclxuICAgIHN5bWJvbHM6IC9bPT48IX4/O1xcLiw6JnwrXFwtKlxcL1xcXiVdKy8sXHJcbiAgICBlc2NhcGVzOiAvXFxcXCg/OlthYmZucnR2XFxcXFwiJ118eFswLTlBLUZhLWZdezEsNH18dVswLTlBLUZhLWZdezR9fFVbMC05QS1GYS1mXXs4fSkvLFxyXG4gICAgaW50ZWdlcnN1ZmZpeDogL1U/W0RJJUwmU0BdPy8sXHJcbiAgICBmbG9hdHN1ZmZpeDogL1tSI0YhXT8vLFxyXG4gICAgLy8gVGhlIG1haW4gdG9rZW5pemVyIGZvciBvdXIgbGFuZ3VhZ2VzXHJcbiAgICB0b2tlbml6ZXI6IHtcclxuICAgICAgICByb290OiBbXHJcbiAgICAgICAgICAgIC8vIHdoaXRlc3BhY2VcclxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQHdoaXRlc3BhY2UnIH0sXHJcbiAgICAgICAgICAgIC8vIHNwZWNpYWwgZW5kaW5nIHRhZy13b3Jkc1xyXG4gICAgICAgICAgICBbL25leHQoPyFcXHcpLywgeyB0b2tlbjogJ2tleXdvcmQudGFnLWZvcicgfV0sXHJcbiAgICAgICAgICAgIFsvbG9vcCg/IVxcdykvLCB7IHRva2VuOiAna2V5d29yZC50YWctZG8nIH1dLFxyXG4gICAgICAgICAgICAvLyB1c3VhbCBlbmRpbmcgdGFnc1xyXG4gICAgICAgICAgICBbL2VuZFxccysoPyFmb3J8ZG8pKGFkZGhhbmRsZXJ8Y2xhc3N8ZW51bXxldmVudHxmdW5jdGlvbnxnZXR8aWZ8aW50ZXJmYWNlfG1vZHVsZXxuYW1lc3BhY2V8b3BlcmF0b3J8cHJvcGVydHl8cmFpc2VldmVudHxyZW1vdmVoYW5kbGVyfHNlbGVjdHxzZXR8c3RydWN0dXJlfHN1YnxzeW5jbG9ja3x0cnl8d2hpbGV8d2l0aHx1c2luZykvLCB7IHRva2VuOiAna2V5d29yZC50YWctJDEnIH1dLFxyXG4gICAgICAgICAgICAvLyBpZGVudGlmaWVycywgdGFnd29yZHMsIGFuZCBrZXl3b3Jkc1xyXG4gICAgICAgICAgICBbL1thLXpBLVpfXVxcdyovLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ0B0YWd3b3Jkcyc6IHsgdG9rZW46ICdrZXl3b3JkLnRhZy0kMCcgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BrZXl3b3Jkcyc6IHsgdG9rZW46ICdrZXl3b3JkLiQwJyB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnQGRlZmF1bHQnOiAnaWRlbnRpZmllcidcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XSxcclxuICAgICAgICAgICAgLy8gUHJlcHJvY2Vzc29yIGRpcmVjdGl2ZVxyXG4gICAgICAgICAgICBbL15cXHMqI1xcdysvLCAna2V5d29yZCddLFxyXG4gICAgICAgICAgICAvLyBudW1iZXJzXHJcbiAgICAgICAgICAgIFsvXFxkKlxcZCtlKFtcXC0rXT9cXGQrKT8oQGZsb2F0c3VmZml4KS8sICdudW1iZXIuZmxvYXQnXSxcclxuICAgICAgICAgICAgWy9cXGQqXFwuXFxkKyhlW1xcLStdP1xcZCspPyhAZmxvYXRzdWZmaXgpLywgJ251bWJlci5mbG9hdCddLFxyXG4gICAgICAgICAgICBbLyZIWzAtOWEtZl0rKEBpbnRlZ2Vyc3VmZml4KS8sICdudW1iZXIuaGV4J10sXHJcbiAgICAgICAgICAgIFsvJjBbMC03XSsoQGludGVnZXJzdWZmaXgpLywgJ251bWJlci5vY3RhbCddLFxyXG4gICAgICAgICAgICBbL1xcZCsoQGludGVnZXJzdWZmaXgpLywgJ251bWJlciddLFxyXG4gICAgICAgICAgICAvLyBkYXRlIGxpdGVyYWxcclxuICAgICAgICAgICAgWy8jLiojLywgJ251bWJlciddLFxyXG4gICAgICAgICAgICAvLyBkZWxpbWl0ZXJzIGFuZCBvcGVyYXRvcnNcclxuICAgICAgICAgICAgWy9be30oKVxcW1xcXV0vLCAnQGJyYWNrZXRzJ10sXHJcbiAgICAgICAgICAgIFsvQHN5bWJvbHMvLCAnZGVsaW1pdGVyJ10sXHJcbiAgICAgICAgICAgIC8vIHN0cmluZ3NcclxuICAgICAgICAgICAgWy9cIi8sICdzdHJpbmcnLCAnQHN0cmluZyddLFxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgd2hpdGVzcGFjZTogW1xyXG4gICAgICAgICAgICBbL1sgXFx0XFxyXFxuXSsvLCAnJ10sXHJcbiAgICAgICAgICAgIFsvKFxcJ3xSRU0oPyFcXHcpKS4qJC8sICdjb21tZW50J10sXHJcbiAgICAgICAgXSxcclxuICAgICAgICBzdHJpbmc6IFtcclxuICAgICAgICAgICAgWy9bXlxcXFxcIl0rLywgJ3N0cmluZyddLFxyXG4gICAgICAgICAgICBbL0Blc2NhcGVzLywgJ3N0cmluZy5lc2NhcGUnXSxcclxuICAgICAgICAgICAgWy9cXFxcLi8sICdzdHJpbmcuZXNjYXBlLmludmFsaWQnXSxcclxuICAgICAgICAgICAgWy9cIkM/LywgJ3N0cmluZycsICdAcG9wJ11cclxuICAgICAgICBdLFxyXG4gICAgfSxcclxufTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/vb/vb.js\n");

/***/ })

}]);