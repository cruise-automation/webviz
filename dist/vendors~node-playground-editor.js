(this["webpackJsonp"] = this["webpackJsonp"] || []).push([["vendors~node-playground-editor"],{

/***/ "./include-loader!./node_modules/monaco-editor/esm/vs/editor/editor.main.js":
/*!********************************************************************************!*\
  !*** include-loader!./node_modules/monaco-editor/esm/vs/editor/editor.main.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("self[\"MonacoEnvironment\"] = (function (paths) {\n      function stripTrailingSlash(str) {\n        return str.replace(/\\/$/, '');\n      }\n      return {\n        getWorkerUrl: function (moduleId, label) {\n          var pathPrefix =  true ? __webpack_require__.p : undefined;\n          var result = (pathPrefix ? stripTrailingSlash(pathPrefix) + '/' : '') + paths[label];\n          if (/^(http:)|(https:)|(file:)/.test(result)) {\n            var currentUrl = String(window.location);\n            var currentOrigin = currentUrl.substr(0, currentUrl.length - window.location.hash.length - window.location.search.length - window.location.pathname.length);\n            if (result.substring(0, currentOrigin.length) !== currentOrigin) {\n              var js = '/*' + label + '*/importScripts(\"' + result + '\");';\n              return 'data:text/javascript;charset=utf-8,' + encodeURIComponent(js);\n            }\n          }\n          return result;\n        }\n      };\n    })({\n  \"editorWorkerService\": \"editor.worker.js\",\n  \"typescript\": \"ts.worker.js\",\n  \"javascript\": \"ts.worker.js\"\n});\n__webpack_require__(/*! ./standalone/browser/accessibilityHelp/accessibilityHelp.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/accessibilityHelp/accessibilityHelp.js\");\n__webpack_require__(/*! ./contrib/bracketMatching/bracketMatching.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/bracketMatching/bracketMatching.js\");\n__webpack_require__(/*! ./contrib/caretOperations/caretOperations.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/caretOperations.js\");\n__webpack_require__(/*! ./contrib/clipboard/clipboard.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/clipboard/clipboard.js\");\n__webpack_require__(/*! ./contrib/codeAction/codeActionContributions.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeActionContributions.js\");\n__webpack_require__(/*! ./contrib/codelens/codelensController.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codelensController.js\");\n__webpack_require__(/*! ./contrib/colorPicker/colorDetector.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/colorDetector.js\");\n__webpack_require__(/*! ./contrib/comment/comment.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/comment/comment.js\");\n__webpack_require__(/*! ./contrib/contextmenu/contextmenu.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/contextmenu/contextmenu.js\");\n__webpack_require__(/*! ./browser/controller/coreCommands.js */ \"./node_modules/monaco-editor/esm/vs/editor/browser/controller/coreCommands.js\");\n__webpack_require__(/*! ./contrib/cursorUndo/cursorUndo.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/cursorUndo/cursorUndo.js\");\n__webpack_require__(/*! ./contrib/dnd/dnd.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/dnd/dnd.js\");\n__webpack_require__(/*! ./contrib/find/findController.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/find/findController.js\");\n__webpack_require__(/*! ./contrib/folding/folding.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/folding/folding.js\");\n__webpack_require__(/*! ./contrib/fontZoom/fontZoom.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/fontZoom/fontZoom.js\");\n__webpack_require__(/*! ./contrib/format/formatActions.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/format/formatActions.js\");\n__webpack_require__(/*! ./contrib/gotoError/gotoError.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/gotoError/gotoError.js\");\n__webpack_require__(/*! ./standalone/browser/quickOpen/gotoLine.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickOpen/gotoLine.js\");\n__webpack_require__(/*! ./contrib/gotoSymbol/goToCommands.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/goToCommands.js\");\n__webpack_require__(/*! ./contrib/gotoSymbol/link/goToDefinitionAtPosition.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/link/goToDefinitionAtPosition.js\");\n__webpack_require__(/*! ./contrib/hover/hover.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/hover/hover.js\");\n__webpack_require__(/*! ./standalone/browser/iPadShowKeyboard/iPadShowKeyboard.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/iPadShowKeyboard/iPadShowKeyboard.js\");\n__webpack_require__(/*! ./contrib/inPlaceReplace/inPlaceReplace.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/inPlaceReplace.js\");\n__webpack_require__(/*! ./standalone/browser/inspectTokens/inspectTokens.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/inspectTokens/inspectTokens.js\");\n__webpack_require__(/*! ./contrib/linesOperations/linesOperations.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/linesOperations.js\");\n__webpack_require__(/*! ./contrib/links/links.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/links/links.js\");\n__webpack_require__(/*! ./contrib/multicursor/multicursor.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/multicursor/multicursor.js\");\n__webpack_require__(/*! ./contrib/parameterHints/parameterHints.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/parameterHints/parameterHints.js\");\n__webpack_require__(/*! ./standalone/browser/quickOpen/quickCommand.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickOpen/quickCommand.js\");\n__webpack_require__(/*! ./standalone/browser/quickOpen/quickOutline.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickOpen/quickOutline.js\");\n__webpack_require__(/*! ./standalone/browser/referenceSearch/standaloneReferenceSearch.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/referenceSearch/standaloneReferenceSearch.js\");\n__webpack_require__(/*! ./contrib/rename/rename.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/rename/rename.js\");\n__webpack_require__(/*! ./contrib/smartSelect/smartSelect.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/smartSelect.js\");\n__webpack_require__(/*! ./contrib/snippet/snippetController2.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetController2.js\");\n__webpack_require__(/*! ./contrib/suggest/suggestController.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestController.js\");\n__webpack_require__(/*! ./standalone/browser/toggleHighContrast/toggleHighContrast.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/toggleHighContrast/toggleHighContrast.js\");\n__webpack_require__(/*! ./contrib/toggleTabFocusMode/toggleTabFocusMode.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode.js\");\n__webpack_require__(/*! ./contrib/caretOperations/transpose.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/transpose.js\");\n__webpack_require__(/*! ./contrib/wordHighlighter/wordHighlighter.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/wordHighlighter/wordHighlighter.js\");\n__webpack_require__(/*! ./contrib/wordOperations/wordOperations.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/wordOperations/wordOperations.js\");\n__webpack_require__(/*! ./contrib/wordPartOperations/wordPartOperations.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/wordPartOperations/wordPartOperations.js\");\nmodule.exports = __webpack_require__(/*! !./editor.main.js */ \"./node_modules/monaco-editor/esm/vs/editor/editor.main.js\");\n__webpack_require__(/*! ../basic-languages/typescript/typescript.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/typescript/typescript.contribution.js\");\n__webpack_require__(/*! ../language/typescript/monaco.contribution.js */ \"./node_modules/monaco-editor/esm/vs/language/typescript/monaco.contribution.js\");\n__webpack_require__(/*! ../basic-languages/javascript/javascript.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.contribution.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9pbmNsdWRlLWxvYWRlciEuL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9lZGl0b3IvZWRpdG9yLm1haW4uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9lZGl0b3IvZWRpdG9yLm1haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsic2VsZltcIk1vbmFjb0Vudmlyb25tZW50XCJdID0gKGZ1bmN0aW9uIChwYXRocykge1xuICAgICAgZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHN0cikge1xuICAgICAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1xcLyQvLCAnJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICBnZXRXb3JrZXJVcmw6IGZ1bmN0aW9uIChtb2R1bGVJZCwgbGFiZWwpIHtcbiAgICAgICAgICB2YXIgcGF0aFByZWZpeCA9IHR5cGVvZiBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyA9PT0gJ3N0cmluZycgPyBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyA6IFwiL2Rpc3QvXCI7XG4gICAgICAgICAgdmFyIHJlc3VsdCA9IChwYXRoUHJlZml4ID8gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGhQcmVmaXgpICsgJy8nIDogJycpICsgcGF0aHNbbGFiZWxdO1xuICAgICAgICAgIGlmICgvXihodHRwOil8KGh0dHBzOil8KGZpbGU6KS8udGVzdChyZXN1bHQpKSB7XG4gICAgICAgICAgICB2YXIgY3VycmVudFVybCA9IFN0cmluZyh3aW5kb3cubG9jYXRpb24pO1xuICAgICAgICAgICAgdmFyIGN1cnJlbnRPcmlnaW4gPSBjdXJyZW50VXJsLnN1YnN0cigwLCBjdXJyZW50VXJsLmxlbmd0aCAtIHdpbmRvdy5sb2NhdGlvbi5oYXNoLmxlbmd0aCAtIHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gubGVuZ3RoIC0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLmxlbmd0aCk7XG4gICAgICAgICAgICBpZiAocmVzdWx0LnN1YnN0cmluZygwLCBjdXJyZW50T3JpZ2luLmxlbmd0aCkgIT09IGN1cnJlbnRPcmlnaW4pIHtcbiAgICAgICAgICAgICAgdmFyIGpzID0gJy8qJyArIGxhYmVsICsgJyovaW1wb3J0U2NyaXB0cyhcIicgKyByZXN1bHQgKyAnXCIpOyc7XG4gICAgICAgICAgICAgIHJldHVybiAnZGF0YTp0ZXh0L2phdmFzY3JpcHQ7Y2hhcnNldD11dGYtOCwnICsgZW5jb2RlVVJJQ29tcG9uZW50KGpzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KSh7XG4gIFwiZWRpdG9yV29ya2VyU2VydmljZVwiOiBcImVkaXRvci53b3JrZXIuanNcIixcbiAgXCJ0eXBlc2NyaXB0XCI6IFwidHMud29ya2VyLmpzXCIsXG4gIFwiamF2YXNjcmlwdFwiOiBcInRzLndvcmtlci5qc1wiXG59KTtcbnJlcXVpcmUoXCIuL3N0YW5kYWxvbmUvYnJvd3Nlci9hY2Nlc3NpYmlsaXR5SGVscC9hY2Nlc3NpYmlsaXR5SGVscC5qc1wiKTtcbnJlcXVpcmUoXCIuL2NvbnRyaWIvYnJhY2tldE1hdGNoaW5nL2JyYWNrZXRNYXRjaGluZy5qc1wiKTtcbnJlcXVpcmUoXCIuL2NvbnRyaWIvY2FyZXRPcGVyYXRpb25zL2NhcmV0T3BlcmF0aW9ucy5qc1wiKTtcbnJlcXVpcmUoXCIuL2NvbnRyaWIvY2xpcGJvYXJkL2NsaXBib2FyZC5qc1wiKTtcbnJlcXVpcmUoXCIuL2NvbnRyaWIvY29kZUFjdGlvbi9jb2RlQWN0aW9uQ29udHJpYnV0aW9ucy5qc1wiKTtcbnJlcXVpcmUoXCIuL2NvbnRyaWIvY29kZWxlbnMvY29kZWxlbnNDb250cm9sbGVyLmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi9jb2xvclBpY2tlci9jb2xvckRldGVjdG9yLmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi9jb21tZW50L2NvbW1lbnQuanNcIik7XG5yZXF1aXJlKFwiLi9jb250cmliL2NvbnRleHRtZW51L2NvbnRleHRtZW51LmpzXCIpO1xucmVxdWlyZShcIi4vYnJvd3Nlci9jb250cm9sbGVyL2NvcmVDb21tYW5kcy5qc1wiKTtcbnJlcXVpcmUoXCIuL2NvbnRyaWIvY3Vyc29yVW5kby9jdXJzb3JVbmRvLmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi9kbmQvZG5kLmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi9maW5kL2ZpbmRDb250cm9sbGVyLmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi9mb2xkaW5nL2ZvbGRpbmcuanNcIik7XG5yZXF1aXJlKFwiLi9jb250cmliL2ZvbnRab29tL2ZvbnRab29tLmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi9mb3JtYXQvZm9ybWF0QWN0aW9ucy5qc1wiKTtcbnJlcXVpcmUoXCIuL2NvbnRyaWIvZ290b0Vycm9yL2dvdG9FcnJvci5qc1wiKTtcbnJlcXVpcmUoXCIuL3N0YW5kYWxvbmUvYnJvd3Nlci9xdWlja09wZW4vZ290b0xpbmUuanNcIik7XG5yZXF1aXJlKFwiLi9jb250cmliL2dvdG9TeW1ib2wvZ29Ub0NvbW1hbmRzLmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi9nb3RvU3ltYm9sL2xpbmsvZ29Ub0RlZmluaXRpb25BdFBvc2l0aW9uLmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi9ob3Zlci9ob3Zlci5qc1wiKTtcbnJlcXVpcmUoXCIuL3N0YW5kYWxvbmUvYnJvd3Nlci9pUGFkU2hvd0tleWJvYXJkL2lQYWRTaG93S2V5Ym9hcmQuanNcIik7XG5yZXF1aXJlKFwiLi9jb250cmliL2luUGxhY2VSZXBsYWNlL2luUGxhY2VSZXBsYWNlLmpzXCIpO1xucmVxdWlyZShcIi4vc3RhbmRhbG9uZS9icm93c2VyL2luc3BlY3RUb2tlbnMvaW5zcGVjdFRva2Vucy5qc1wiKTtcbnJlcXVpcmUoXCIuL2NvbnRyaWIvbGluZXNPcGVyYXRpb25zL2xpbmVzT3BlcmF0aW9ucy5qc1wiKTtcbnJlcXVpcmUoXCIuL2NvbnRyaWIvbGlua3MvbGlua3MuanNcIik7XG5yZXF1aXJlKFwiLi9jb250cmliL211bHRpY3Vyc29yL211bHRpY3Vyc29yLmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi9wYXJhbWV0ZXJIaW50cy9wYXJhbWV0ZXJIaW50cy5qc1wiKTtcbnJlcXVpcmUoXCIuL3N0YW5kYWxvbmUvYnJvd3Nlci9xdWlja09wZW4vcXVpY2tDb21tYW5kLmpzXCIpO1xucmVxdWlyZShcIi4vc3RhbmRhbG9uZS9icm93c2VyL3F1aWNrT3Blbi9xdWlja091dGxpbmUuanNcIik7XG5yZXF1aXJlKFwiLi9zdGFuZGFsb25lL2Jyb3dzZXIvcmVmZXJlbmNlU2VhcmNoL3N0YW5kYWxvbmVSZWZlcmVuY2VTZWFyY2guanNcIik7XG5yZXF1aXJlKFwiLi9jb250cmliL3JlbmFtZS9yZW5hbWUuanNcIik7XG5yZXF1aXJlKFwiLi9jb250cmliL3NtYXJ0U2VsZWN0L3NtYXJ0U2VsZWN0LmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi9zbmlwcGV0L3NuaXBwZXRDb250cm9sbGVyMi5qc1wiKTtcbnJlcXVpcmUoXCIuL2NvbnRyaWIvc3VnZ2VzdC9zdWdnZXN0Q29udHJvbGxlci5qc1wiKTtcbnJlcXVpcmUoXCIuL3N0YW5kYWxvbmUvYnJvd3Nlci90b2dnbGVIaWdoQ29udHJhc3QvdG9nZ2xlSGlnaENvbnRyYXN0LmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi90b2dnbGVUYWJGb2N1c01vZGUvdG9nZ2xlVGFiRm9jdXNNb2RlLmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi9jYXJldE9wZXJhdGlvbnMvdHJhbnNwb3NlLmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi93b3JkSGlnaGxpZ2h0ZXIvd29yZEhpZ2hsaWdodGVyLmpzXCIpO1xucmVxdWlyZShcIi4vY29udHJpYi93b3JkT3BlcmF0aW9ucy93b3JkT3BlcmF0aW9ucy5qc1wiKTtcbnJlcXVpcmUoXCIuL2NvbnRyaWIvd29yZFBhcnRPcGVyYXRpb25zL3dvcmRQYXJ0T3BlcmF0aW9ucy5qc1wiKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIiEhLi9lZGl0b3IubWFpbi5qc1wiKTtcbnJlcXVpcmUoXCIuLi9iYXNpYy1sYW5ndWFnZXMvdHlwZXNjcmlwdC90eXBlc2NyaXB0LmNvbnRyaWJ1dGlvbi5qc1wiKTtcbnJlcXVpcmUoXCIuLi9sYW5ndWFnZS90eXBlc2NyaXB0L21vbmFjby5jb250cmlidXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi4vYmFzaWMtbGFuZ3VhZ2VzL2phdmFzY3JpcHQvamF2YXNjcmlwdC5jb250cmlidXRpb24uanNcIik7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./include-loader!./node_modules/monaco-editor/esm/vs/editor/editor.main.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/abap/abap.contribution.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/abap/abap.contribution.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'abap',\r\n    extensions: ['.abap'],\r\n    aliases: ['abap', 'ABAP'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 6).then(__webpack_require__.bind(null, /*! ./abap.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/abap/abap.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2FiYXAvYWJhcC5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvYWJhcC9hYmFwLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAnYWJhcCcsXHJcbiAgICBleHRlbnNpb25zOiBbJy5hYmFwJ10sXHJcbiAgICBhbGlhc2VzOiBbJ2FiYXAnLCAnQUJBUCddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vYWJhcC5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/abap/abap.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.contribution.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.contribution.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'apex',\r\n    extensions: ['.cls'],\r\n    aliases: ['Apex', 'apex'],\r\n    mimetypes: ['text/x-apex-source', 'text/x-apex'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 7).then(__webpack_require__.bind(null, /*! ./apex.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2FwZXgvYXBleC5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvYXBleC9hcGV4LmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAnYXBleCcsXHJcbiAgICBleHRlbnNpb25zOiBbJy5jbHMnXSxcclxuICAgIGFsaWFzZXM6IFsnQXBleCcsICdhcGV4J10sXHJcbiAgICBtaW1ldHlwZXM6IFsndGV4dC94LWFwZXgtc291cmNlJywgJ3RleHQveC1hcGV4J10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9hcGV4LmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/azcli/azcli.contribution.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/azcli/azcli.contribution.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'azcli',\r\n    extensions: ['.azcli'],\r\n    aliases: ['Azure CLI', 'azcli'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 8).then(__webpack_require__.bind(null, /*! ./azcli.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/azcli/azcli.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2F6Y2xpL2F6Y2xpLmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9hemNsaS9hemNsaS5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ2F6Y2xpJyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLmF6Y2xpJ10sXHJcbiAgICBhbGlhc2VzOiBbJ0F6dXJlIENMSScsICdhemNsaSddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vYXpjbGkuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/azcli/azcli.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.contribution.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.contribution.js ***!
  \***********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'bat',\r\n    extensions: ['.bat', '.cmd'],\r\n    aliases: ['Batch', 'bat'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 9).then(__webpack_require__.bind(null, /*! ./bat.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2JhdC9iYXQuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2JhdC9iYXQuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdiYXQnLFxyXG4gICAgZXh0ZW5zaW9uczogWycuYmF0JywgJy5jbWQnXSxcclxuICAgIGFsaWFzZXM6IFsnQmF0Y2gnLCAnYmF0J10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9iYXQuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/cameligo/cameligo.contribution.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/cameligo/cameligo.contribution.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'cameligo',\r\n    extensions: ['.mligo'],\r\n    aliases: ['Cameligo'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 10).then(__webpack_require__.bind(null, /*! ./cameligo.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/cameligo/cameligo.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2NhbWVsaWdvL2NhbWVsaWdvLmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9jYW1lbGlnby9jYW1lbGlnby5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ2NhbWVsaWdvJyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLm1saWdvJ10sXHJcbiAgICBhbGlhc2VzOiBbJ0NhbWVsaWdvJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9jYW1lbGlnby5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/cameligo/cameligo.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.contribution.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.contribution.js ***!
  \*******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'clojure',\r\n    extensions: ['.clj', '.cljs', '.cljc', '.edn'],\r\n    aliases: ['clojure', 'Clojure'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 11).then(__webpack_require__.bind(null, /*! ./clojure.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2Nsb2p1cmUvY2xvanVyZS5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvY2xvanVyZS9jbG9qdXJlLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAnY2xvanVyZScsXHJcbiAgICBleHRlbnNpb25zOiBbJy5jbGonLCAnLmNsanMnLCAnLmNsamMnLCAnLmVkbiddLFxyXG4gICAgYWxpYXNlczogWydjbG9qdXJlJywgJ0Nsb2p1cmUnXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL2Nsb2p1cmUuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.contribution.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.contribution.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'coffeescript',\r\n    extensions: ['.coffee'],\r\n    aliases: ['CoffeeScript', 'coffeescript', 'coffee'],\r\n    mimetypes: ['text/x-coffeescript', 'text/coffeescript'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 12).then(__webpack_require__.bind(null, /*! ./coffee.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2NvZmZlZS9jb2ZmZWUuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2NvZmZlZS9jb2ZmZWUuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdjb2ZmZWVzY3JpcHQnLFxyXG4gICAgZXh0ZW5zaW9uczogWycuY29mZmVlJ10sXHJcbiAgICBhbGlhc2VzOiBbJ0NvZmZlZVNjcmlwdCcsICdjb2ZmZWVzY3JpcHQnLCAnY29mZmVlJ10sXHJcbiAgICBtaW1ldHlwZXM6IFsndGV4dC94LWNvZmZlZXNjcmlwdCcsICd0ZXh0L2NvZmZlZXNjcmlwdCddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vY29mZmVlLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.contribution.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.contribution.js ***!
  \***********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'c',\r\n    extensions: ['.c', '.h'],\r\n    aliases: ['C', 'c'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 0).then(__webpack_require__.bind(null, /*! ./cpp.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.js\")); }\r\n});\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'cpp',\r\n    extensions: ['.cpp', '.cc', '.cxx', '.hpp', '.hh', '.hxx'],\r\n    aliases: ['C++', 'Cpp', 'cpp'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 0).then(__webpack_require__.bind(null, /*! ./cpp.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2NwcC9jcHAuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2NwcC9jcHAuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdjJyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLmMnLCAnLmgnXSxcclxuICAgIGFsaWFzZXM6IFsnQycsICdjJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9jcHAuanMnKTsgfVxyXG59KTtcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ2NwcCcsXHJcbiAgICBleHRlbnNpb25zOiBbJy5jcHAnLCAnLmNjJywgJy5jeHgnLCAnLmhwcCcsICcuaGgnLCAnLmh4eCddLFxyXG4gICAgYWxpYXNlczogWydDKysnLCAnQ3BwJywgJ2NwcCddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vY3BwLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.contribution.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.contribution.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'csharp',\r\n    extensions: ['.cs', '.csx', '.cake'],\r\n    aliases: ['C#', 'csharp'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 13).then(__webpack_require__.bind(null, /*! ./csharp.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2NzaGFycC9jc2hhcnAuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2NzaGFycC9jc2hhcnAuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdjc2hhcnAnLFxyXG4gICAgZXh0ZW5zaW9uczogWycuY3MnLCAnLmNzeCcsICcuY2FrZSddLFxyXG4gICAgYWxpYXNlczogWydDIycsICdjc2hhcnAnXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL2NzaGFycC5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/csp/csp.contribution.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/csp/csp.contribution.js ***!
  \***********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'csp',\r\n    extensions: [],\r\n    aliases: ['CSP', 'csp'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 14).then(__webpack_require__.bind(null, /*! ./csp.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/csp/csp.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2NzcC9jc3AuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2NzcC9jc3AuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdjc3AnLFxyXG4gICAgZXh0ZW5zaW9uczogW10sXHJcbiAgICBhbGlhc2VzOiBbJ0NTUCcsICdjc3AnXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL2NzcC5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/csp/csp.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/css/css.contribution.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/css/css.contribution.js ***!
  \***********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'css',\r\n    extensions: ['.css'],\r\n    aliases: ['CSS', 'css'],\r\n    mimetypes: ['text/css'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 15).then(__webpack_require__.bind(null, /*! ./css.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/css/css.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2Nzcy9jc3MuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2Nzcy9jc3MuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdjc3MnLFxyXG4gICAgZXh0ZW5zaW9uczogWycuY3NzJ10sXHJcbiAgICBhbGlhc2VzOiBbJ0NTUycsICdjc3MnXSxcclxuICAgIG1pbWV0eXBlczogWyd0ZXh0L2NzcyddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vY3NzLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/css/css.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.contribution.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.contribution.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'dockerfile',\r\n    extensions: ['.dockerfile'],\r\n    filenames: ['Dockerfile'],\r\n    aliases: ['Dockerfile'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 16).then(__webpack_require__.bind(null, /*! ./dockerfile.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2RvY2tlcmZpbGUvZG9ja2VyZmlsZS5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvZG9ja2VyZmlsZS9kb2NrZXJmaWxlLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAnZG9ja2VyZmlsZScsXHJcbiAgICBleHRlbnNpb25zOiBbJy5kb2NrZXJmaWxlJ10sXHJcbiAgICBmaWxlbmFtZXM6IFsnRG9ja2VyZmlsZSddLFxyXG4gICAgYWxpYXNlczogWydEb2NrZXJmaWxlJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9kb2NrZXJmaWxlLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.contribution.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.contribution.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'fsharp',\r\n    extensions: ['.fs', '.fsi', '.ml', '.mli', '.fsx', '.fsscript'],\r\n    aliases: ['F#', 'FSharp', 'fsharp'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 17).then(__webpack_require__.bind(null, /*! ./fsharp.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2ZzaGFycC9mc2hhcnAuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2ZzaGFycC9mc2hhcnAuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdmc2hhcnAnLFxyXG4gICAgZXh0ZW5zaW9uczogWycuZnMnLCAnLmZzaScsICcubWwnLCAnLm1saScsICcuZnN4JywgJy5mc3NjcmlwdCddLFxyXG4gICAgYWxpYXNlczogWydGIycsICdGU2hhcnAnLCAnZnNoYXJwJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9mc2hhcnAuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/go/go.contribution.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/go/go.contribution.js ***!
  \*********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'go',\r\n    extensions: ['.go'],\r\n    aliases: ['Go'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 18).then(__webpack_require__.bind(null, /*! ./go.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/go/go.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2dvL2dvLmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9nby9nby5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ2dvJyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLmdvJ10sXHJcbiAgICBhbGlhc2VzOiBbJ0dvJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9nby5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/go/go.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.contribution.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.contribution.js ***!
  \*******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'graphql',\r\n    extensions: ['.graphql', '.gql'],\r\n    aliases: ['GraphQL', 'graphql', 'gql'],\r\n    mimetypes: ['application/graphql'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 19).then(__webpack_require__.bind(null, /*! ./graphql.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2dyYXBocWwvZ3JhcGhxbC5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvZ3JhcGhxbC9ncmFwaHFsLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAnZ3JhcGhxbCcsXHJcbiAgICBleHRlbnNpb25zOiBbJy5ncmFwaHFsJywgJy5ncWwnXSxcclxuICAgIGFsaWFzZXM6IFsnR3JhcGhRTCcsICdncmFwaHFsJywgJ2dxbCddLFxyXG4gICAgbWltZXR5cGVzOiBbJ2FwcGxpY2F0aW9uL2dyYXBocWwnXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL2dyYXBocWwuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.contribution.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.contribution.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'handlebars',\r\n    extensions: ['.handlebars', '.hbs'],\r\n    aliases: ['Handlebars', 'handlebars'],\r\n    mimetypes: ['text/x-handlebars-template'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 20).then(__webpack_require__.bind(null, /*! ./handlebars.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2hhbmRsZWJhcnMvaGFuZGxlYmFycy5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvaGFuZGxlYmFycy9oYW5kbGViYXJzLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAnaGFuZGxlYmFycycsXHJcbiAgICBleHRlbnNpb25zOiBbJy5oYW5kbGViYXJzJywgJy5oYnMnXSxcclxuICAgIGFsaWFzZXM6IFsnSGFuZGxlYmFycycsICdoYW5kbGViYXJzJ10sXHJcbiAgICBtaW1ldHlwZXM6IFsndGV4dC94LWhhbmRsZWJhcnMtdGVtcGxhdGUnXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL2hhbmRsZWJhcnMuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/html/html.contribution.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/html/html.contribution.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'html',\r\n    extensions: ['.html', '.htm', '.shtml', '.xhtml', '.mdoc', '.jsp', '.asp', '.aspx', '.jshtm'],\r\n    aliases: ['HTML', 'htm', 'html', 'xhtml'],\r\n    mimetypes: ['text/html', 'text/x-jshtm', 'text/template', 'text/ng-template'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 21).then(__webpack_require__.bind(null, /*! ./html.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/html/html.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2h0bWwvaHRtbC5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvaHRtbC9odG1sLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAnaHRtbCcsXHJcbiAgICBleHRlbnNpb25zOiBbJy5odG1sJywgJy5odG0nLCAnLnNodG1sJywgJy54aHRtbCcsICcubWRvYycsICcuanNwJywgJy5hc3AnLCAnLmFzcHgnLCAnLmpzaHRtJ10sXHJcbiAgICBhbGlhc2VzOiBbJ0hUTUwnLCAnaHRtJywgJ2h0bWwnLCAneGh0bWwnXSxcclxuICAgIG1pbWV0eXBlczogWyd0ZXh0L2h0bWwnLCAndGV4dC94LWpzaHRtJywgJ3RleHQvdGVtcGxhdGUnLCAndGV4dC9uZy10ZW1wbGF0ZSddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vaHRtbC5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/html/html.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/ini/ini.contribution.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/ini/ini.contribution.js ***!
  \***********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'ini',\r\n    extensions: ['.ini', '.properties', '.gitconfig'],\r\n    filenames: ['config', '.gitattributes', '.gitconfig', '.editorconfig'],\r\n    aliases: ['Ini', 'ini'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 22).then(__webpack_require__.bind(null, /*! ./ini.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/ini/ini.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2luaS9pbmkuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2luaS9pbmkuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdpbmknLFxyXG4gICAgZXh0ZW5zaW9uczogWycuaW5pJywgJy5wcm9wZXJ0aWVzJywgJy5naXRjb25maWcnXSxcclxuICAgIGZpbGVuYW1lczogWydjb25maWcnLCAnLmdpdGF0dHJpYnV0ZXMnLCAnLmdpdGNvbmZpZycsICcuZWRpdG9yY29uZmlnJ10sXHJcbiAgICBhbGlhc2VzOiBbJ0luaScsICdpbmknXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL2luaS5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/ini/ini.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/java/java.contribution.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/java/java.contribution.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'java',\r\n    extensions: ['.java', '.jav'],\r\n    aliases: ['Java', 'java'],\r\n    mimetypes: ['text/x-java-source', 'text/x-java'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 23).then(__webpack_require__.bind(null, /*! ./java.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/java/java.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2phdmEvamF2YS5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvamF2YS9qYXZhLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAnamF2YScsXHJcbiAgICBleHRlbnNpb25zOiBbJy5qYXZhJywgJy5qYXYnXSxcclxuICAgIGFsaWFzZXM6IFsnSmF2YScsICdqYXZhJ10sXHJcbiAgICBtaW1ldHlwZXM6IFsndGV4dC94LWphdmEtc291cmNlJywgJ3RleHQveC1qYXZhJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9qYXZhLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/java/java.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.contribution.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.contribution.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'kotlin',\r\n    extensions: ['.kt'],\r\n    aliases: ['Kotlin', 'kotlin'],\r\n    mimetypes: ['text/x-kotlin-source', 'text/x-kotlin'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 24).then(__webpack_require__.bind(null, /*! ./kotlin.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2tvdGxpbi9rb3RsaW4uY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2tvdGxpbi9rb3RsaW4uY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdrb3RsaW4nLFxyXG4gICAgZXh0ZW5zaW9uczogWycua3QnXSxcclxuICAgIGFsaWFzZXM6IFsnS290bGluJywgJ2tvdGxpbiddLFxyXG4gICAgbWltZXR5cGVzOiBbJ3RleHQveC1rb3RsaW4tc291cmNlJywgJ3RleHQveC1rb3RsaW4nXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL2tvdGxpbi5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/less/less.contribution.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/less/less.contribution.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'less',\r\n    extensions: ['.less'],\r\n    aliases: ['Less', 'less'],\r\n    mimetypes: ['text/x-less', 'text/less'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 25).then(__webpack_require__.bind(null, /*! ./less.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/less/less.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2xlc3MvbGVzcy5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvbGVzcy9sZXNzLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAnbGVzcycsXHJcbiAgICBleHRlbnNpb25zOiBbJy5sZXNzJ10sXHJcbiAgICBhbGlhc2VzOiBbJ0xlc3MnLCAnbGVzcyddLFxyXG4gICAgbWltZXR5cGVzOiBbJ3RleHQveC1sZXNzJywgJ3RleHQvbGVzcyddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vbGVzcy5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/less/less.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/lua/lua.contribution.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/lua/lua.contribution.js ***!
  \***********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'lua',\r\n    extensions: ['.lua'],\r\n    aliases: ['Lua', 'lua'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 26).then(__webpack_require__.bind(null, /*! ./lua.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/lua/lua.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2x1YS9sdWEuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2x1YS9sdWEuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdsdWEnLFxyXG4gICAgZXh0ZW5zaW9uczogWycubHVhJ10sXHJcbiAgICBhbGlhc2VzOiBbJ0x1YScsICdsdWEnXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL2x1YS5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/lua/lua.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.contribution.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.contribution.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'markdown',\r\n    extensions: ['.md', '.markdown', '.mdown', '.mkdn', '.mkd', '.mdwn', '.mdtxt', '.mdtext'],\r\n    aliases: ['Markdown', 'markdown'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 27).then(__webpack_require__.bind(null, /*! ./markdown.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL21hcmtkb3duL21hcmtkb3duLmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9tYXJrZG93bi9tYXJrZG93bi5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ21hcmtkb3duJyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLm1kJywgJy5tYXJrZG93bicsICcubWRvd24nLCAnLm1rZG4nLCAnLm1rZCcsICcubWR3bicsICcubWR0eHQnLCAnLm1kdGV4dCddLFxyXG4gICAgYWxpYXNlczogWydNYXJrZG93bicsICdtYXJrZG93biddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vbWFya2Rvd24uanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.contribution.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.contribution.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'mips',\r\n    extensions: ['.s'],\r\n    aliases: ['MIPS', 'MIPS-V'],\r\n    mimetypes: ['text/x-mips', 'text/mips', 'text/plaintext'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 28).then(__webpack_require__.bind(null, /*! ./mips.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL21pcHMvbWlwcy5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvbWlwcy9taXBzLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAnbWlwcycsXHJcbiAgICBleHRlbnNpb25zOiBbJy5zJ10sXHJcbiAgICBhbGlhc2VzOiBbJ01JUFMnLCAnTUlQUy1WJ10sXHJcbiAgICBtaW1ldHlwZXM6IFsndGV4dC94LW1pcHMnLCAndGV4dC9taXBzJywgJ3RleHQvcGxhaW50ZXh0J10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9taXBzLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/monaco.contribution.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/monaco.contribution.js ***!
  \**********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../editor/editor.api.js */ \"./include-loader!./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _abap_abap_contribution_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./abap/abap.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/abap/abap.contribution.js\");\n/* harmony import */ var _apex_apex_contribution_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./apex/apex.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.contribution.js\");\n/* harmony import */ var _azcli_azcli_contribution_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./azcli/azcli.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/azcli/azcli.contribution.js\");\n/* harmony import */ var _bat_bat_contribution_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bat/bat.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.contribution.js\");\n/* harmony import */ var _cameligo_cameligo_contribution_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cameligo/cameligo.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/cameligo/cameligo.contribution.js\");\n/* harmony import */ var _clojure_clojure_contribution_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./clojure/clojure.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.contribution.js\");\n/* harmony import */ var _coffee_coffee_contribution_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./coffee/coffee.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.contribution.js\");\n/* harmony import */ var _cpp_cpp_contribution_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./cpp/cpp.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.contribution.js\");\n/* harmony import */ var _csharp_csharp_contribution_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./csharp/csharp.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.contribution.js\");\n/* harmony import */ var _csp_csp_contribution_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./csp/csp.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/csp/csp.contribution.js\");\n/* harmony import */ var _css_css_contribution_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./css/css.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/css/css.contribution.js\");\n/* harmony import */ var _dockerfile_dockerfile_contribution_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dockerfile/dockerfile.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.contribution.js\");\n/* harmony import */ var _fsharp_fsharp_contribution_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./fsharp/fsharp.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.contribution.js\");\n/* harmony import */ var _go_go_contribution_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./go/go.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/go/go.contribution.js\");\n/* harmony import */ var _graphql_graphql_contribution_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./graphql/graphql.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.contribution.js\");\n/* harmony import */ var _handlebars_handlebars_contribution_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./handlebars/handlebars.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.contribution.js\");\n/* harmony import */ var _html_html_contribution_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./html/html.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/html/html.contribution.js\");\n/* harmony import */ var _ini_ini_contribution_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./ini/ini.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/ini/ini.contribution.js\");\n/* harmony import */ var _java_java_contribution_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./java/java.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/java/java.contribution.js\");\n/* harmony import */ var _javascript_javascript_contribution_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./javascript/javascript.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.contribution.js\");\n/* harmony import */ var _kotlin_kotlin_contribution_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./kotlin/kotlin.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.contribution.js\");\n/* harmony import */ var _less_less_contribution_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./less/less.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/less/less.contribution.js\");\n/* harmony import */ var _lua_lua_contribution_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./lua/lua.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/lua/lua.contribution.js\");\n/* harmony import */ var _markdown_markdown_contribution_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./markdown/markdown.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.contribution.js\");\n/* harmony import */ var _mips_mips_contribution_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./mips/mips.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.contribution.js\");\n/* harmony import */ var _msdax_msdax_contribution_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./msdax/msdax.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.contribution.js\");\n/* harmony import */ var _mysql_mysql_contribution_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./mysql/mysql.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/mysql/mysql.contribution.js\");\n/* harmony import */ var _objective_c_objective_c_contribution_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./objective-c/objective-c.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/objective-c/objective-c.contribution.js\");\n/* harmony import */ var _pascal_pascal_contribution_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./pascal/pascal.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/pascal/pascal.contribution.js\");\n/* harmony import */ var _pascaligo_pascaligo_contribution_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./pascaligo/pascaligo.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.contribution.js\");\n/* harmony import */ var _perl_perl_contribution_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./perl/perl.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.contribution.js\");\n/* harmony import */ var _pgsql_pgsql_contribution_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./pgsql/pgsql.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/pgsql/pgsql.contribution.js\");\n/* harmony import */ var _php_php_contribution_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./php/php.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/php/php.contribution.js\");\n/* harmony import */ var _postiats_postiats_contribution_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./postiats/postiats.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/postiats/postiats.contribution.js\");\n/* harmony import */ var _powerquery_powerquery_contribution_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./powerquery/powerquery.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/powerquery/powerquery.contribution.js\");\n/* harmony import */ var _powershell_powershell_contribution_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./powershell/powershell.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.contribution.js\");\n/* harmony import */ var _pug_pug_contribution_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./pug/pug.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.contribution.js\");\n/* harmony import */ var _python_python_contribution_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./python/python.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/python/python.contribution.js\");\n/* harmony import */ var _r_r_contribution_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./r/r.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/r/r.contribution.js\");\n/* harmony import */ var _razor_razor_contribution_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./razor/razor.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/razor/razor.contribution.js\");\n/* harmony import */ var _redis_redis_contribution_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./redis/redis.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/redis/redis.contribution.js\");\n/* harmony import */ var _redshift_redshift_contribution_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./redshift/redshift.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/redshift/redshift.contribution.js\");\n/* harmony import */ var _restructuredtext_restructuredtext_contribution_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./restructuredtext/restructuredtext.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.contribution.js\");\n/* harmony import */ var _ruby_ruby_contribution_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./ruby/ruby.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/ruby/ruby.contribution.js\");\n/* harmony import */ var _rust_rust_contribution_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./rust/rust.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.contribution.js\");\n/* harmony import */ var _sb_sb_contribution_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./sb/sb.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.contribution.js\");\n/* harmony import */ var _scheme_scheme_contribution_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./scheme/scheme.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.contribution.js\");\n/* harmony import */ var _scss_scss_contribution_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./scss/scss.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.contribution.js\");\n/* harmony import */ var _shell_shell_contribution_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./shell/shell.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.contribution.js\");\n/* harmony import */ var _solidity_solidity_contribution_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./solidity/solidity.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/solidity/solidity.contribution.js\");\n/* harmony import */ var _sophia_sophia_contribution_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./sophia/sophia.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/sophia/sophia.contribution.js\");\n/* harmony import */ var _sql_sql_contribution_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./sql/sql.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/sql/sql.contribution.js\");\n/* harmony import */ var _st_st_contribution_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./st/st.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/st/st.contribution.js\");\n/* harmony import */ var _swift_swift_contribution_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./swift/swift.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.contribution.js\");\n/* harmony import */ var _tcl_tcl_contribution_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./tcl/tcl.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.contribution.js\");\n/* harmony import */ var _twig_twig_contribution_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./twig/twig.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.contribution.js\");\n/* harmony import */ var _typescript_typescript_contribution_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./typescript/typescript.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/typescript/typescript.contribution.js\");\n/* harmony import */ var _vb_vb_contribution_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./vb/vb.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/vb/vb.contribution.js\");\n/* harmony import */ var _xml_xml_contribution_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./xml/xml.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.contribution.js\");\n/* harmony import */ var _yaml_yaml_contribution_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./yaml/yaml.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/yaml/yaml.contribution.js\");\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL21vbmFjby5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvbW9uYWNvLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4uL2VkaXRvci9lZGl0b3IuYXBpLmpzJztcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCAnLi9hYmFwL2FiYXAuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL2FwZXgvYXBleC5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vYXpjbGkvYXpjbGkuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL2JhdC9iYXQuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL2NhbWVsaWdvL2NhbWVsaWdvLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi9jbG9qdXJlL2Nsb2p1cmUuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL2NvZmZlZS9jb2ZmZWUuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL2NwcC9jcHAuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL2NzaGFycC9jc2hhcnAuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL2NzcC9jc3AuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL2Nzcy9jc3MuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL2RvY2tlcmZpbGUvZG9ja2VyZmlsZS5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vZnNoYXJwL2ZzaGFycC5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vZ28vZ28uY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL2dyYXBocWwvZ3JhcGhxbC5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vaGFuZGxlYmFycy9oYW5kbGViYXJzLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi9odG1sL2h0bWwuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL2luaS9pbmkuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL2phdmEvamF2YS5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vamF2YXNjcmlwdC9qYXZhc2NyaXB0LmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi9rb3RsaW4va290bGluLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi9sZXNzL2xlc3MuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL2x1YS9sdWEuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL21hcmtkb3duL21hcmtkb3duLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi9taXBzL21pcHMuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL21zZGF4L21zZGF4LmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi9teXNxbC9teXNxbC5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vb2JqZWN0aXZlLWMvb2JqZWN0aXZlLWMuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL3Bhc2NhbC9wYXNjYWwuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL3Bhc2NhbGlnby9wYXNjYWxpZ28uY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL3BlcmwvcGVybC5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vcGdzcWwvcGdzcWwuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL3BocC9waHAuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL3Bvc3RpYXRzL3Bvc3RpYXRzLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi9wb3dlcnF1ZXJ5L3Bvd2VycXVlcnkuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL3Bvd2Vyc2hlbGwvcG93ZXJzaGVsbC5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vcHVnL3B1Zy5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vcHl0aG9uL3B5dGhvbi5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vci9yLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi9yYXpvci9yYXpvci5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vcmVkaXMvcmVkaXMuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL3JlZHNoaWZ0L3JlZHNoaWZ0LmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi9yZXN0cnVjdHVyZWR0ZXh0L3Jlc3RydWN0dXJlZHRleHQuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL3J1YnkvcnVieS5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vcnVzdC9ydXN0LmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi9zYi9zYi5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vc2NoZW1lL3NjaGVtZS5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vc2Nzcy9zY3NzLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi9zaGVsbC9zaGVsbC5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vc29saWRpdHkvc29saWRpdHkuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL3NvcGhpYS9zb3BoaWEuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL3NxbC9zcWwuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL3N0L3N0LmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi9zd2lmdC9zd2lmdC5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vdGNsL3RjbC5jb250cmlidXRpb24uanMnO1xyXG5pbXBvcnQgJy4vdHdpZy90d2lnLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi90eXBlc2NyaXB0L3R5cGVzY3JpcHQuY29udHJpYnV0aW9uLmpzJztcclxuaW1wb3J0ICcuL3ZiL3ZiLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi94bWwveG1sLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbmltcG9ydCAnLi95YW1sL3lhbWwuY29udHJpYnV0aW9uLmpzJztcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/monaco.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.contribution.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.contribution.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'msdax',\r\n    extensions: ['.dax', '.msdax'],\r\n    aliases: ['DAX', 'MSDAX'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 29).then(__webpack_require__.bind(null, /*! ./msdax.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL21zZGF4L21zZGF4LmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9tc2RheC9tc2RheC5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ21zZGF4JyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLmRheCcsICcubXNkYXgnXSxcclxuICAgIGFsaWFzZXM6IFsnREFYJywgJ01TREFYJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9tc2RheC5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/mysql/mysql.contribution.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/mysql/mysql.contribution.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'mysql',\r\n    extensions: [],\r\n    aliases: ['MySQL', 'mysql'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 30).then(__webpack_require__.bind(null, /*! ./mysql.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/mysql/mysql.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL215c3FsL215c3FsLmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9teXNxbC9teXNxbC5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ215c3FsJyxcclxuICAgIGV4dGVuc2lvbnM6IFtdLFxyXG4gICAgYWxpYXNlczogWydNeVNRTCcsICdteXNxbCddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vbXlzcWwuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/mysql/mysql.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/objective-c/objective-c.contribution.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/objective-c/objective-c.contribution.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'objective-c',\r\n    extensions: ['.m'],\r\n    aliases: ['Objective-C'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 31).then(__webpack_require__.bind(null, /*! ./objective-c.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/objective-c/objective-c.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL29iamVjdGl2ZS1jL29iamVjdGl2ZS1jLmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9vYmplY3RpdmUtYy9vYmplY3RpdmUtYy5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ29iamVjdGl2ZS1jJyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLm0nXSxcclxuICAgIGFsaWFzZXM6IFsnT2JqZWN0aXZlLUMnXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL29iamVjdGl2ZS1jLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/objective-c/objective-c.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/pascal/pascal.contribution.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/pascal/pascal.contribution.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'pascal',\r\n    extensions: ['.pas', '.p', '.pp'],\r\n    aliases: ['Pascal', 'pas'],\r\n    mimetypes: ['text/x-pascal-source', 'text/x-pascal'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 32).then(__webpack_require__.bind(null, /*! ./pascal.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/pascal/pascal.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Bhc2NhbC9wYXNjYWwuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Bhc2NhbC9wYXNjYWwuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdwYXNjYWwnLFxyXG4gICAgZXh0ZW5zaW9uczogWycucGFzJywgJy5wJywgJy5wcCddLFxyXG4gICAgYWxpYXNlczogWydQYXNjYWwnLCAncGFzJ10sXHJcbiAgICBtaW1ldHlwZXM6IFsndGV4dC94LXBhc2NhbC1zb3VyY2UnLCAndGV4dC94LXBhc2NhbCddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vcGFzY2FsLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/pascal/pascal.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.contribution.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.contribution.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'pascaligo',\r\n    extensions: ['.ligo'],\r\n    aliases: ['Pascaligo', 'ligo'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 33).then(__webpack_require__.bind(null, /*! ./pascaligo.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Bhc2NhbGlnby9wYXNjYWxpZ28uY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Bhc2NhbGlnby9wYXNjYWxpZ28uY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdwYXNjYWxpZ28nLFxyXG4gICAgZXh0ZW5zaW9uczogWycubGlnbyddLFxyXG4gICAgYWxpYXNlczogWydQYXNjYWxpZ28nLCAnbGlnbyddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vcGFzY2FsaWdvLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.contribution.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.contribution.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n*  Copyright (c) Microsoft Corporation. All rights reserved.\r\n*  Licensed under the MIT License. See License.txt in the project root for license information.\r\n*--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'perl',\r\n    extensions: ['.pl'],\r\n    aliases: ['Perl', 'pl'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 34).then(__webpack_require__.bind(null, /*! ./perl.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.js\")); },\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3BlcmwvcGVybC5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvcGVybC9wZXJsLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4qICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAncGVybCcsXHJcbiAgICBleHRlbnNpb25zOiBbJy5wbCddLFxyXG4gICAgYWxpYXNlczogWydQZXJsJywgJ3BsJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9wZXJsLmpzJyk7IH0sXHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/pgsql/pgsql.contribution.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/pgsql/pgsql.contribution.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'pgsql',\r\n    extensions: [],\r\n    aliases: ['PostgreSQL', 'postgres', 'pg', 'postgre'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 35).then(__webpack_require__.bind(null, /*! ./pgsql.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/pgsql/pgsql.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Bnc3FsL3Bnc3FsLmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9wZ3NxbC9wZ3NxbC5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ3Bnc3FsJyxcclxuICAgIGV4dGVuc2lvbnM6IFtdLFxyXG4gICAgYWxpYXNlczogWydQb3N0Z3JlU1FMJywgJ3Bvc3RncmVzJywgJ3BnJywgJ3Bvc3RncmUnXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL3Bnc3FsLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/pgsql/pgsql.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/php/php.contribution.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/php/php.contribution.js ***!
  \***********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'php',\r\n    extensions: ['.php', '.php4', '.php5', '.phtml', '.ctp'],\r\n    aliases: ['PHP', 'php'],\r\n    mimetypes: ['application/x-php'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 36).then(__webpack_require__.bind(null, /*! ./php.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/php/php.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3BocC9waHAuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3BocC9waHAuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdwaHAnLFxyXG4gICAgZXh0ZW5zaW9uczogWycucGhwJywgJy5waHA0JywgJy5waHA1JywgJy5waHRtbCcsICcuY3RwJ10sXHJcbiAgICBhbGlhc2VzOiBbJ1BIUCcsICdwaHAnXSxcclxuICAgIG1pbWV0eXBlczogWydhcHBsaWNhdGlvbi94LXBocCddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vcGhwLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/php/php.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/postiats/postiats.contribution.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/postiats/postiats.contribution.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'postiats',\r\n    extensions: ['.dats', '.sats', '.hats'],\r\n    aliases: ['ATS', 'ATS/Postiats'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 37).then(__webpack_require__.bind(null, /*! ./postiats.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/postiats/postiats.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Bvc3RpYXRzL3Bvc3RpYXRzLmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9wb3N0aWF0cy9wb3N0aWF0cy5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ3Bvc3RpYXRzJyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLmRhdHMnLCAnLnNhdHMnLCAnLmhhdHMnXSxcclxuICAgIGFsaWFzZXM6IFsnQVRTJywgJ0FUUy9Qb3N0aWF0cyddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vcG9zdGlhdHMuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/postiats/postiats.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/powerquery/powerquery.contribution.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/powerquery/powerquery.contribution.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'powerquery',\r\n    extensions: ['.pq', '.pqm'],\r\n    aliases: ['PQ', 'M', 'Power Query', 'Power Query M'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 38).then(__webpack_require__.bind(null, /*! ./powerquery.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/powerquery/powerquery.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Bvd2VycXVlcnkvcG93ZXJxdWVyeS5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvcG93ZXJxdWVyeS9wb3dlcnF1ZXJ5LmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAncG93ZXJxdWVyeScsXHJcbiAgICBleHRlbnNpb25zOiBbJy5wcScsICcucHFtJ10sXHJcbiAgICBhbGlhc2VzOiBbJ1BRJywgJ00nLCAnUG93ZXIgUXVlcnknLCAnUG93ZXIgUXVlcnkgTSddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vcG93ZXJxdWVyeS5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/powerquery/powerquery.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.contribution.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.contribution.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'powershell',\r\n    extensions: ['.ps1', '.psm1', '.psd1'],\r\n    aliases: ['PowerShell', 'powershell', 'ps', 'ps1'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 39).then(__webpack_require__.bind(null, /*! ./powershell.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Bvd2Vyc2hlbGwvcG93ZXJzaGVsbC5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvcG93ZXJzaGVsbC9wb3dlcnNoZWxsLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAncG93ZXJzaGVsbCcsXHJcbiAgICBleHRlbnNpb25zOiBbJy5wczEnLCAnLnBzbTEnLCAnLnBzZDEnXSxcclxuICAgIGFsaWFzZXM6IFsnUG93ZXJTaGVsbCcsICdwb3dlcnNoZWxsJywgJ3BzJywgJ3BzMSddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vcG93ZXJzaGVsbC5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.contribution.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.contribution.js ***!
  \***********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'pug',\r\n    extensions: ['.jade', '.pug'],\r\n    aliases: ['Pug', 'Jade', 'jade'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 40).then(__webpack_require__.bind(null, /*! ./pug.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3B1Zy9wdWcuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3B1Zy9wdWcuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdwdWcnLFxyXG4gICAgZXh0ZW5zaW9uczogWycuamFkZScsICcucHVnJ10sXHJcbiAgICBhbGlhc2VzOiBbJ1B1ZycsICdKYWRlJywgJ2phZGUnXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL3B1Zy5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/python/python.contribution.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/python/python.contribution.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'python',\r\n    extensions: ['.py', '.rpy', '.pyw', '.cpy', '.gyp', '.gypi'],\r\n    aliases: ['Python', 'py'],\r\n    firstLine: '^#!/.*\\\\bpython[0-9.-]*\\\\b',\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 41).then(__webpack_require__.bind(null, /*! ./python.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/python/python.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3B5dGhvbi9weXRob24uY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3B5dGhvbi9weXRob24uY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdweXRob24nLFxyXG4gICAgZXh0ZW5zaW9uczogWycucHknLCAnLnJweScsICcucHl3JywgJy5jcHknLCAnLmd5cCcsICcuZ3lwaSddLFxyXG4gICAgYWxpYXNlczogWydQeXRob24nLCAncHknXSxcclxuICAgIGZpcnN0TGluZTogJ14jIS8uKlxcXFxicHl0aG9uWzAtOS4tXSpcXFxcYicsXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9weXRob24uanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/python/python.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/r/r.contribution.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/r/r.contribution.js ***!
  \*******************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'r',\r\n    extensions: ['.r', '.rhistory', '.rprofile', '.rt'],\r\n    aliases: ['R', 'r'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 42).then(__webpack_require__.bind(null, /*! ./r.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/r/r.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Ivci5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvci9yLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAncicsXHJcbiAgICBleHRlbnNpb25zOiBbJy5yJywgJy5yaGlzdG9yeScsICcucnByb2ZpbGUnLCAnLnJ0J10sXHJcbiAgICBhbGlhc2VzOiBbJ1InLCAnciddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vci5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/r/r.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/razor/razor.contribution.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/razor/razor.contribution.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'razor',\r\n    extensions: ['.cshtml'],\r\n    aliases: ['Razor', 'razor'],\r\n    mimetypes: ['text/x-cshtml'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 43).then(__webpack_require__.bind(null, /*! ./razor.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/razor/razor.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Jhem9yL3Jhem9yLmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9yYXpvci9yYXpvci5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ3Jhem9yJyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLmNzaHRtbCddLFxyXG4gICAgYWxpYXNlczogWydSYXpvcicsICdyYXpvciddLFxyXG4gICAgbWltZXR5cGVzOiBbJ3RleHQveC1jc2h0bWwnXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL3Jhem9yLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/razor/razor.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/redis/redis.contribution.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/redis/redis.contribution.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'redis',\r\n    extensions: ['.redis'],\r\n    aliases: ['redis'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 44).then(__webpack_require__.bind(null, /*! ./redis.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/redis/redis.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3JlZGlzL3JlZGlzLmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9yZWRpcy9yZWRpcy5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ3JlZGlzJyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLnJlZGlzJ10sXHJcbiAgICBhbGlhc2VzOiBbJ3JlZGlzJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9yZWRpcy5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/redis/redis.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/redshift/redshift.contribution.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/redshift/redshift.contribution.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'redshift',\r\n    extensions: [],\r\n    aliases: ['Redshift', 'redshift'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 45).then(__webpack_require__.bind(null, /*! ./redshift.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/redshift/redshift.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3JlZHNoaWZ0L3JlZHNoaWZ0LmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9yZWRzaGlmdC9yZWRzaGlmdC5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ3JlZHNoaWZ0JyxcclxuICAgIGV4dGVuc2lvbnM6IFtdLFxyXG4gICAgYWxpYXNlczogWydSZWRzaGlmdCcsICdyZWRzaGlmdCddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vcmVkc2hpZnQuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/redshift/redshift.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.contribution.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.contribution.js ***!
  \*************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'restructuredtext',\r\n    extensions: ['.rst'],\r\n    aliases: ['reStructuredText', 'restructuredtext'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 46).then(__webpack_require__.bind(null, /*! ./restructuredtext.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Jlc3RydWN0dXJlZHRleHQvcmVzdHJ1Y3R1cmVkdGV4dC5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvcmVzdHJ1Y3R1cmVkdGV4dC9yZXN0cnVjdHVyZWR0ZXh0LmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAncmVzdHJ1Y3R1cmVkdGV4dCcsXHJcbiAgICBleHRlbnNpb25zOiBbJy5yc3QnXSxcclxuICAgIGFsaWFzZXM6IFsncmVTdHJ1Y3R1cmVkVGV4dCcsICdyZXN0cnVjdHVyZWR0ZXh0J10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9yZXN0cnVjdHVyZWR0ZXh0LmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/ruby/ruby.contribution.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/ruby/ruby.contribution.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'ruby',\r\n    extensions: ['.rb', '.rbx', '.rjs', '.gemspec', '.pp'],\r\n    filenames: ['rakefile'],\r\n    aliases: ['Ruby', 'rb'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 47).then(__webpack_require__.bind(null, /*! ./ruby.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/ruby/ruby.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3J1YnkvcnVieS5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvcnVieS9ydWJ5LmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAncnVieScsXHJcbiAgICBleHRlbnNpb25zOiBbJy5yYicsICcucmJ4JywgJy5yanMnLCAnLmdlbXNwZWMnLCAnLnBwJ10sXHJcbiAgICBmaWxlbmFtZXM6IFsncmFrZWZpbGUnXSxcclxuICAgIGFsaWFzZXM6IFsnUnVieScsICdyYiddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vcnVieS5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/ruby/ruby.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.contribution.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.contribution.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'rust',\r\n    extensions: ['.rs', '.rlib'],\r\n    aliases: ['Rust', 'rust'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 48).then(__webpack_require__.bind(null, /*! ./rust.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3J1c3QvcnVzdC5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvcnVzdC9ydXN0LmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAncnVzdCcsXHJcbiAgICBleHRlbnNpb25zOiBbJy5ycycsICcucmxpYiddLFxyXG4gICAgYWxpYXNlczogWydSdXN0JywgJ3J1c3QnXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL3J1c3QuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.contribution.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.contribution.js ***!
  \*********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'sb',\r\n    extensions: ['.sb'],\r\n    aliases: ['Small Basic', 'sb'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 49).then(__webpack_require__.bind(null, /*! ./sb.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3NiL3NiLmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9zYi9zYi5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ3NiJyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLnNiJ10sXHJcbiAgICBhbGlhc2VzOiBbJ1NtYWxsIEJhc2ljJywgJ3NiJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9zYi5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.contribution.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.contribution.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'scheme',\r\n    extensions: ['.scm', '.ss', '.sch', '.rkt'],\r\n    aliases: ['scheme', 'Scheme'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 50).then(__webpack_require__.bind(null, /*! ./scheme.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.js\")); },\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3NjaGVtZS9zY2hlbWUuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3NjaGVtZS9zY2hlbWUuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdzY2hlbWUnLFxyXG4gICAgZXh0ZW5zaW9uczogWycuc2NtJywgJy5zcycsICcuc2NoJywgJy5ya3QnXSxcclxuICAgIGFsaWFzZXM6IFsnc2NoZW1lJywgJ1NjaGVtZSddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vc2NoZW1lLmpzJyk7IH0sXHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.contribution.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.contribution.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'scss',\r\n    extensions: ['.scss'],\r\n    aliases: ['Sass', 'sass', 'scss'],\r\n    mimetypes: ['text/x-scss', 'text/scss'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 51).then(__webpack_require__.bind(null, /*! ./scss.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Njc3Mvc2Nzcy5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvc2Nzcy9zY3NzLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAnc2NzcycsXHJcbiAgICBleHRlbnNpb25zOiBbJy5zY3NzJ10sXHJcbiAgICBhbGlhc2VzOiBbJ1Nhc3MnLCAnc2FzcycsICdzY3NzJ10sXHJcbiAgICBtaW1ldHlwZXM6IFsndGV4dC94LXNjc3MnLCAndGV4dC9zY3NzJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9zY3NzLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.contribution.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.contribution.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n*  Copyright (c) Microsoft Corporation. All rights reserved.\r\n*  Licensed under the MIT License. See License.txt in the project root for license information.\r\n*--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'shell',\r\n    extensions: ['.sh', '.bash'],\r\n    aliases: ['Shell', 'sh'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 52).then(__webpack_require__.bind(null, /*! ./shell.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.js\")); },\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3NoZWxsL3NoZWxsLmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9zaGVsbC9zaGVsbC5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ3NoZWxsJyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLnNoJywgJy5iYXNoJ10sXHJcbiAgICBhbGlhc2VzOiBbJ1NoZWxsJywgJ3NoJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9zaGVsbC5qcycpOyB9LFxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/solidity/solidity.contribution.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/solidity/solidity.contribution.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'sol',\r\n    extensions: ['.sol'],\r\n    aliases: ['sol', 'solidity', 'Solidity'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 53).then(__webpack_require__.bind(null, /*! ./solidity.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/solidity/solidity.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3NvbGlkaXR5L3NvbGlkaXR5LmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9zb2xpZGl0eS9zb2xpZGl0eS5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ3NvbCcsXHJcbiAgICBleHRlbnNpb25zOiBbJy5zb2wnXSxcclxuICAgIGFsaWFzZXM6IFsnc29sJywgJ3NvbGlkaXR5JywgJ1NvbGlkaXR5J10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9zb2xpZGl0eS5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/solidity/solidity.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/sophia/sophia.contribution.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/sophia/sophia.contribution.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'aes',\r\n    extensions: ['.aes'],\r\n    aliases: ['aes', 'sophia', 'Sophia'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 54).then(__webpack_require__.bind(null, /*! ./sophia.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/sophia/sophia.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3NvcGhpYS9zb3BoaWEuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3NvcGhpYS9zb3BoaWEuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdhZXMnLFxyXG4gICAgZXh0ZW5zaW9uczogWycuYWVzJ10sXHJcbiAgICBhbGlhc2VzOiBbJ2FlcycsICdzb3BoaWEnLCAnU29waGlhJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9zb3BoaWEuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/sophia/sophia.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/sql/sql.contribution.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/sql/sql.contribution.js ***!
  \***********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'sql',\r\n    extensions: ['.sql'],\r\n    aliases: ['SQL'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 55).then(__webpack_require__.bind(null, /*! ./sql.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/sql/sql.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3NxbC9zcWwuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3NxbC9zcWwuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICdzcWwnLFxyXG4gICAgZXh0ZW5zaW9uczogWycuc3FsJ10sXHJcbiAgICBhbGlhc2VzOiBbJ1NRTCddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vc3FsLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/sql/sql.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/st/st.contribution.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/st/st.contribution.js ***!
  \*********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'st',\r\n    extensions: ['.st', '.iecst', '.iecplc', '.lc3lib'],\r\n    aliases: ['StructuredText', 'scl', 'stl'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 56).then(__webpack_require__.bind(null, /*! ./st.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/st/st.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3N0L3N0LmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9zdC9zdC5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ3N0JyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLnN0JywgJy5pZWNzdCcsICcuaWVjcGxjJywgJy5sYzNsaWInXSxcclxuICAgIGFsaWFzZXM6IFsnU3RydWN0dXJlZFRleHQnLCAnc2NsJywgJ3N0bCddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vc3QuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/st/st.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.contribution.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.contribution.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'swift',\r\n    aliases: ['Swift', 'swift'],\r\n    extensions: ['.swift'],\r\n    mimetypes: ['text/swift'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 57).then(__webpack_require__.bind(null, /*! ./swift.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3N3aWZ0L3N3aWZ0LmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9zd2lmdC9zd2lmdC5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ3N3aWZ0JyxcclxuICAgIGFsaWFzZXM6IFsnU3dpZnQnLCAnc3dpZnQnXSxcclxuICAgIGV4dGVuc2lvbnM6IFsnLnN3aWZ0J10sXHJcbiAgICBtaW1ldHlwZXM6IFsndGV4dC9zd2lmdCddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vc3dpZnQuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.contribution.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.contribution.js ***!
  \***********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'tcl',\r\n    extensions: ['.tcl'],\r\n    aliases: ['tcl', 'Tcl', 'tcltk', 'TclTk', 'tcl/tk', 'Tcl/Tk'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 58).then(__webpack_require__.bind(null, /*! ./tcl.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3RjbC90Y2wuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3RjbC90Y2wuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICd0Y2wnLFxyXG4gICAgZXh0ZW5zaW9uczogWycudGNsJ10sXHJcbiAgICBhbGlhc2VzOiBbJ3RjbCcsICdUY2wnLCAndGNsdGsnLCAnVGNsVGsnLCAndGNsL3RrJywgJ1RjbC9UayddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vdGNsLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.contribution.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.contribution.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'twig',\r\n    extensions: ['.twig'],\r\n    aliases: ['Twig', 'twig'],\r\n    mimetypes: ['text/x-twig'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 59).then(__webpack_require__.bind(null, /*! ./twig.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3R3aWcvdHdpZy5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvdHdpZy90d2lnLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAndHdpZycsXHJcbiAgICBleHRlbnNpb25zOiBbJy50d2lnJ10sXHJcbiAgICBhbGlhc2VzOiBbJ1R3aWcnLCAndHdpZyddLFxyXG4gICAgbWltZXR5cGVzOiBbJ3RleHQveC10d2lnJ10sXHJcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi90d2lnLmpzJyk7IH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/vb/vb.contribution.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/vb/vb.contribution.js ***!
  \*********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'vb',\r\n    extensions: ['.vb'],\r\n    aliases: ['Visual Basic', 'vb'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 61).then(__webpack_require__.bind(null, /*! ./vb.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/vb/vb.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3ZiL3ZiLmNvbnRyaWJ1dGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy92Yi92Yi5jb250cmlidXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJy4uL18uY29udHJpYnV0aW9uLmpzJztcclxucmVnaXN0ZXJMYW5ndWFnZSh7XHJcbiAgICBpZDogJ3ZiJyxcclxuICAgIGV4dGVuc2lvbnM6IFsnLnZiJ10sXHJcbiAgICBhbGlhc2VzOiBbJ1Zpc3VhbCBCYXNpYycsICd2YiddLFxyXG4gICAgbG9hZGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbXBvcnQoJy4vdmIuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/vb/vb.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.contribution.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.contribution.js ***!
  \***********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'xml',\r\n    extensions: ['.xml', '.dtd', '.ascx', '.csproj', '.config', '.wxi', '.wxl', '.wxs', '.xaml', '.svg', '.svgz', '.opf', '.xsl'],\r\n    firstLine: '(\\\\<\\\\?xml.*)|(\\\\<svg)|(\\\\<\\\\!doctype\\\\s+svg)',\r\n    aliases: ['XML', 'xml'],\r\n    mimetypes: ['text/xml', 'application/xml', 'application/xaml+xml', 'application/xml-dtd'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 62).then(__webpack_require__.bind(null, /*! ./xml.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3htbC94bWwuY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3htbC94bWwuY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbmltcG9ydCB7IHJlZ2lzdGVyTGFuZ3VhZ2UgfSBmcm9tICcuLi9fLmNvbnRyaWJ1dGlvbi5qcyc7XHJcbnJlZ2lzdGVyTGFuZ3VhZ2Uoe1xyXG4gICAgaWQ6ICd4bWwnLFxyXG4gICAgZXh0ZW5zaW9uczogWycueG1sJywgJy5kdGQnLCAnLmFzY3gnLCAnLmNzcHJvaicsICcuY29uZmlnJywgJy53eGknLCAnLnd4bCcsICcud3hzJywgJy54YW1sJywgJy5zdmcnLCAnLnN2Z3onLCAnLm9wZicsICcueHNsJ10sXHJcbiAgICBmaXJzdExpbmU6ICcoXFxcXDxcXFxcP3htbC4qKXwoXFxcXDxzdmcpfChcXFxcPFxcXFwhZG9jdHlwZVxcXFxzK3N2ZyknLFxyXG4gICAgYWxpYXNlczogWydYTUwnLCAneG1sJ10sXHJcbiAgICBtaW1ldHlwZXM6IFsndGV4dC94bWwnLCAnYXBwbGljYXRpb24veG1sJywgJ2FwcGxpY2F0aW9uL3hhbWwreG1sJywgJ2FwcGxpY2F0aW9uL3htbC1kdGQnXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL3htbC5qcycpOyB9XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/yaml/yaml.contribution.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/yaml/yaml.contribution.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _contribution_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_.contribution.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nObject(_contribution_js__WEBPACK_IMPORTED_MODULE_0__[\"registerLanguage\"])({\r\n    id: 'yaml',\r\n    extensions: ['.yaml', '.yml'],\r\n    aliases: ['YAML', 'yaml', 'YML', 'yml'],\r\n    mimetypes: ['application/x-yaml'],\r\n    loader: function () { return __webpack_require__.e(/*! import() */ 63).then(__webpack_require__.bind(null, /*! ./yaml.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/yaml/yaml.js\")); }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3lhbWwveWFtbC5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMveWFtbC95YW1sLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgeyByZWdpc3Rlckxhbmd1YWdlIH0gZnJvbSAnLi4vXy5jb250cmlidXRpb24uanMnO1xyXG5yZWdpc3Rlckxhbmd1YWdlKHtcclxuICAgIGlkOiAneWFtbCcsXHJcbiAgICBleHRlbnNpb25zOiBbJy55YW1sJywgJy55bWwnXSxcclxuICAgIGFsaWFzZXM6IFsnWUFNTCcsICd5YW1sJywgJ1lNTCcsICd5bWwnXSxcclxuICAgIG1pbWV0eXBlczogWydhcHBsaWNhdGlvbi94LXlhbWwnXSxcclxuICAgIGxvYWRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW1wb3J0KCcuL3lhbWwuanMnKTsgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/yaml/yaml.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/contrib/tokenization/tokenization.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/contrib/tokenization/tokenization.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _nls_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../nls.js */ \"./node_modules/monaco-editor/esm/vs/nls.js\");\n/* harmony import */ var _browser_editorExtensions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../browser/editorExtensions.js */ \"./node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions.js\");\n/* harmony import */ var _base_common_stopwatch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../base/common/stopwatch.js */ \"./node_modules/monaco-editor/esm/vs/base/common/stopwatch.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\nvar ForceRetokenizeAction = /** @class */ (function (_super) {\r\n    __extends(ForceRetokenizeAction, _super);\r\n    function ForceRetokenizeAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.forceRetokenize',\r\n            label: _nls_js__WEBPACK_IMPORTED_MODULE_0__[\"localize\"]('forceRetokenize', \"Developer: Force Retokenize\"),\r\n            alias: 'Developer: Force Retokenize',\r\n            precondition: undefined\r\n        }) || this;\r\n    }\r\n    ForceRetokenizeAction.prototype.run = function (accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        var model = editor.getModel();\r\n        model.resetTokenization();\r\n        var sw = new _base_common_stopwatch_js__WEBPACK_IMPORTED_MODULE_2__[\"StopWatch\"](true);\r\n        model.forceTokenization(model.getLineCount());\r\n        sw.stop();\r\n        console.log(\"tokenization took \" + sw.elapsed());\r\n    };\r\n    return ForceRetokenizeAction;\r\n}(_browser_editorExtensions_js__WEBPACK_IMPORTED_MODULE_1__[\"EditorAction\"]));\r\nObject(_browser_editorExtensions_js__WEBPACK_IMPORTED_MODULE_1__[\"registerEditorAction\"])(ForceRetokenizeAction);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2NvbnRyaWIvdG9rZW5pemF0aW9uL3Rva2VuaXphdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2VkaXRvci9jb250cmliL3Rva2VuaXphdGlvbi90b2tlbml6YXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcclxuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XHJcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcbiAgICB9O1xyXG59KSgpO1xyXG5pbXBvcnQgKiBhcyBubHMgZnJvbSAnLi4vLi4vLi4vbmxzLmpzJztcclxuaW1wb3J0IHsgRWRpdG9yQWN0aW9uLCByZWdpc3RlckVkaXRvckFjdGlvbiB9IGZyb20gJy4uLy4uL2Jyb3dzZXIvZWRpdG9yRXh0ZW5zaW9ucy5qcyc7XHJcbmltcG9ydCB7IFN0b3BXYXRjaCB9IGZyb20gJy4uLy4uLy4uL2Jhc2UvY29tbW9uL3N0b3B3YXRjaC5qcyc7XHJcbnZhciBGb3JjZVJldG9rZW5pemVBY3Rpb24gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoRm9yY2VSZXRva2VuaXplQWN0aW9uLCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gRm9yY2VSZXRva2VuaXplQWN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCB7XHJcbiAgICAgICAgICAgIGlkOiAnZWRpdG9yLmFjdGlvbi5mb3JjZVJldG9rZW5pemUnLFxyXG4gICAgICAgICAgICBsYWJlbDogbmxzLmxvY2FsaXplKCdmb3JjZVJldG9rZW5pemUnLCBcIkRldmVsb3BlcjogRm9yY2UgUmV0b2tlbml6ZVwiKSxcclxuICAgICAgICAgICAgYWxpYXM6ICdEZXZlbG9wZXI6IEZvcmNlIFJldG9rZW5pemUnLFxyXG4gICAgICAgICAgICBwcmVjb25kaXRpb246IHVuZGVmaW5lZFxyXG4gICAgICAgIH0pIHx8IHRoaXM7XHJcbiAgICB9XHJcbiAgICBGb3JjZVJldG9rZW5pemVBY3Rpb24ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uIChhY2Nlc3NvciwgZWRpdG9yKSB7XHJcbiAgICAgICAgaWYgKCFlZGl0b3IuaGFzTW9kZWwoKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBtb2RlbCA9IGVkaXRvci5nZXRNb2RlbCgpO1xyXG4gICAgICAgIG1vZGVsLnJlc2V0VG9rZW5pemF0aW9uKCk7XHJcbiAgICAgICAgdmFyIHN3ID0gbmV3IFN0b3BXYXRjaCh0cnVlKTtcclxuICAgICAgICBtb2RlbC5mb3JjZVRva2VuaXphdGlvbihtb2RlbC5nZXRMaW5lQ291bnQoKSk7XHJcbiAgICAgICAgc3cuc3RvcCgpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwidG9rZW5pemF0aW9uIHRvb2sgXCIgKyBzdy5lbGFwc2VkKCkpO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBGb3JjZVJldG9rZW5pemVBY3Rpb247XHJcbn0oRWRpdG9yQWN0aW9uKSk7XHJcbnJlZ2lzdGVyRWRpdG9yQWN0aW9uKEZvcmNlUmV0b2tlbml6ZUFjdGlvbik7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/contrib/tokenization/tokenization.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/edcore.main.js":
/*!*****************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/edcore.main.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _editor_all_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./editor.all.js */ \"./node_modules/monaco-editor/esm/vs/editor/editor.all.js\");\n/* harmony import */ var _standalone_browser_accessibilityHelp_accessibilityHelp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./standalone/browser/accessibilityHelp/accessibilityHelp.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/accessibilityHelp/accessibilityHelp.js\");\n/* harmony import */ var _standalone_browser_iPadShowKeyboard_iPadShowKeyboard_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./standalone/browser/iPadShowKeyboard/iPadShowKeyboard.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/iPadShowKeyboard/iPadShowKeyboard.js\");\n/* harmony import */ var _standalone_browser_inspectTokens_inspectTokens_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./standalone/browser/inspectTokens/inspectTokens.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/inspectTokens/inspectTokens.js\");\n/* harmony import */ var _standalone_browser_quickOpen_gotoLine_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./standalone/browser/quickOpen/gotoLine.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickOpen/gotoLine.js\");\n/* harmony import */ var _standalone_browser_quickOpen_quickCommand_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./standalone/browser/quickOpen/quickCommand.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickOpen/quickCommand.js\");\n/* harmony import */ var _standalone_browser_quickOpen_quickOutline_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./standalone/browser/quickOpen/quickOutline.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickOpen/quickOutline.js\");\n/* harmony import */ var _standalone_browser_referenceSearch_standaloneReferenceSearch_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./standalone/browser/referenceSearch/standaloneReferenceSearch.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/referenceSearch/standaloneReferenceSearch.js\");\n/* harmony import */ var _standalone_browser_toggleHighContrast_toggleHighContrast_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./standalone/browser/toggleHighContrast/toggleHighContrast.js */ \"./node_modules/monaco-editor/esm/vs/editor/standalone/browser/toggleHighContrast/toggleHighContrast.js\");\n/* harmony import */ var _editor_api_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./editor.api.js */ \"./include-loader!./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/* harmony import */ var _editor_api_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_editor_api_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _editor_api_js__WEBPACK_IMPORTED_MODULE_9__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _editor_api_js__WEBPACK_IMPORTED_MODULE_9__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2VkY29yZS5tYWluLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2VkY29yZS5tYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5pbXBvcnQgJy4vZWRpdG9yLmFsbC5qcyc7XHJcbmltcG9ydCAnLi9zdGFuZGFsb25lL2Jyb3dzZXIvYWNjZXNzaWJpbGl0eUhlbHAvYWNjZXNzaWJpbGl0eUhlbHAuanMnO1xyXG5pbXBvcnQgJy4vc3RhbmRhbG9uZS9icm93c2VyL2lQYWRTaG93S2V5Ym9hcmQvaVBhZFNob3dLZXlib2FyZC5qcyc7XHJcbmltcG9ydCAnLi9zdGFuZGFsb25lL2Jyb3dzZXIvaW5zcGVjdFRva2Vucy9pbnNwZWN0VG9rZW5zLmpzJztcclxuaW1wb3J0ICcuL3N0YW5kYWxvbmUvYnJvd3Nlci9xdWlja09wZW4vZ290b0xpbmUuanMnO1xyXG5pbXBvcnQgJy4vc3RhbmRhbG9uZS9icm93c2VyL3F1aWNrT3Blbi9xdWlja0NvbW1hbmQuanMnO1xyXG5pbXBvcnQgJy4vc3RhbmRhbG9uZS9icm93c2VyL3F1aWNrT3Blbi9xdWlja091dGxpbmUuanMnO1xyXG5pbXBvcnQgJy4vc3RhbmRhbG9uZS9icm93c2VyL3JlZmVyZW5jZVNlYXJjaC9zdGFuZGFsb25lUmVmZXJlbmNlU2VhcmNoLmpzJztcclxuaW1wb3J0ICcuL3N0YW5kYWxvbmUvYnJvd3Nlci90b2dnbGVIaWdoQ29udHJhc3QvdG9nZ2xlSGlnaENvbnRyYXN0LmpzJztcclxuZXhwb3J0ICogZnJvbSAnLi9lZGl0b3IuYXBpLmpzJztcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/edcore.main.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/editor.all.js":
/*!****************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/editor.all.js ***!
  \****************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _browser_controller_coreCommands_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./browser/controller/coreCommands.js */ \"./node_modules/monaco-editor/esm/vs/editor/browser/controller/coreCommands.js\");\n/* harmony import */ var _browser_widget_codeEditorWidget_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./browser/widget/codeEditorWidget.js */ \"./node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditorWidget.js\");\n/* harmony import */ var _browser_widget_diffEditorWidget_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./browser/widget/diffEditorWidget.js */ \"./node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js\");\n/* harmony import */ var _browser_widget_diffNavigator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./browser/widget/diffNavigator.js */ \"./node_modules/monaco-editor/esm/vs/editor/browser/widget/diffNavigator.js\");\n/* harmony import */ var _contrib_bracketMatching_bracketMatching_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contrib/bracketMatching/bracketMatching.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/bracketMatching/bracketMatching.js\");\n/* harmony import */ var _contrib_caretOperations_caretOperations_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./contrib/caretOperations/caretOperations.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/caretOperations.js\");\n/* harmony import */ var _contrib_caretOperations_transpose_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./contrib/caretOperations/transpose.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/transpose.js\");\n/* harmony import */ var _contrib_clipboard_clipboard_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./contrib/clipboard/clipboard.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/clipboard/clipboard.js\");\n/* harmony import */ var _contrib_codeAction_codeActionContributions_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contrib/codeAction/codeActionContributions.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeActionContributions.js\");\n/* harmony import */ var _contrib_codelens_codelensController_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./contrib/codelens/codelensController.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codelensController.js\");\n/* harmony import */ var _contrib_colorPicker_colorDetector_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contrib/colorPicker/colorDetector.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/colorDetector.js\");\n/* harmony import */ var _contrib_comment_comment_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./contrib/comment/comment.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/comment/comment.js\");\n/* harmony import */ var _contrib_contextmenu_contextmenu_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./contrib/contextmenu/contextmenu.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/contextmenu/contextmenu.js\");\n/* harmony import */ var _contrib_cursorUndo_cursorUndo_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./contrib/cursorUndo/cursorUndo.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/cursorUndo/cursorUndo.js\");\n/* harmony import */ var _contrib_dnd_dnd_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./contrib/dnd/dnd.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/dnd/dnd.js\");\n/* harmony import */ var _contrib_find_findController_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./contrib/find/findController.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/find/findController.js\");\n/* harmony import */ var _contrib_folding_folding_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./contrib/folding/folding.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/folding/folding.js\");\n/* harmony import */ var _contrib_fontZoom_fontZoom_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./contrib/fontZoom/fontZoom.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/fontZoom/fontZoom.js\");\n/* harmony import */ var _contrib_format_formatActions_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./contrib/format/formatActions.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/format/formatActions.js\");\n/* harmony import */ var _contrib_gotoSymbol_goToCommands_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./contrib/gotoSymbol/goToCommands.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/goToCommands.js\");\n/* harmony import */ var _contrib_gotoSymbol_link_goToDefinitionAtPosition_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./contrib/gotoSymbol/link/goToDefinitionAtPosition.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/link/goToDefinitionAtPosition.js\");\n/* harmony import */ var _contrib_gotoError_gotoError_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./contrib/gotoError/gotoError.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/gotoError/gotoError.js\");\n/* harmony import */ var _contrib_hover_hover_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./contrib/hover/hover.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/hover/hover.js\");\n/* harmony import */ var _contrib_inPlaceReplace_inPlaceReplace_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./contrib/inPlaceReplace/inPlaceReplace.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/inPlaceReplace.js\");\n/* harmony import */ var _contrib_linesOperations_linesOperations_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./contrib/linesOperations/linesOperations.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/linesOperations.js\");\n/* harmony import */ var _contrib_links_links_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./contrib/links/links.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/links/links.js\");\n/* harmony import */ var _contrib_multicursor_multicursor_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./contrib/multicursor/multicursor.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/multicursor/multicursor.js\");\n/* harmony import */ var _contrib_parameterHints_parameterHints_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./contrib/parameterHints/parameterHints.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/parameterHints/parameterHints.js\");\n/* harmony import */ var _contrib_rename_rename_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./contrib/rename/rename.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/rename/rename.js\");\n/* harmony import */ var _contrib_smartSelect_smartSelect_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./contrib/smartSelect/smartSelect.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/smartSelect.js\");\n/* harmony import */ var _contrib_snippet_snippetController2_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./contrib/snippet/snippetController2.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetController2.js\");\n/* harmony import */ var _contrib_suggest_suggestController_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./contrib/suggest/suggestController.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestController.js\");\n/* harmony import */ var _contrib_tokenization_tokenization_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./contrib/tokenization/tokenization.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/tokenization/tokenization.js\");\n/* harmony import */ var _contrib_toggleTabFocusMode_toggleTabFocusMode_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./contrib/toggleTabFocusMode/toggleTabFocusMode.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode.js\");\n/* harmony import */ var _contrib_wordHighlighter_wordHighlighter_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./contrib/wordHighlighter/wordHighlighter.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/wordHighlighter/wordHighlighter.js\");\n/* harmony import */ var _contrib_wordOperations_wordOperations_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./contrib/wordOperations/wordOperations.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/wordOperations/wordOperations.js\");\n/* harmony import */ var _contrib_wordPartOperations_wordPartOperations_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./contrib/wordPartOperations/wordPartOperations.js */ \"./node_modules/monaco-editor/esm/vs/editor/contrib/wordPartOperations/wordPartOperations.js\");\n/* harmony import */ var _common_standaloneStrings_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./common/standaloneStrings.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/standaloneStrings.js\");\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Load up these strings even in VSCode, even if they are not used\r\n// in order to get them translated\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2VkaXRvci5hbGwuanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9lZGl0b3IvZWRpdG9yLmFsbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuaW1wb3J0ICcuL2Jyb3dzZXIvY29udHJvbGxlci9jb3JlQ29tbWFuZHMuanMnO1xyXG5pbXBvcnQgJy4vYnJvd3Nlci93aWRnZXQvY29kZUVkaXRvcldpZGdldC5qcyc7XHJcbmltcG9ydCAnLi9icm93c2VyL3dpZGdldC9kaWZmRWRpdG9yV2lkZ2V0LmpzJztcclxuaW1wb3J0ICcuL2Jyb3dzZXIvd2lkZ2V0L2RpZmZOYXZpZ2F0b3IuanMnO1xyXG5pbXBvcnQgJy4vY29udHJpYi9icmFja2V0TWF0Y2hpbmcvYnJhY2tldE1hdGNoaW5nLmpzJztcclxuaW1wb3J0ICcuL2NvbnRyaWIvY2FyZXRPcGVyYXRpb25zL2NhcmV0T3BlcmF0aW9ucy5qcyc7XHJcbmltcG9ydCAnLi9jb250cmliL2NhcmV0T3BlcmF0aW9ucy90cmFuc3Bvc2UuanMnO1xyXG5pbXBvcnQgJy4vY29udHJpYi9jbGlwYm9hcmQvY2xpcGJvYXJkLmpzJztcclxuaW1wb3J0ICcuL2NvbnRyaWIvY29kZUFjdGlvbi9jb2RlQWN0aW9uQ29udHJpYnV0aW9ucy5qcyc7XHJcbmltcG9ydCAnLi9jb250cmliL2NvZGVsZW5zL2NvZGVsZW5zQ29udHJvbGxlci5qcyc7XHJcbmltcG9ydCAnLi9jb250cmliL2NvbG9yUGlja2VyL2NvbG9yRGV0ZWN0b3IuanMnO1xyXG5pbXBvcnQgJy4vY29udHJpYi9jb21tZW50L2NvbW1lbnQuanMnO1xyXG5pbXBvcnQgJy4vY29udHJpYi9jb250ZXh0bWVudS9jb250ZXh0bWVudS5qcyc7XHJcbmltcG9ydCAnLi9jb250cmliL2N1cnNvclVuZG8vY3Vyc29yVW5kby5qcyc7XHJcbmltcG9ydCAnLi9jb250cmliL2RuZC9kbmQuanMnO1xyXG5pbXBvcnQgJy4vY29udHJpYi9maW5kL2ZpbmRDb250cm9sbGVyLmpzJztcclxuaW1wb3J0ICcuL2NvbnRyaWIvZm9sZGluZy9mb2xkaW5nLmpzJztcclxuaW1wb3J0ICcuL2NvbnRyaWIvZm9udFpvb20vZm9udFpvb20uanMnO1xyXG5pbXBvcnQgJy4vY29udHJpYi9mb3JtYXQvZm9ybWF0QWN0aW9ucy5qcyc7XHJcbmltcG9ydCAnLi9jb250cmliL2dvdG9TeW1ib2wvZ29Ub0NvbW1hbmRzLmpzJztcclxuaW1wb3J0ICcuL2NvbnRyaWIvZ290b1N5bWJvbC9saW5rL2dvVG9EZWZpbml0aW9uQXRQb3NpdGlvbi5qcyc7XHJcbmltcG9ydCAnLi9jb250cmliL2dvdG9FcnJvci9nb3RvRXJyb3IuanMnO1xyXG5pbXBvcnQgJy4vY29udHJpYi9ob3Zlci9ob3Zlci5qcyc7XHJcbmltcG9ydCAnLi9jb250cmliL2luUGxhY2VSZXBsYWNlL2luUGxhY2VSZXBsYWNlLmpzJztcclxuaW1wb3J0ICcuL2NvbnRyaWIvbGluZXNPcGVyYXRpb25zL2xpbmVzT3BlcmF0aW9ucy5qcyc7XHJcbmltcG9ydCAnLi9jb250cmliL2xpbmtzL2xpbmtzLmpzJztcclxuaW1wb3J0ICcuL2NvbnRyaWIvbXVsdGljdXJzb3IvbXVsdGljdXJzb3IuanMnO1xyXG5pbXBvcnQgJy4vY29udHJpYi9wYXJhbWV0ZXJIaW50cy9wYXJhbWV0ZXJIaW50cy5qcyc7XHJcbmltcG9ydCAnLi9jb250cmliL3JlbmFtZS9yZW5hbWUuanMnO1xyXG5pbXBvcnQgJy4vY29udHJpYi9zbWFydFNlbGVjdC9zbWFydFNlbGVjdC5qcyc7XHJcbmltcG9ydCAnLi9jb250cmliL3NuaXBwZXQvc25pcHBldENvbnRyb2xsZXIyLmpzJztcclxuaW1wb3J0ICcuL2NvbnRyaWIvc3VnZ2VzdC9zdWdnZXN0Q29udHJvbGxlci5qcyc7XHJcbmltcG9ydCAnLi9jb250cmliL3Rva2VuaXphdGlvbi90b2tlbml6YXRpb24uanMnO1xyXG5pbXBvcnQgJy4vY29udHJpYi90b2dnbGVUYWJGb2N1c01vZGUvdG9nZ2xlVGFiRm9jdXNNb2RlLmpzJztcclxuaW1wb3J0ICcuL2NvbnRyaWIvd29yZEhpZ2hsaWdodGVyL3dvcmRIaWdobGlnaHRlci5qcyc7XHJcbmltcG9ydCAnLi9jb250cmliL3dvcmRPcGVyYXRpb25zL3dvcmRPcGVyYXRpb25zLmpzJztcclxuaW1wb3J0ICcuL2NvbnRyaWIvd29yZFBhcnRPcGVyYXRpb25zL3dvcmRQYXJ0T3BlcmF0aW9ucy5qcyc7XHJcbi8vIExvYWQgdXAgdGhlc2Ugc3RyaW5ncyBldmVuIGluIFZTQ29kZSwgZXZlbiBpZiB0aGV5IGFyZSBub3QgdXNlZFxyXG4vLyBpbiBvcmRlciB0byBnZXQgdGhlbSB0cmFuc2xhdGVkXHJcbmltcG9ydCAnLi9jb21tb24vc3RhbmRhbG9uZVN0cmluZ3MuanMnO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/editor.all.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/editor.main.js":
/*!*****************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/editor.main.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _language_typescript_monaco_contribution__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/typescript/monaco.contribution */ \"./node_modules/monaco-editor/esm/vs/language/typescript/monaco.contribution.js\");\n/* harmony import */ var _language_css_monaco_contribution__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../language/css/monaco.contribution */ \"./node_modules/monaco-editor/esm/vs/language/css/monaco.contribution.js\");\n/* harmony import */ var _language_json_monaco_contribution__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../language/json/monaco.contribution */ \"./node_modules/monaco-editor/esm/vs/language/json/monaco.contribution.js\");\n/* harmony import */ var _language_html_monaco_contribution__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../language/html/monaco.contribution */ \"./node_modules/monaco-editor/esm/vs/language/html/monaco.contribution.js\");\n/* harmony import */ var _basic_languages_monaco_contribution__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../basic-languages/monaco.contribution */ \"./node_modules/monaco-editor/esm/vs/basic-languages/monaco.contribution.js\");\n/* harmony import */ var _edcore_main__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./edcore.main */ \"./node_modules/monaco-editor/esm/vs/editor/edcore.main.js\");\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _edcore_main__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _edcore_main__WEBPACK_IMPORTED_MODULE_5__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2VkaXRvci5tYWluLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2VkaXRvci5tYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi4vbGFuZ3VhZ2UvdHlwZXNjcmlwdC9tb25hY28uY29udHJpYnV0aW9uJztcbmltcG9ydCAnLi4vbGFuZ3VhZ2UvY3NzL21vbmFjby5jb250cmlidXRpb24nO1xuaW1wb3J0ICcuLi9sYW5ndWFnZS9qc29uL21vbmFjby5jb250cmlidXRpb24nO1xuaW1wb3J0ICcuLi9sYW5ndWFnZS9odG1sL21vbmFjby5jb250cmlidXRpb24nO1xuaW1wb3J0ICcuLi9iYXNpYy1sYW5ndWFnZXMvbW9uYWNvLmNvbnRyaWJ1dGlvbic7XG5cbmV4cG9ydCAqIGZyb20gJy4vZWRjb3JlLm1haW4nOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/editor.main.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/monaco.contribution.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/monaco.contribution.js ***!
  \*******************************************************************************/
/*! exports provided: LanguageServiceDefaultsImpl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LanguageServiceDefaultsImpl\", function() { return LanguageServiceDefaultsImpl; });\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../editor/editor.api.js */ \"./include-loader!./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar Emitter = monaco.Emitter;\r\n// --- CSS configuration and defaults ---------\r\nvar LanguageServiceDefaultsImpl = /** @class */ (function () {\r\n    function LanguageServiceDefaultsImpl(languageId, diagnosticsOptions, modeConfiguration) {\r\n        this._onDidChange = new Emitter();\r\n        this._languageId = languageId;\r\n        this.setDiagnosticsOptions(diagnosticsOptions);\r\n        this.setModeConfiguration(modeConfiguration);\r\n    }\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\r\n        get: function () {\r\n            return this._onDidChange.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\r\n        get: function () {\r\n            return this._modeConfiguration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"diagnosticsOptions\", {\r\n        get: function () {\r\n            return this._diagnosticsOptions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LanguageServiceDefaultsImpl.prototype.setDiagnosticsOptions = function (options) {\r\n        this._diagnosticsOptions = options || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\r\n        this._modeConfiguration = modeConfiguration || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    ;\r\n    return LanguageServiceDefaultsImpl;\r\n}());\r\n\r\nvar diagnosticDefault = {\r\n    validate: true,\r\n    lint: {\r\n        compatibleVendorPrefixes: 'ignore',\r\n        vendorPrefix: 'warning',\r\n        duplicateProperties: 'warning',\r\n        emptyRules: 'warning',\r\n        importStatement: 'ignore',\r\n        boxModel: 'ignore',\r\n        universalSelector: 'ignore',\r\n        zeroUnits: 'ignore',\r\n        fontFaceProperties: 'warning',\r\n        hexColorLength: 'error',\r\n        argumentsInColorFunction: 'error',\r\n        unknownProperties: 'warning',\r\n        ieHack: 'ignore',\r\n        unknownVendorSpecificProperties: 'ignore',\r\n        propertyIgnoredDueToDisplay: 'warning',\r\n        important: 'ignore',\r\n        float: 'ignore',\r\n        idSelector: 'ignore'\r\n    }\r\n};\r\nvar modeConfigurationDefault = {\r\n    completionItems: true,\r\n    hovers: true,\r\n    documentSymbols: true,\r\n    definitions: true,\r\n    references: true,\r\n    documentHighlights: true,\r\n    rename: true,\r\n    colors: true,\r\n    foldingRanges: true,\r\n    diagnostics: true,\r\n    selectionRanges: true\r\n};\r\nvar cssDefaults = new LanguageServiceDefaultsImpl('css', diagnosticDefault, modeConfigurationDefault);\r\nvar scssDefaults = new LanguageServiceDefaultsImpl('scss', diagnosticDefault, modeConfigurationDefault);\r\nvar lessDefaults = new LanguageServiceDefaultsImpl('less', diagnosticDefault, modeConfigurationDefault);\r\n// Export API\r\nfunction createAPI() {\r\n    return {\r\n        cssDefaults: cssDefaults,\r\n        lessDefaults: lessDefaults,\r\n        scssDefaults: scssDefaults\r\n    };\r\n}\r\nmonaco.languages.css = createAPI();\r\n// --- Registration to monaco editor ---\r\nfunction getMode() {\r\n    return __webpack_require__.e(/*! import() */ 1).then(__webpack_require__.bind(null, /*! ./cssMode.js */ \"./node_modules/monaco-editor/esm/vs/language/css/cssMode.js\"));\r\n}\r\nmonaco.languages.onLanguage('less', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(lessDefaults); });\r\n});\r\nmonaco.languages.onLanguage('scss', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(scssDefaults); });\r\n});\r\nmonaco.languages.onLanguage('css', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(cssDefaults); });\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL21vbmFjby5jb250cmlidXRpb24uanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9sYW5ndWFnZS9jc3MvbW9uYWNvLmNvbnRyaWJ1dGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4uLy4uL2VkaXRvci9lZGl0b3IuYXBpLmpzJztcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4ndXNlIHN0cmljdCc7XHJcbnZhciBFbWl0dGVyID0gbW9uYWNvLkVtaXR0ZXI7XHJcbi8vIC0tLSBDU1MgY29uZmlndXJhdGlvbiBhbmQgZGVmYXVsdHMgLS0tLS0tLS0tXHJcbnZhciBMYW5ndWFnZVNlcnZpY2VEZWZhdWx0c0ltcGwgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBMYW5ndWFnZVNlcnZpY2VEZWZhdWx0c0ltcGwobGFuZ3VhZ2VJZCwgZGlhZ25vc3RpY3NPcHRpb25zLCBtb2RlQ29uZmlndXJhdGlvbikge1xyXG4gICAgICAgIHRoaXMuX29uRGlkQ2hhbmdlID0gbmV3IEVtaXR0ZXIoKTtcclxuICAgICAgICB0aGlzLl9sYW5ndWFnZUlkID0gbGFuZ3VhZ2VJZDtcclxuICAgICAgICB0aGlzLnNldERpYWdub3N0aWNzT3B0aW9ucyhkaWFnbm9zdGljc09wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMuc2V0TW9kZUNvbmZpZ3VyYXRpb24obW9kZUNvbmZpZ3VyYXRpb24pO1xyXG4gICAgfVxyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KExhbmd1YWdlU2VydmljZURlZmF1bHRzSW1wbC5wcm90b3R5cGUsIFwib25EaWRDaGFuZ2VcIiwge1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fb25EaWRDaGFuZ2UuZXZlbnQ7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTGFuZ3VhZ2VTZXJ2aWNlRGVmYXVsdHNJbXBsLnByb3RvdHlwZSwgXCJsYW5ndWFnZUlkXCIsIHtcclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2xhbmd1YWdlSWQ7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTGFuZ3VhZ2VTZXJ2aWNlRGVmYXVsdHNJbXBsLnByb3RvdHlwZSwgXCJtb2RlQ29uZmlndXJhdGlvblwiLCB7XHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9tb2RlQ29uZmlndXJhdGlvbjtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShMYW5ndWFnZVNlcnZpY2VEZWZhdWx0c0ltcGwucHJvdG90eXBlLCBcImRpYWdub3N0aWNzT3B0aW9uc1wiLCB7XHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9kaWFnbm9zdGljc09wdGlvbnM7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBMYW5ndWFnZVNlcnZpY2VEZWZhdWx0c0ltcGwucHJvdG90eXBlLnNldERpYWdub3N0aWNzT3B0aW9ucyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5fZGlhZ25vc3RpY3NPcHRpb25zID0gb3B0aW9ucyB8fCBPYmplY3QuY3JlYXRlKG51bGwpO1xyXG4gICAgICAgIHRoaXMuX29uRGlkQ2hhbmdlLmZpcmUodGhpcyk7XHJcbiAgICB9O1xyXG4gICAgTGFuZ3VhZ2VTZXJ2aWNlRGVmYXVsdHNJbXBsLnByb3RvdHlwZS5zZXRNb2RlQ29uZmlndXJhdGlvbiA9IGZ1bmN0aW9uIChtb2RlQ29uZmlndXJhdGlvbikge1xyXG4gICAgICAgIHRoaXMuX21vZGVDb25maWd1cmF0aW9uID0gbW9kZUNvbmZpZ3VyYXRpb24gfHwgT2JqZWN0LmNyZWF0ZShudWxsKTtcclxuICAgICAgICB0aGlzLl9vbkRpZENoYW5nZS5maXJlKHRoaXMpO1xyXG4gICAgfTtcclxuICAgIDtcclxuICAgIHJldHVybiBMYW5ndWFnZVNlcnZpY2VEZWZhdWx0c0ltcGw7XHJcbn0oKSk7XHJcbmV4cG9ydCB7IExhbmd1YWdlU2VydmljZURlZmF1bHRzSW1wbCB9O1xyXG52YXIgZGlhZ25vc3RpY0RlZmF1bHQgPSB7XHJcbiAgICB2YWxpZGF0ZTogdHJ1ZSxcclxuICAgIGxpbnQ6IHtcclxuICAgICAgICBjb21wYXRpYmxlVmVuZG9yUHJlZml4ZXM6ICdpZ25vcmUnLFxyXG4gICAgICAgIHZlbmRvclByZWZpeDogJ3dhcm5pbmcnLFxyXG4gICAgICAgIGR1cGxpY2F0ZVByb3BlcnRpZXM6ICd3YXJuaW5nJyxcclxuICAgICAgICBlbXB0eVJ1bGVzOiAnd2FybmluZycsXHJcbiAgICAgICAgaW1wb3J0U3RhdGVtZW50OiAnaWdub3JlJyxcclxuICAgICAgICBib3hNb2RlbDogJ2lnbm9yZScsXHJcbiAgICAgICAgdW5pdmVyc2FsU2VsZWN0b3I6ICdpZ25vcmUnLFxyXG4gICAgICAgIHplcm9Vbml0czogJ2lnbm9yZScsXHJcbiAgICAgICAgZm9udEZhY2VQcm9wZXJ0aWVzOiAnd2FybmluZycsXHJcbiAgICAgICAgaGV4Q29sb3JMZW5ndGg6ICdlcnJvcicsXHJcbiAgICAgICAgYXJndW1lbnRzSW5Db2xvckZ1bmN0aW9uOiAnZXJyb3InLFxyXG4gICAgICAgIHVua25vd25Qcm9wZXJ0aWVzOiAnd2FybmluZycsXHJcbiAgICAgICAgaWVIYWNrOiAnaWdub3JlJyxcclxuICAgICAgICB1bmtub3duVmVuZG9yU3BlY2lmaWNQcm9wZXJ0aWVzOiAnaWdub3JlJyxcclxuICAgICAgICBwcm9wZXJ0eUlnbm9yZWREdWVUb0Rpc3BsYXk6ICd3YXJuaW5nJyxcclxuICAgICAgICBpbXBvcnRhbnQ6ICdpZ25vcmUnLFxyXG4gICAgICAgIGZsb2F0OiAnaWdub3JlJyxcclxuICAgICAgICBpZFNlbGVjdG9yOiAnaWdub3JlJ1xyXG4gICAgfVxyXG59O1xyXG52YXIgbW9kZUNvbmZpZ3VyYXRpb25EZWZhdWx0ID0ge1xyXG4gICAgY29tcGxldGlvbkl0ZW1zOiB0cnVlLFxyXG4gICAgaG92ZXJzOiB0cnVlLFxyXG4gICAgZG9jdW1lbnRTeW1ib2xzOiB0cnVlLFxyXG4gICAgZGVmaW5pdGlvbnM6IHRydWUsXHJcbiAgICByZWZlcmVuY2VzOiB0cnVlLFxyXG4gICAgZG9jdW1lbnRIaWdobGlnaHRzOiB0cnVlLFxyXG4gICAgcmVuYW1lOiB0cnVlLFxyXG4gICAgY29sb3JzOiB0cnVlLFxyXG4gICAgZm9sZGluZ1JhbmdlczogdHJ1ZSxcclxuICAgIGRpYWdub3N0aWNzOiB0cnVlLFxyXG4gICAgc2VsZWN0aW9uUmFuZ2VzOiB0cnVlXHJcbn07XHJcbnZhciBjc3NEZWZhdWx0cyA9IG5ldyBMYW5ndWFnZVNlcnZpY2VEZWZhdWx0c0ltcGwoJ2NzcycsIGRpYWdub3N0aWNEZWZhdWx0LCBtb2RlQ29uZmlndXJhdGlvbkRlZmF1bHQpO1xyXG52YXIgc2Nzc0RlZmF1bHRzID0gbmV3IExhbmd1YWdlU2VydmljZURlZmF1bHRzSW1wbCgnc2NzcycsIGRpYWdub3N0aWNEZWZhdWx0LCBtb2RlQ29uZmlndXJhdGlvbkRlZmF1bHQpO1xyXG52YXIgbGVzc0RlZmF1bHRzID0gbmV3IExhbmd1YWdlU2VydmljZURlZmF1bHRzSW1wbCgnbGVzcycsIGRpYWdub3N0aWNEZWZhdWx0LCBtb2RlQ29uZmlndXJhdGlvbkRlZmF1bHQpO1xyXG4vLyBFeHBvcnQgQVBJXHJcbmZ1bmN0aW9uIGNyZWF0ZUFQSSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgY3NzRGVmYXVsdHM6IGNzc0RlZmF1bHRzLFxyXG4gICAgICAgIGxlc3NEZWZhdWx0czogbGVzc0RlZmF1bHRzLFxyXG4gICAgICAgIHNjc3NEZWZhdWx0czogc2Nzc0RlZmF1bHRzXHJcbiAgICB9O1xyXG59XHJcbm1vbmFjby5sYW5ndWFnZXMuY3NzID0gY3JlYXRlQVBJKCk7XHJcbi8vIC0tLSBSZWdpc3RyYXRpb24gdG8gbW9uYWNvIGVkaXRvciAtLS1cclxuZnVuY3Rpb24gZ2V0TW9kZSgpIHtcclxuICAgIHJldHVybiBpbXBvcnQoJy4vY3NzTW9kZS5qcycpO1xyXG59XHJcbm1vbmFjby5sYW5ndWFnZXMub25MYW5ndWFnZSgnbGVzcycsIGZ1bmN0aW9uICgpIHtcclxuICAgIGdldE1vZGUoKS50aGVuKGZ1bmN0aW9uIChtb2RlKSB7IHJldHVybiBtb2RlLnNldHVwTW9kZShsZXNzRGVmYXVsdHMpOyB9KTtcclxufSk7XHJcbm1vbmFjby5sYW5ndWFnZXMub25MYW5ndWFnZSgnc2NzcycsIGZ1bmN0aW9uICgpIHtcclxuICAgIGdldE1vZGUoKS50aGVuKGZ1bmN0aW9uIChtb2RlKSB7IHJldHVybiBtb2RlLnNldHVwTW9kZShzY3NzRGVmYXVsdHMpOyB9KTtcclxufSk7XHJcbm1vbmFjby5sYW5ndWFnZXMub25MYW5ndWFnZSgnY3NzJywgZnVuY3Rpb24gKCkge1xyXG4gICAgZ2V0TW9kZSgpLnRoZW4oZnVuY3Rpb24gKG1vZGUpIHsgcmV0dXJuIG1vZGUuc2V0dXBNb2RlKGNzc0RlZmF1bHRzKTsgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/monaco.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/monaco.contribution.js":
/*!********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/monaco.contribution.js ***!
  \********************************************************************************/
/*! exports provided: LanguageServiceDefaultsImpl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LanguageServiceDefaultsImpl\", function() { return LanguageServiceDefaultsImpl; });\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../editor/editor.api.js */ \"./include-loader!./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar Emitter = monaco.Emitter;\r\n// --- HTML configuration and defaults ---------\r\nvar LanguageServiceDefaultsImpl = /** @class */ (function () {\r\n    function LanguageServiceDefaultsImpl(languageId, options, modeConfiguration) {\r\n        this._onDidChange = new Emitter();\r\n        this._languageId = languageId;\r\n        this.setOptions(options);\r\n        this.setModeConfiguration(modeConfiguration);\r\n    }\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\r\n        get: function () {\r\n            return this._onDidChange.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"options\", {\r\n        get: function () {\r\n            return this._options;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\r\n        get: function () {\r\n            return this._modeConfiguration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LanguageServiceDefaultsImpl.prototype.setOptions = function (options) {\r\n        this._options = options || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\r\n        this._modeConfiguration = modeConfiguration || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    ;\r\n    return LanguageServiceDefaultsImpl;\r\n}());\r\n\r\nvar formatDefaults = {\r\n    tabSize: 4,\r\n    insertSpaces: false,\r\n    wrapLineLength: 120,\r\n    unformatted: 'default\": \"a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, select, small, span, strong, sub, sup, textarea, tt, var',\r\n    contentUnformatted: 'pre',\r\n    indentInnerHtml: false,\r\n    preserveNewLines: true,\r\n    maxPreserveNewLines: null,\r\n    indentHandlebars: false,\r\n    endWithNewline: false,\r\n    extraLiners: 'head, body, /html',\r\n    wrapAttributes: 'auto'\r\n};\r\nvar htmlOptionsDefault = {\r\n    format: formatDefaults,\r\n    suggest: { html5: true, angular1: true, ionic: true }\r\n};\r\nvar handlebarOptionsDefault = {\r\n    format: formatDefaults,\r\n    suggest: { html5: true }\r\n};\r\nvar razorOptionsDefault = {\r\n    format: formatDefaults,\r\n    suggest: { html5: true, razor: true }\r\n};\r\nfunction getConfigurationDefault(languageId) {\r\n    return {\r\n        completionItems: true,\r\n        hovers: true,\r\n        documentSymbols: true,\r\n        links: true,\r\n        documentHighlights: true,\r\n        rename: true,\r\n        colors: true,\r\n        foldingRanges: true,\r\n        selectionRanges: true,\r\n        diagnostics: languageId === htmlLanguageId,\r\n        documentFormattingEdits: languageId === htmlLanguageId,\r\n        documentRangeFormattingEdits: languageId === htmlLanguageId // turned off for Razor and Handlebar\r\n    };\r\n}\r\nvar htmlLanguageId = 'html';\r\nvar handlebarsLanguageId = 'handlebars';\r\nvar razorLanguageId = 'razor';\r\nvar htmlDefaults = new LanguageServiceDefaultsImpl(htmlLanguageId, htmlOptionsDefault, getConfigurationDefault(htmlLanguageId));\r\nvar handlebarDefaults = new LanguageServiceDefaultsImpl(handlebarsLanguageId, handlebarOptionsDefault, getConfigurationDefault(handlebarsLanguageId));\r\nvar razorDefaults = new LanguageServiceDefaultsImpl(razorLanguageId, razorOptionsDefault, getConfigurationDefault(razorLanguageId));\r\n// Export API\r\nfunction createAPI() {\r\n    return {\r\n        htmlDefaults: htmlDefaults,\r\n        razorDefaults: razorDefaults,\r\n        handlebarDefaults: handlebarDefaults\r\n    };\r\n}\r\nmonaco.languages.html = createAPI();\r\n// --- Registration to monaco editor ---\r\nfunction getMode() {\r\n    return __webpack_require__.e(/*! import() */ 2).then(__webpack_require__.bind(null, /*! ./htmlMode.js */ \"./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js\"));\r\n}\r\nmonaco.languages.onLanguage(htmlLanguageId, function () {\r\n    getMode().then(function (mode) { return mode.setupMode(htmlDefaults); });\r\n});\r\nmonaco.languages.onLanguage(handlebarsLanguageId, function () {\r\n    getMode().then(function (mode) { return mode.setupMode(handlebarDefaults); });\r\n});\r\nmonaco.languages.onLanguage(razorLanguageId, function () {\r\n    getMode().then(function (mode) { return mode.setupMode(razorDefaults); });\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/html/monaco.contribution.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/monaco.contribution.js":
/*!********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/monaco.contribution.js ***!
  \********************************************************************************/
/*! exports provided: LanguageServiceDefaultsImpl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LanguageServiceDefaultsImpl\", function() { return LanguageServiceDefaultsImpl; });\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../editor/editor.api.js */ \"./include-loader!./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar Emitter = monaco.Emitter;\r\n// --- JSON configuration and defaults ---------\r\nvar LanguageServiceDefaultsImpl = /** @class */ (function () {\r\n    function LanguageServiceDefaultsImpl(languageId, diagnosticsOptions, modeConfiguration) {\r\n        this._onDidChange = new Emitter();\r\n        this._languageId = languageId;\r\n        this.setDiagnosticsOptions(diagnosticsOptions);\r\n        this.setModeConfiguration(modeConfiguration);\r\n    }\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\r\n        get: function () {\r\n            return this._onDidChange.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\r\n        get: function () {\r\n            return this._modeConfiguration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"diagnosticsOptions\", {\r\n        get: function () {\r\n            return this._diagnosticsOptions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LanguageServiceDefaultsImpl.prototype.setDiagnosticsOptions = function (options) {\r\n        this._diagnosticsOptions = options || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\r\n        this._modeConfiguration = modeConfiguration || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    ;\r\n    return LanguageServiceDefaultsImpl;\r\n}());\r\n\r\nvar diagnosticDefault = {\r\n    validate: true,\r\n    allowComments: true,\r\n    schemas: [],\r\n    enableSchemaRequest: false\r\n};\r\nvar modeConfigurationDefault = {\r\n    documentFormattingEdits: true,\r\n    documentRangeFormattingEdits: true,\r\n    completionItems: true,\r\n    hovers: true,\r\n    documentSymbols: true,\r\n    tokens: true,\r\n    colors: true,\r\n    foldingRanges: true,\r\n    diagnostics: true,\r\n    selectionRanges: true\r\n};\r\nvar jsonDefaults = new LanguageServiceDefaultsImpl('json', diagnosticDefault, modeConfigurationDefault);\r\n// Export API\r\nfunction createAPI() {\r\n    return {\r\n        jsonDefaults: jsonDefaults\r\n    };\r\n}\r\nmonaco.languages.json = createAPI();\r\n// --- Registration to monaco editor ---\r\nfunction getMode() {\r\n    return __webpack_require__.e(/*! import() */ 3).then(__webpack_require__.bind(null, /*! ./jsonMode.js */ \"./node_modules/monaco-editor/esm/vs/language/json/jsonMode.js\"));\r\n}\r\nmonaco.languages.register({\r\n    id: 'json',\r\n    extensions: ['.json', '.bowerrc', '.jshintrc', '.jscsrc', '.eslintrc', '.babelrc', '.har'],\r\n    aliases: ['JSON', 'json'],\r\n    mimetypes: ['application/json'],\r\n});\r\nmonaco.languages.onLanguage('json', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(jsonDefaults); });\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvanNvbi9tb25hY28uY29udHJpYnV0aW9uLmpzLmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXMuaGFzc29uL0RvY3VtZW50cy9Xb3Jrc3BhY2VzL29zLXdlYnZpei9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvanNvbi9tb25hY28uY29udHJpYnV0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi4vLi4vZWRpdG9yL2VkaXRvci5hcGkuanMnO1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbid1c2Ugc3RyaWN0JztcclxudmFyIEVtaXR0ZXIgPSBtb25hY28uRW1pdHRlcjtcclxuLy8gLS0tIEpTT04gY29uZmlndXJhdGlvbiBhbmQgZGVmYXVsdHMgLS0tLS0tLS0tXHJcbnZhciBMYW5ndWFnZVNlcnZpY2VEZWZhdWx0c0ltcGwgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBMYW5ndWFnZVNlcnZpY2VEZWZhdWx0c0ltcGwobGFuZ3VhZ2VJZCwgZGlhZ25vc3RpY3NPcHRpb25zLCBtb2RlQ29uZmlndXJhdGlvbikge1xyXG4gICAgICAgIHRoaXMuX29uRGlkQ2hhbmdlID0gbmV3IEVtaXR0ZXIoKTtcclxuICAgICAgICB0aGlzLl9sYW5ndWFnZUlkID0gbGFuZ3VhZ2VJZDtcclxuICAgICAgICB0aGlzLnNldERpYWdub3N0aWNzT3B0aW9ucyhkaWFnbm9zdGljc09wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMuc2V0TW9kZUNvbmZpZ3VyYXRpb24obW9kZUNvbmZpZ3VyYXRpb24pO1xyXG4gICAgfVxyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KExhbmd1YWdlU2VydmljZURlZmF1bHRzSW1wbC5wcm90b3R5cGUsIFwib25EaWRDaGFuZ2VcIiwge1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fb25EaWRDaGFuZ2UuZXZlbnQ7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTGFuZ3VhZ2VTZXJ2aWNlRGVmYXVsdHNJbXBsLnByb3RvdHlwZSwgXCJsYW5ndWFnZUlkXCIsIHtcclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2xhbmd1YWdlSWQ7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTGFuZ3VhZ2VTZXJ2aWNlRGVmYXVsdHNJbXBsLnByb3RvdHlwZSwgXCJtb2RlQ29uZmlndXJhdGlvblwiLCB7XHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9tb2RlQ29uZmlndXJhdGlvbjtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShMYW5ndWFnZVNlcnZpY2VEZWZhdWx0c0ltcGwucHJvdG90eXBlLCBcImRpYWdub3N0aWNzT3B0aW9uc1wiLCB7XHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9kaWFnbm9zdGljc09wdGlvbnM7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBMYW5ndWFnZVNlcnZpY2VEZWZhdWx0c0ltcGwucHJvdG90eXBlLnNldERpYWdub3N0aWNzT3B0aW9ucyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5fZGlhZ25vc3RpY3NPcHRpb25zID0gb3B0aW9ucyB8fCBPYmplY3QuY3JlYXRlKG51bGwpO1xyXG4gICAgICAgIHRoaXMuX29uRGlkQ2hhbmdlLmZpcmUodGhpcyk7XHJcbiAgICB9O1xyXG4gICAgTGFuZ3VhZ2VTZXJ2aWNlRGVmYXVsdHNJbXBsLnByb3RvdHlwZS5zZXRNb2RlQ29uZmlndXJhdGlvbiA9IGZ1bmN0aW9uIChtb2RlQ29uZmlndXJhdGlvbikge1xyXG4gICAgICAgIHRoaXMuX21vZGVDb25maWd1cmF0aW9uID0gbW9kZUNvbmZpZ3VyYXRpb24gfHwgT2JqZWN0LmNyZWF0ZShudWxsKTtcclxuICAgICAgICB0aGlzLl9vbkRpZENoYW5nZS5maXJlKHRoaXMpO1xyXG4gICAgfTtcclxuICAgIDtcclxuICAgIHJldHVybiBMYW5ndWFnZVNlcnZpY2VEZWZhdWx0c0ltcGw7XHJcbn0oKSk7XHJcbmV4cG9ydCB7IExhbmd1YWdlU2VydmljZURlZmF1bHRzSW1wbCB9O1xyXG52YXIgZGlhZ25vc3RpY0RlZmF1bHQgPSB7XHJcbiAgICB2YWxpZGF0ZTogdHJ1ZSxcclxuICAgIGFsbG93Q29tbWVudHM6IHRydWUsXHJcbiAgICBzY2hlbWFzOiBbXSxcclxuICAgIGVuYWJsZVNjaGVtYVJlcXVlc3Q6IGZhbHNlXHJcbn07XHJcbnZhciBtb2RlQ29uZmlndXJhdGlvbkRlZmF1bHQgPSB7XHJcbiAgICBkb2N1bWVudEZvcm1hdHRpbmdFZGl0czogdHJ1ZSxcclxuICAgIGRvY3VtZW50UmFuZ2VGb3JtYXR0aW5nRWRpdHM6IHRydWUsXHJcbiAgICBjb21wbGV0aW9uSXRlbXM6IHRydWUsXHJcbiAgICBob3ZlcnM6IHRydWUsXHJcbiAgICBkb2N1bWVudFN5bWJvbHM6IHRydWUsXHJcbiAgICB0b2tlbnM6IHRydWUsXHJcbiAgICBjb2xvcnM6IHRydWUsXHJcbiAgICBmb2xkaW5nUmFuZ2VzOiB0cnVlLFxyXG4gICAgZGlhZ25vc3RpY3M6IHRydWUsXHJcbiAgICBzZWxlY3Rpb25SYW5nZXM6IHRydWVcclxufTtcclxudmFyIGpzb25EZWZhdWx0cyA9IG5ldyBMYW5ndWFnZVNlcnZpY2VEZWZhdWx0c0ltcGwoJ2pzb24nLCBkaWFnbm9zdGljRGVmYXVsdCwgbW9kZUNvbmZpZ3VyYXRpb25EZWZhdWx0KTtcclxuLy8gRXhwb3J0IEFQSVxyXG5mdW5jdGlvbiBjcmVhdGVBUEkoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGpzb25EZWZhdWx0czoganNvbkRlZmF1bHRzXHJcbiAgICB9O1xyXG59XHJcbm1vbmFjby5sYW5ndWFnZXMuanNvbiA9IGNyZWF0ZUFQSSgpO1xyXG4vLyAtLS0gUmVnaXN0cmF0aW9uIHRvIG1vbmFjbyBlZGl0b3IgLS0tXHJcbmZ1bmN0aW9uIGdldE1vZGUoKSB7XHJcbiAgICByZXR1cm4gaW1wb3J0KCcuL2pzb25Nb2RlLmpzJyk7XHJcbn1cclxubW9uYWNvLmxhbmd1YWdlcy5yZWdpc3Rlcih7XHJcbiAgICBpZDogJ2pzb24nLFxyXG4gICAgZXh0ZW5zaW9uczogWycuanNvbicsICcuYm93ZXJyYycsICcuanNoaW50cmMnLCAnLmpzY3NyYycsICcuZXNsaW50cmMnLCAnLmJhYmVscmMnLCAnLmhhciddLFxyXG4gICAgYWxpYXNlczogWydKU09OJywgJ2pzb24nXSxcclxuICAgIG1pbWV0eXBlczogWydhcHBsaWNhdGlvbi9qc29uJ10sXHJcbn0pO1xyXG5tb25hY28ubGFuZ3VhZ2VzLm9uTGFuZ3VhZ2UoJ2pzb24nLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBnZXRNb2RlKCkudGhlbihmdW5jdGlvbiAobW9kZSkgeyByZXR1cm4gbW9kZS5zZXR1cE1vZGUoanNvbkRlZmF1bHRzKTsgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/json/monaco.contribution.js\n");

/***/ }),

/***/ "./node_modules/react-monaco-editor/lib/diff.js":
/*!******************************************************!*\
  !*** ./node_modules/react-monaco-editor/lib/diff.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar monaco = _interopRequireWildcard(__webpack_require__(/*! monaco-editor/esm/vs/editor/editor.api */ \"./include-loader!./node_modules/monaco-editor/esm/vs/editor/editor.api.js\"));\n\nvar _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ \"./node_modules/react-monaco-editor/node_modules/prop-types/index.js\"));\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./node_modules/react-monaco-editor/lib/utils.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar MonacoDiffEditor = /*#__PURE__*/function (_React$Component) {\n  _inherits(MonacoDiffEditor, _React$Component);\n\n  var _super = _createSuper(MonacoDiffEditor);\n\n  function MonacoDiffEditor(props) {\n    var _this;\n\n    _classCallCheck(this, MonacoDiffEditor);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"assignRef\", function (component) {\n      _this.containerElement = component;\n    });\n\n    _this.containerElement = undefined;\n    return _this;\n  }\n\n  _createClass(MonacoDiffEditor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initMonaco();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          language = _this$props.language,\n          theme = _this$props.theme,\n          height = _this$props.height,\n          options = _this$props.options,\n          width = _this$props.width;\n\n      var _this$editor$getModel = this.editor.getModel(),\n          original = _this$editor$getModel.original,\n          modified = _this$editor$getModel.modified;\n\n      if (this.props.original !== original.getValue()) {\n        original.setValue(this.props.original);\n      }\n\n      if (this.props.value != null && this.props.value !== modified.getValue()) {\n        this.__prevent_trigger_change_event = true;\n        this.editor.modifiedEditor.pushUndoStop();\n        modified.pushEditOperations([], [{\n          range: modified.getFullModelRange(),\n          text: this.props.value\n        }]);\n        this.editor.modifiedEditor.pushUndoStop();\n        this.__prevent_trigger_change_event = false;\n      }\n\n      if (prevProps.language !== language) {\n        monaco.editor.setModelLanguage(original, language);\n        monaco.editor.setModelLanguage(modified, language);\n      }\n\n      if (prevProps.theme !== theme) {\n        monaco.editor.setTheme(theme);\n      }\n\n      if (this.editor && (width !== prevProps.width || height !== prevProps.height)) {\n        this.editor.layout();\n      }\n\n      if (prevProps.options !== options) {\n        this.editor.updateOptions(options);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyMonaco();\n    }\n  }, {\n    key: \"editorWillMount\",\n    value: function editorWillMount() {\n      var editorWillMount = this.props.editorWillMount;\n      var options = editorWillMount(monaco);\n      return options || {};\n    }\n  }, {\n    key: \"editorDidMount\",\n    value: function editorDidMount(editor) {\n      var _this2 = this;\n\n      this.props.editorDidMount(editor, monaco);\n\n      var _editor$getModel = editor.getModel(),\n          modified = _editor$getModel.modified;\n\n      this._subscription = modified.onDidChangeContent(function (event) {\n        if (!_this2.__prevent_trigger_change_event) {\n          _this2.props.onChange(modified.getValue(), event);\n        }\n      });\n    }\n  }, {\n    key: \"initModels\",\n    value: function initModels(value, original) {\n      var language = this.props.language;\n      var originalModel = monaco.editor.createModel(original, language);\n      var modifiedModel = monaco.editor.createModel(value, language);\n      this.editor.setModel({\n        original: originalModel,\n        modified: modifiedModel\n      });\n    }\n  }, {\n    key: \"initMonaco\",\n    value: function initMonaco() {\n      var value = this.props.value != null ? this.props.value : this.props.defaultValue;\n      var _this$props2 = this.props,\n          original = _this$props2.original,\n          theme = _this$props2.theme,\n          options = _this$props2.options,\n          overrideServices = _this$props2.overrideServices;\n\n      if (this.containerElement) {\n        // Before initializing monaco editor\n        this.editorWillMount();\n        this.editor = monaco.editor.createDiffEditor(this.containerElement, _objectSpread({}, options, {}, theme ? {\n          theme: theme\n        } : {}), overrideServices); // After initializing monaco editor\n\n        this.initModels(value, original);\n        this.editorDidMount(this.editor);\n      }\n    }\n  }, {\n    key: \"destroyMonaco\",\n    value: function destroyMonaco() {\n      if (this.editor) {\n        this.editor.dispose();\n\n        var _this$editor$getModel2 = this.editor.getModel(),\n            original = _this$editor$getModel2.original,\n            modified = _this$editor$getModel2.modified;\n\n        if (original) {\n          original.dispose();\n        }\n\n        if (modified) {\n          modified.dispose();\n        }\n      }\n\n      if (this._subscription) {\n        this._subscription.dispose();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          width = _this$props3.width,\n          height = _this$props3.height;\n      var fixedWidth = (0, _utils.processSize)(width);\n      var fixedHeight = (0, _utils.processSize)(height);\n      var style = {\n        width: fixedWidth,\n        height: fixedHeight\n      };\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        ref: this.assignRef,\n        style: style,\n        className: \"react-monaco-editor-container\"\n      });\n    }\n  }]);\n\n  return MonacoDiffEditor;\n}(_react[\"default\"].Component);\n\nMonacoDiffEditor.propTypes = {\n  width: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n  height: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n  original: _propTypes[\"default\"].string,\n  value: _propTypes[\"default\"].string,\n  defaultValue: _propTypes[\"default\"].string,\n  language: _propTypes[\"default\"].string,\n  theme: _propTypes[\"default\"].string,\n  options: _propTypes[\"default\"].object,\n  overrideServices: _propTypes[\"default\"].object,\n  editorDidMount: _propTypes[\"default\"].func,\n  editorWillMount: _propTypes[\"default\"].func,\n  onChange: _propTypes[\"default\"].func\n};\nMonacoDiffEditor.defaultProps = {\n  width: \"100%\",\n  height: \"100%\",\n  original: null,\n  value: null,\n  defaultValue: \"\",\n  language: \"javascript\",\n  theme: null,\n  options: {},\n  overrideServices: {},\n  editorDidMount: _utils.noop,\n  editorWillMount: _utils.noop,\n  onChange: _utils.noop\n};\nvar _default = MonacoDiffEditor;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-monaco-editor/lib/diff.js\n");

/***/ }),

/***/ "./node_modules/react-monaco-editor/lib/editor.js":
/*!********************************************************!*\
  !*** ./node_modules/react-monaco-editor/lib/editor.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar monaco = _interopRequireWildcard(__webpack_require__(/*! monaco-editor/esm/vs/editor/editor.api */ \"./include-loader!./node_modules/monaco-editor/esm/vs/editor/editor.api.js\"));\n\nvar _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ \"./node_modules/react-monaco-editor/node_modules/prop-types/index.js\"));\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./node_modules/react-monaco-editor/lib/utils.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar MonacoEditor = /*#__PURE__*/function (_React$Component) {\n  _inherits(MonacoEditor, _React$Component);\n\n  var _super = _createSuper(MonacoEditor);\n\n  function MonacoEditor(props) {\n    var _this;\n\n    _classCallCheck(this, MonacoEditor);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"assignRef\", function (component) {\n      _this.containerElement = component;\n    });\n\n    _this.containerElement = undefined;\n    return _this;\n  }\n\n  _createClass(MonacoEditor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initMonaco();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          value = _this$props.value,\n          language = _this$props.language,\n          theme = _this$props.theme,\n          height = _this$props.height,\n          options = _this$props.options,\n          width = _this$props.width;\n      var editor = this.editor;\n      var model = editor.getModel();\n\n      if (this.props.value != null && this.props.value !== model.getValue()) {\n        this.__prevent_trigger_change_event = true;\n        this.editor.pushUndoStop();\n        model.pushEditOperations([], [{\n          range: model.getFullModelRange(),\n          text: value\n        }]);\n        this.editor.pushUndoStop();\n        this.__prevent_trigger_change_event = false;\n      }\n\n      if (prevProps.language !== language) {\n        monaco.editor.setModelLanguage(model, language);\n      }\n\n      if (prevProps.theme !== theme) {\n        monaco.editor.setTheme(theme);\n      }\n\n      if (editor && (width !== prevProps.width || height !== prevProps.height)) {\n        editor.layout();\n      }\n\n      if (prevProps.options !== options) {\n        editor.updateOptions(options);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyMonaco();\n    }\n  }, {\n    key: \"destroyMonaco\",\n    value: function destroyMonaco() {\n      if (this.editor) {\n        this.editor.dispose();\n        var model = this.editor.getModel();\n\n        if (model) {\n          model.dispose();\n        }\n      }\n\n      if (this._subscription) {\n        this._subscription.dispose();\n      }\n    }\n  }, {\n    key: \"initMonaco\",\n    value: function initMonaco() {\n      var value = this.props.value != null ? this.props.value : this.props.defaultValue;\n      var _this$props2 = this.props,\n          language = _this$props2.language,\n          theme = _this$props2.theme,\n          options = _this$props2.options,\n          overrideServices = _this$props2.overrideServices;\n\n      if (this.containerElement) {\n        // Before initializing monaco editor\n        Object.assign(options, this.editorWillMount());\n        this.editor = monaco.editor.create(this.containerElement, _objectSpread({\n          value: value,\n          language: language\n        }, options, {}, theme ? {\n          theme: theme\n        } : {}), overrideServices); // After initializing monaco editor\n\n        this.editorDidMount(this.editor);\n      }\n    }\n  }, {\n    key: \"editorWillMount\",\n    value: function editorWillMount() {\n      var editorWillMount = this.props.editorWillMount;\n      var options = editorWillMount(monaco);\n      return options || {};\n    }\n  }, {\n    key: \"editorDidMount\",\n    value: function editorDidMount(editor) {\n      var _this2 = this;\n\n      this.props.editorDidMount(editor, monaco);\n      this._subscription = editor.onDidChangeModelContent(function (event) {\n        if (!_this2.__prevent_trigger_change_event) {\n          _this2.props.onChange(editor.getValue(), event);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          width = _this$props3.width,\n          height = _this$props3.height;\n      var fixedWidth = (0, _utils.processSize)(width);\n      var fixedHeight = (0, _utils.processSize)(height);\n      var style = {\n        width: fixedWidth,\n        height: fixedHeight\n      };\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        ref: this.assignRef,\n        style: style,\n        className: \"react-monaco-editor-container\"\n      });\n    }\n  }]);\n\n  return MonacoEditor;\n}(_react[\"default\"].Component);\n\nMonacoEditor.propTypes = {\n  width: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n  height: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n  value: _propTypes[\"default\"].string,\n  defaultValue: _propTypes[\"default\"].string,\n  language: _propTypes[\"default\"].string,\n  theme: _propTypes[\"default\"].string,\n  options: _propTypes[\"default\"].object,\n  overrideServices: _propTypes[\"default\"].object,\n  editorDidMount: _propTypes[\"default\"].func,\n  editorWillMount: _propTypes[\"default\"].func,\n  onChange: _propTypes[\"default\"].func\n};\nMonacoEditor.defaultProps = {\n  width: \"100%\",\n  height: \"100%\",\n  value: null,\n  defaultValue: \"\",\n  language: \"javascript\",\n  theme: null,\n  options: {},\n  overrideServices: {},\n  editorDidMount: _utils.noop,\n  editorWillMount: _utils.noop,\n  onChange: _utils.noop\n};\nvar _default = MonacoEditor;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-monaco-editor/lib/editor.js\n");

/***/ }),

/***/ "./node_modules/react-monaco-editor/lib/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-monaco-editor/lib/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _editor[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"MonacoDiffEditor\", {\n  enumerable: true,\n  get: function get() {\n    return _diff[\"default\"];\n  }\n});\n\nvar _editor = _interopRequireDefault(__webpack_require__(/*! ./editor */ \"./node_modules/react-monaco-editor/lib/editor.js\"));\n\nvar _diff = _interopRequireDefault(__webpack_require__(/*! ./diff */ \"./node_modules/react-monaco-editor/lib/diff.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtbW9uYWNvLWVkaXRvci9saWIvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9yZWFjdC1tb25hY28tZWRpdG9yL2xpYi9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX2VkaXRvcltcImRlZmF1bHRcIl07XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTW9uYWNvRGlmZkVkaXRvclwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfZGlmZltcImRlZmF1bHRcIl07XG4gIH1cbn0pO1xuXG52YXIgX2VkaXRvciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vZWRpdG9yXCIpKTtcblxudmFyIF9kaWZmID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9kaWZmXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgXCJkZWZhdWx0XCI6IG9iaiB9OyB9Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-monaco-editor/lib/index.js\n");

/***/ }),

/***/ "./node_modules/react-monaco-editor/lib/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-monaco-editor/lib/utils.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.processSize = processSize;\nexports.noop = noop;\n\nfunction processSize(size) {\n  return !/^\\d+$/.test(size) ? size : \"\".concat(size, \"px\");\n}\n\nfunction noop() {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtbW9uYWNvLWVkaXRvci9saWIvdXRpbHMuanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9yZWFjdC1tb25hY28tZWRpdG9yL2xpYi91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMucHJvY2Vzc1NpemUgPSBwcm9jZXNzU2l6ZTtcbmV4cG9ydHMubm9vcCA9IG5vb3A7XG5cbmZ1bmN0aW9uIHByb2Nlc3NTaXplKHNpemUpIHtcbiAgcmV0dXJuICEvXlxcZCskLy50ZXN0KHNpemUpID8gc2l6ZSA6IFwiXCIuY29uY2F0KHNpemUsIFwicHhcIik7XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-monaco-editor/lib/utils.js\n");

/***/ }),

/***/ "./node_modules/react-monaco-editor/node_modules/prop-types/checkPropTypes.js":
/*!************************************************************************************!*\
  !*** ./node_modules/react-monaco-editor/node_modules/prop-types/checkPropTypes.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar printWarning = function() {};\n\nif (true) {\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/react-monaco-editor/node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (true) {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtbW9uYWNvLWVkaXRvci9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9jaGVja1Byb3BUeXBlcy5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL3JlYWN0LW1vbmFjby1lZGl0b3Ivbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuICB2YXIgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIHZhciBoYXMgPSBGdW5jdGlvbi5jYWxsLmJpbmQoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSk7XG5cbiAgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24odGV4dCkge1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgKyB0ZXh0O1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH07XG59XG5cbi8qKlxuICogQXNzZXJ0IHRoYXQgdGhlIHZhbHVlcyBtYXRjaCB3aXRoIHRoZSB0eXBlIHNwZWNzLlxuICogRXJyb3IgbWVzc2FnZXMgYXJlIG1lbW9yaXplZCBhbmQgd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHR5cGVTcGVjcyBNYXAgb2YgbmFtZSB0byBhIFJlYWN0UHJvcFR5cGVcbiAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZXMgUnVudGltZSB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHR5cGUtY2hlY2tlZFxuICogQHBhcmFtIHtzdHJpbmd9IGxvY2F0aW9uIGUuZy4gXCJwcm9wXCIsIFwiY29udGV4dFwiLCBcImNoaWxkIGNvbnRleHRcIlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbXBvbmVudE5hbWUgTmFtZSBvZiB0aGUgY29tcG9uZW50IGZvciBlcnJvciBtZXNzYWdlcy5cbiAqIEBwYXJhbSB7P0Z1bmN0aW9ufSBnZXRTdGFjayBSZXR1cm5zIHRoZSBjb21wb25lbnQgc3RhY2suXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGdldFN0YWNrKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgZm9yICh2YXIgdHlwZVNwZWNOYW1lIGluIHR5cGVTcGVjcykge1xuICAgICAgaWYgKGhhcyh0eXBlU3BlY3MsIHR5cGVTcGVjTmFtZSkpIHtcbiAgICAgICAgdmFyIGVycm9yO1xuICAgICAgICAvLyBQcm9wIHR5cGUgdmFsaWRhdGlvbiBtYXkgdGhyb3cuIEluIGNhc2UgdGhleSBkbywgd2UgZG9uJ3Qgd2FudCB0b1xuICAgICAgICAvLyBmYWlsIHRoZSByZW5kZXIgcGhhc2Ugd2hlcmUgaXQgZGlkbid0IGZhaWwgYmVmb3JlLiBTbyB3ZSBsb2cgaXQuXG4gICAgICAgIC8vIEFmdGVyIHRoZXNlIGhhdmUgYmVlbiBjbGVhbmVkIHVwLCB3ZSdsbCBsZXQgdGhlbSB0aHJvdy5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIGlzIGludGVudGlvbmFsbHkgYW4gaW52YXJpYW50IHRoYXQgZ2V0cyBjYXVnaHQuIEl0J3MgdGhlIHNhbWVcbiAgICAgICAgICAvLyBiZWhhdmlvciBhcyB3aXRob3V0IHRoaXMgc3RhdGVtZW50IGV4Y2VwdCB3aXRoIGEgYmV0dGVyIG1lc3NhZ2UuXG4gICAgICAgICAgaWYgKHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdmFyIGVyciA9IEVycm9yKFxuICAgICAgICAgICAgICAoY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnKSArICc6ICcgKyBsb2NhdGlvbiArICcgdHlwZSBgJyArIHR5cGVTcGVjTmFtZSArICdgIGlzIGludmFsaWQ7ICcgK1xuICAgICAgICAgICAgICAnaXQgbXVzdCBiZSBhIGZ1bmN0aW9uLCB1c3VhbGx5IGZyb20gdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLCBidXQgcmVjZWl2ZWQgYCcgKyB0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gKyAnYC4nXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVycm9yID0gdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0odmFsdWVzLCB0eXBlU3BlY05hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBudWxsLCBSZWFjdFByb3BUeXBlc1NlY3JldCk7XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgZXJyb3IgPSBleDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyb3IgJiYgIShlcnJvciBpbnN0YW5jZW9mIEVycm9yKSkge1xuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgIChjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycpICsgJzogdHlwZSBzcGVjaWZpY2F0aW9uIG9mICcgK1xuICAgICAgICAgICAgbG9jYXRpb24gKyAnIGAnICsgdHlwZVNwZWNOYW1lICsgJ2AgaXMgaW52YWxpZDsgdGhlIHR5cGUgY2hlY2tlciAnICtcbiAgICAgICAgICAgICdmdW5jdGlvbiBtdXN0IHJldHVybiBgbnVsbGAgb3IgYW4gYEVycm9yYCBidXQgcmV0dXJuZWQgYSAnICsgdHlwZW9mIGVycm9yICsgJy4gJyArXG4gICAgICAgICAgICAnWW91IG1heSBoYXZlIGZvcmdvdHRlbiB0byBwYXNzIGFuIGFyZ3VtZW50IHRvIHRoZSB0eXBlIGNoZWNrZXIgJyArXG4gICAgICAgICAgICAnY3JlYXRvciAoYXJyYXlPZiwgaW5zdGFuY2VPZiwgb2JqZWN0T2YsIG9uZU9mLCBvbmVPZlR5cGUsIGFuZCAnICtcbiAgICAgICAgICAgICdzaGFwZSBhbGwgcmVxdWlyZSBhbiBhcmd1bWVudCkuJ1xuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgIShlcnJvci5tZXNzYWdlIGluIGxvZ2dlZFR5cGVGYWlsdXJlcykpIHtcbiAgICAgICAgICAvLyBPbmx5IG1vbml0b3IgdGhpcyBmYWlsdXJlIG9uY2UgYmVjYXVzZSB0aGVyZSB0ZW5kcyB0byBiZSBhIGxvdCBvZiB0aGVcbiAgICAgICAgICAvLyBzYW1lIGVycm9yLlxuICAgICAgICAgIGxvZ2dlZFR5cGVGYWlsdXJlc1tlcnJvci5tZXNzYWdlXSA9IHRydWU7XG5cbiAgICAgICAgICB2YXIgc3RhY2sgPSBnZXRTdGFjayA/IGdldFN0YWNrKCkgOiAnJztcblxuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgICdGYWlsZWQgJyArIGxvY2F0aW9uICsgJyB0eXBlOiAnICsgZXJyb3IubWVzc2FnZSArIChzdGFjayAhPSBudWxsID8gc3RhY2sgOiAnJylcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogUmVzZXRzIHdhcm5pbmcgY2FjaGUgd2hlbiB0ZXN0aW5nLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmNoZWNrUHJvcFR5cGVzLnJlc2V0V2FybmluZ0NhY2hlID0gZnVuY3Rpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjaGVja1Byb3BUeXBlcztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-monaco-editor/node_modules/prop-types/checkPropTypes.js\n");

/***/ }),

/***/ "./node_modules/react-monaco-editor/node_modules/prop-types/factoryWithTypeCheckers.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/react-monaco-editor/node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\nvar ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/react-monaco-editor/node_modules/prop-types/lib/ReactPropTypesSecret.js\");\nvar checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ \"./node_modules/react-monaco-editor/node_modules/prop-types/checkPropTypes.js\");\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (true) {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (true) {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if ( true && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (true) {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-monaco-editor/node_modules/prop-types/factoryWithTypeCheckers.js\n");

/***/ }),

/***/ "./node_modules/react-monaco-editor/node_modules/prop-types/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/react-monaco-editor/node_modules/prop-types/index.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (true) {\n  var ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ \"./node_modules/react-monaco-editor/node_modules/prop-types/factoryWithTypeCheckers.js\")(ReactIs.isElement, throwOnDirectAccess);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtbW9uYWNvLWVkaXRvci9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2NocmlzLmhhc3Nvbi9Eb2N1bWVudHMvV29ya3NwYWNlcy9vcy13ZWJ2aXovbm9kZV9tb2R1bGVzL3JlYWN0LW1vbmFjby1lZGl0b3Ivbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FJQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-monaco-editor/node_modules/prop-types/index.js\n");

/***/ }),

/***/ "./node_modules/react-monaco-editor/node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/react-monaco-editor/node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtbW9uYWNvLWVkaXRvci9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L25vZGVfbW9kdWxlcy9yZWFjdC1tb25hY28tZWRpdG9yL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-monaco-editor/node_modules/prop-types/lib/ReactPropTypesSecret.js\n");

/***/ }),

/***/ "./packages/webviz-core/node_modules/monaco-vim/lib/cm/keymap_vim.js":
/*!***************************************************************************!*\
  !*** ./packages/webviz-core/node_modules/monaco-vim/lib/cm/keymap_vim.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.Vim = void 0;\n\nvar _cm_adapter = _interopRequireDefault(__webpack_require__(/*! ../cm_adapter */ \"./packages/webviz-core/node_modules/monaco-vim/lib/cm_adapter.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar defaultKeymap = [// Key to key mapping. This goes first to make it possible to override\n// existing mappings.\n{\n  keys: '<Left>',\n  type: 'keyToKey',\n  toKeys: 'h'\n}, {\n  keys: '<Right>',\n  type: 'keyToKey',\n  toKeys: 'l'\n}, {\n  keys: '<Up>',\n  type: 'keyToKey',\n  toKeys: 'k'\n}, {\n  keys: '<Down>',\n  type: 'keyToKey',\n  toKeys: 'j'\n}, {\n  keys: '<Space>',\n  type: 'keyToKey',\n  toKeys: 'l'\n}, {\n  keys: '<BS>',\n  type: 'keyToKey',\n  toKeys: 'h',\n  context: 'normal'\n}, {\n  keys: '<C-Space>',\n  type: 'keyToKey',\n  toKeys: 'W'\n}, {\n  keys: '<C-BS>',\n  type: 'keyToKey',\n  toKeys: 'B',\n  context: 'normal'\n}, {\n  keys: '<S-Space>',\n  type: 'keyToKey',\n  toKeys: 'w'\n}, {\n  keys: '<S-BS>',\n  type: 'keyToKey',\n  toKeys: 'b',\n  context: 'normal'\n}, {\n  keys: '<C-n>',\n  type: 'keyToKey',\n  toKeys: 'j'\n}, {\n  keys: '<C-p>',\n  type: 'keyToKey',\n  toKeys: 'k'\n}, {\n  keys: '<C-[>',\n  type: 'keyToKey',\n  toKeys: '<Esc>'\n}, {\n  keys: '<C-c>',\n  type: 'keyToKey',\n  toKeys: '<Esc>'\n}, {\n  keys: '<C-[>',\n  type: 'keyToKey',\n  toKeys: '<Esc>',\n  context: 'insert'\n}, {\n  keys: '<C-c>',\n  type: 'keyToKey',\n  toKeys: '<Esc>',\n  context: 'insert'\n}, {\n  keys: 's',\n  type: 'keyToKey',\n  toKeys: 'cl',\n  context: 'normal'\n}, {\n  keys: 's',\n  type: 'keyToKey',\n  toKeys: 'c',\n  context: 'visual'\n}, {\n  keys: 'S',\n  type: 'keyToKey',\n  toKeys: 'cc',\n  context: 'normal'\n}, {\n  keys: 'S',\n  type: 'keyToKey',\n  toKeys: 'VdO',\n  context: 'visual'\n}, {\n  keys: '<Home>',\n  type: 'keyToKey',\n  toKeys: '0'\n}, {\n  keys: '<End>',\n  type: 'keyToKey',\n  toKeys: '$'\n}, {\n  keys: '<PageUp>',\n  type: 'keyToKey',\n  toKeys: '<C-b>'\n}, {\n  keys: '<PageDown>',\n  type: 'keyToKey',\n  toKeys: '<C-f>'\n}, {\n  keys: '<CR>',\n  type: 'keyToKey',\n  toKeys: 'j^',\n  context: 'normal'\n}, {\n  keys: '<CR>',\n  type: 'keyToKey',\n  toKeys: 'j^',\n  context: 'visual'\n}, {\n  keys: '<Ins>',\n  type: 'action',\n  action: 'toggleOverwrite',\n  context: 'insert'\n}, // Motions\n{\n  keys: 'H',\n  type: 'motion',\n  motion: 'moveToTopLine',\n  motionArgs: {\n    linewise: true,\n    toJumplist: true\n  }\n}, {\n  keys: 'M',\n  type: 'motion',\n  motion: 'moveToMiddleLine',\n  motionArgs: {\n    linewise: true,\n    toJumplist: true\n  }\n}, {\n  keys: 'L',\n  type: 'motion',\n  motion: 'moveToBottomLine',\n  motionArgs: {\n    linewise: true,\n    toJumplist: true\n  }\n}, {\n  keys: 'h',\n  type: 'motion',\n  motion: 'moveByCharacters',\n  motionArgs: {\n    forward: false\n  }\n}, {\n  keys: 'l',\n  type: 'motion',\n  motion: 'moveByCharacters',\n  motionArgs: {\n    forward: true\n  }\n}, {\n  keys: 'j',\n  type: 'motion',\n  motion: 'moveByLines',\n  motionArgs: {\n    forward: true,\n    linewise: true\n  }\n}, {\n  keys: 'k',\n  type: 'motion',\n  motion: 'moveByLines',\n  motionArgs: {\n    forward: false,\n    linewise: true\n  }\n}, {\n  keys: 'gj',\n  type: 'motion',\n  motion: 'moveByDisplayLines',\n  motionArgs: {\n    forward: true\n  }\n}, {\n  keys: 'gk',\n  type: 'motion',\n  motion: 'moveByDisplayLines',\n  motionArgs: {\n    forward: false\n  }\n}, {\n  keys: 'w',\n  type: 'motion',\n  motion: 'moveByWords',\n  motionArgs: {\n    forward: true,\n    wordEnd: false\n  }\n}, {\n  keys: 'W',\n  type: 'motion',\n  motion: 'moveByWords',\n  motionArgs: {\n    forward: true,\n    wordEnd: false,\n    bigWord: true\n  }\n}, {\n  keys: 'e',\n  type: 'motion',\n  motion: 'moveByWords',\n  motionArgs: {\n    forward: true,\n    wordEnd: true,\n    inclusive: true\n  }\n}, {\n  keys: 'E',\n  type: 'motion',\n  motion: 'moveByWords',\n  motionArgs: {\n    forward: true,\n    wordEnd: true,\n    bigWord: true,\n    inclusive: true\n  }\n}, {\n  keys: 'b',\n  type: 'motion',\n  motion: 'moveByWords',\n  motionArgs: {\n    forward: false,\n    wordEnd: false\n  }\n}, {\n  keys: 'B',\n  type: 'motion',\n  motion: 'moveByWords',\n  motionArgs: {\n    forward: false,\n    wordEnd: false,\n    bigWord: true\n  }\n}, {\n  keys: 'ge',\n  type: 'motion',\n  motion: 'moveByWords',\n  motionArgs: {\n    forward: false,\n    wordEnd: true,\n    inclusive: true\n  }\n}, {\n  keys: 'gE',\n  type: 'motion',\n  motion: 'moveByWords',\n  motionArgs: {\n    forward: false,\n    wordEnd: true,\n    bigWord: true,\n    inclusive: true\n  }\n}, {\n  keys: '{',\n  type: 'motion',\n  motion: 'moveByParagraph',\n  motionArgs: {\n    forward: false,\n    toJumplist: true\n  }\n}, {\n  keys: '}',\n  type: 'motion',\n  motion: 'moveByParagraph',\n  motionArgs: {\n    forward: true,\n    toJumplist: true\n  }\n}, {\n  keys: '(',\n  type: 'motion',\n  motion: 'moveBySentence',\n  motionArgs: {\n    forward: false\n  }\n}, {\n  keys: ')',\n  type: 'motion',\n  motion: 'moveBySentence',\n  motionArgs: {\n    forward: true\n  }\n}, {\n  keys: '<C-f>',\n  type: 'motion',\n  motion: 'moveByPage',\n  motionArgs: {\n    forward: true\n  }\n}, {\n  keys: '<C-b>',\n  type: 'motion',\n  motion: 'moveByPage',\n  motionArgs: {\n    forward: false\n  }\n}, {\n  keys: '<C-d>',\n  type: 'motion',\n  motion: 'moveByScroll',\n  motionArgs: {\n    forward: true,\n    explicitRepeat: true\n  }\n}, {\n  keys: '<C-u>',\n  type: 'motion',\n  motion: 'moveByScroll',\n  motionArgs: {\n    forward: false,\n    explicitRepeat: true\n  }\n}, {\n  keys: 'gg',\n  type: 'motion',\n  motion: 'moveToLineOrEdgeOfDocument',\n  motionArgs: {\n    forward: false,\n    explicitRepeat: true,\n    linewise: true,\n    toJumplist: true\n  }\n}, {\n  keys: 'G',\n  type: 'motion',\n  motion: 'moveToLineOrEdgeOfDocument',\n  motionArgs: {\n    forward: true,\n    explicitRepeat: true,\n    linewise: true,\n    toJumplist: true\n  }\n}, {\n  keys: '0',\n  type: 'motion',\n  motion: 'moveToStartOfLine'\n}, {\n  keys: '^',\n  type: 'motion',\n  motion: 'moveToFirstNonWhiteSpaceCharacter'\n}, {\n  keys: '+',\n  type: 'motion',\n  motion: 'moveByLines',\n  motionArgs: {\n    forward: true,\n    toFirstChar: true\n  }\n}, {\n  keys: '-',\n  type: 'motion',\n  motion: 'moveByLines',\n  motionArgs: {\n    forward: false,\n    toFirstChar: true\n  }\n}, {\n  keys: '_',\n  type: 'motion',\n  motion: 'moveByLines',\n  motionArgs: {\n    forward: true,\n    toFirstChar: true,\n    repeatOffset: -1\n  }\n}, {\n  keys: '$',\n  type: 'motion',\n  motion: 'moveToEol',\n  motionArgs: {\n    inclusive: true\n  }\n}, {\n  keys: '%',\n  type: 'motion',\n  motion: 'moveToMatchedSymbol',\n  motionArgs: {\n    inclusive: true,\n    toJumplist: true\n  }\n}, {\n  keys: 'f<character>',\n  type: 'motion',\n  motion: 'moveToCharacter',\n  motionArgs: {\n    forward: true,\n    inclusive: true\n  }\n}, {\n  keys: 'F<character>',\n  type: 'motion',\n  motion: 'moveToCharacter',\n  motionArgs: {\n    forward: false\n  }\n}, {\n  keys: 't<character>',\n  type: 'motion',\n  motion: 'moveTillCharacter',\n  motionArgs: {\n    forward: true,\n    inclusive: true\n  }\n}, {\n  keys: 'T<character>',\n  type: 'motion',\n  motion: 'moveTillCharacter',\n  motionArgs: {\n    forward: false\n  }\n}, {\n  keys: ';',\n  type: 'motion',\n  motion: 'repeatLastCharacterSearch',\n  motionArgs: {\n    forward: true\n  }\n}, {\n  keys: ',',\n  type: 'motion',\n  motion: 'repeatLastCharacterSearch',\n  motionArgs: {\n    forward: false\n  }\n}, {\n  keys: '\\'<character>',\n  type: 'motion',\n  motion: 'goToMark',\n  motionArgs: {\n    toJumplist: true,\n    linewise: true\n  }\n}, {\n  keys: '`<character>',\n  type: 'motion',\n  motion: 'goToMark',\n  motionArgs: {\n    toJumplist: true\n  }\n}, {\n  keys: ']`',\n  type: 'motion',\n  motion: 'jumpToMark',\n  motionArgs: {\n    forward: true\n  }\n}, {\n  keys: '[`',\n  type: 'motion',\n  motion: 'jumpToMark',\n  motionArgs: {\n    forward: false\n  }\n}, {\n  keys: ']\\'',\n  type: 'motion',\n  motion: 'jumpToMark',\n  motionArgs: {\n    forward: true,\n    linewise: true\n  }\n}, {\n  keys: '[\\'',\n  type: 'motion',\n  motion: 'jumpToMark',\n  motionArgs: {\n    forward: false,\n    linewise: true\n  }\n}, // the next two aren't motions but must come before more general motion declarations\n{\n  keys: ']p',\n  type: 'action',\n  action: 'paste',\n  isEdit: true,\n  actionArgs: {\n    after: true,\n    isEdit: true,\n    matchIndent: true\n  }\n}, {\n  keys: '[p',\n  type: 'action',\n  action: 'paste',\n  isEdit: true,\n  actionArgs: {\n    after: false,\n    isEdit: true,\n    matchIndent: true\n  }\n}, {\n  keys: ']<character>',\n  type: 'motion',\n  motion: 'moveToSymbol',\n  motionArgs: {\n    forward: true,\n    toJumplist: true\n  }\n}, {\n  keys: '[<character>',\n  type: 'motion',\n  motion: 'moveToSymbol',\n  motionArgs: {\n    forward: false,\n    toJumplist: true\n  }\n}, {\n  keys: '|',\n  type: 'motion',\n  motion: 'moveToColumn'\n}, {\n  keys: 'o',\n  type: 'motion',\n  motion: 'moveToOtherHighlightedEnd',\n  context: 'visual'\n}, {\n  keys: 'O',\n  type: 'motion',\n  motion: 'moveToOtherHighlightedEnd',\n  motionArgs: {\n    sameLine: true\n  },\n  context: 'visual'\n}, // Operators\n{\n  keys: 'd',\n  type: 'operator',\n  operator: 'delete'\n}, {\n  keys: 'y',\n  type: 'operator',\n  operator: 'yank'\n}, {\n  keys: 'c',\n  type: 'operator',\n  operator: 'change'\n}, {\n  keys: '>',\n  type: 'operator',\n  operator: 'indent',\n  operatorArgs: {\n    indentRight: true\n  }\n}, {\n  keys: '<',\n  type: 'operator',\n  operator: 'indent',\n  operatorArgs: {\n    indentRight: false\n  }\n}, {\n  keys: 'g~',\n  type: 'operator',\n  operator: 'changeCase'\n}, {\n  keys: 'gu',\n  type: 'operator',\n  operator: 'changeCase',\n  operatorArgs: {\n    toLower: true\n  },\n  isEdit: true\n}, {\n  keys: 'gU',\n  type: 'operator',\n  operator: 'changeCase',\n  operatorArgs: {\n    toLower: false\n  },\n  isEdit: true\n}, {\n  keys: 'n',\n  type: 'motion',\n  motion: 'findNext',\n  motionArgs: {\n    forward: true,\n    toJumplist: true\n  }\n}, {\n  keys: 'N',\n  type: 'motion',\n  motion: 'findNext',\n  motionArgs: {\n    forward: false,\n    toJumplist: true\n  }\n}, // Operator-Motion dual commands\n{\n  keys: 'x',\n  type: 'operatorMotion',\n  operator: 'delete',\n  motion: 'moveByCharacters',\n  motionArgs: {\n    forward: true\n  },\n  operatorMotionArgs: {\n    visualLine: false\n  }\n}, {\n  keys: 'X',\n  type: 'operatorMotion',\n  operator: 'delete',\n  motion: 'moveByCharacters',\n  motionArgs: {\n    forward: false\n  },\n  operatorMotionArgs: {\n    visualLine: true\n  }\n}, {\n  keys: 'D',\n  type: 'operatorMotion',\n  operator: 'delete',\n  motion: 'moveToEol',\n  motionArgs: {\n    inclusive: true\n  },\n  context: 'normal'\n}, {\n  keys: 'D',\n  type: 'operator',\n  operator: 'delete',\n  operatorArgs: {\n    linewise: true\n  },\n  context: 'visual'\n}, {\n  keys: 'Y',\n  type: 'operatorMotion',\n  operator: 'yank',\n  motion: 'expandToLine',\n  motionArgs: {\n    linewise: true\n  },\n  context: 'normal'\n}, {\n  keys: 'Y',\n  type: 'operator',\n  operator: 'yank',\n  operatorArgs: {\n    linewise: true\n  },\n  context: 'visual'\n}, {\n  keys: 'C',\n  type: 'operatorMotion',\n  operator: 'change',\n  motion: 'moveToEol',\n  motionArgs: {\n    inclusive: true\n  },\n  context: 'normal'\n}, {\n  keys: 'C',\n  type: 'operator',\n  operator: 'change',\n  operatorArgs: {\n    linewise: true\n  },\n  context: 'visual'\n}, {\n  keys: '~',\n  type: 'operatorMotion',\n  operator: 'changeCase',\n  motion: 'moveByCharacters',\n  motionArgs: {\n    forward: true\n  },\n  operatorArgs: {\n    shouldMoveCursor: true\n  },\n  context: 'normal'\n}, {\n  keys: '~',\n  type: 'operator',\n  operator: 'changeCase',\n  context: 'visual'\n}, {\n  keys: '<C-w>',\n  type: 'operatorMotion',\n  operator: 'delete',\n  motion: 'moveByWords',\n  motionArgs: {\n    forward: false,\n    wordEnd: false\n  },\n  context: 'insert'\n}, // Actions\n{\n  keys: '<C-i>',\n  type: 'action',\n  action: 'jumpListWalk',\n  actionArgs: {\n    forward: true\n  }\n}, {\n  keys: '<C-o>',\n  type: 'action',\n  action: 'jumpListWalk',\n  actionArgs: {\n    forward: false\n  }\n}, {\n  keys: '<C-e>',\n  type: 'action',\n  action: 'scroll',\n  actionArgs: {\n    forward: true,\n    linewise: true\n  }\n}, {\n  keys: '<C-y>',\n  type: 'action',\n  action: 'scroll',\n  actionArgs: {\n    forward: false,\n    linewise: true\n  }\n}, {\n  keys: 'a',\n  type: 'action',\n  action: 'enterInsertMode',\n  isEdit: true,\n  actionArgs: {\n    insertAt: 'charAfter'\n  },\n  context: 'normal'\n}, {\n  keys: 'A',\n  type: 'action',\n  action: 'enterInsertMode',\n  isEdit: true,\n  actionArgs: {\n    insertAt: 'eol'\n  },\n  context: 'normal'\n}, {\n  keys: 'A',\n  type: 'action',\n  action: 'enterInsertMode',\n  isEdit: true,\n  actionArgs: {\n    insertAt: 'endOfSelectedArea'\n  },\n  context: 'visual'\n}, {\n  keys: 'i',\n  type: 'action',\n  action: 'enterInsertMode',\n  isEdit: true,\n  actionArgs: {\n    insertAt: 'inplace'\n  },\n  context: 'normal'\n}, {\n  keys: 'I',\n  type: 'action',\n  action: 'enterInsertMode',\n  isEdit: true,\n  actionArgs: {\n    insertAt: 'firstNonBlank'\n  },\n  context: 'normal'\n}, {\n  keys: 'I',\n  type: 'action',\n  action: 'enterInsertMode',\n  isEdit: true,\n  actionArgs: {\n    insertAt: 'startOfSelectedArea'\n  },\n  context: 'visual'\n}, {\n  keys: 'o',\n  type: 'action',\n  action: 'newLineAndEnterInsertMode',\n  isEdit: true,\n  interlaceInsertRepeat: true,\n  actionArgs: {\n    after: true\n  },\n  context: 'normal'\n}, {\n  keys: 'O',\n  type: 'action',\n  action: 'newLineAndEnterInsertMode',\n  isEdit: true,\n  interlaceInsertRepeat: true,\n  actionArgs: {\n    after: false\n  },\n  context: 'normal'\n}, {\n  keys: 'v',\n  type: 'action',\n  action: 'toggleVisualMode'\n}, {\n  keys: 'V',\n  type: 'action',\n  action: 'toggleVisualMode',\n  actionArgs: {\n    linewise: true\n  }\n}, {\n  keys: '<C-v>',\n  type: 'action',\n  action: 'toggleVisualMode',\n  actionArgs: {\n    blockwise: true\n  }\n}, {\n  keys: '<C-q>',\n  type: 'action',\n  action: 'toggleVisualMode',\n  actionArgs: {\n    blockwise: true\n  }\n}, {\n  keys: 'gv',\n  type: 'action',\n  action: 'reselectLastSelection'\n}, {\n  keys: 'J',\n  type: 'action',\n  action: 'joinLines',\n  isEdit: true\n}, {\n  keys: 'p',\n  type: 'action',\n  action: 'paste',\n  isEdit: true,\n  actionArgs: {\n    after: true,\n    isEdit: true\n  }\n}, {\n  keys: 'P',\n  type: 'action',\n  action: 'paste',\n  isEdit: true,\n  actionArgs: {\n    after: false,\n    isEdit: true\n  }\n}, {\n  keys: 'r<character>',\n  type: 'action',\n  action: 'replace',\n  isEdit: true\n}, {\n  keys: '@<character>',\n  type: 'action',\n  action: 'replayMacro'\n}, {\n  keys: 'q<character>',\n  type: 'action',\n  action: 'enterMacroRecordMode'\n}, // Handle Replace-mode as a special case of insert mode.\n{\n  keys: 'R',\n  type: 'action',\n  action: 'enterInsertMode',\n  isEdit: true,\n  actionArgs: {\n    replace: true\n  }\n}, {\n  keys: 'u',\n  type: 'action',\n  action: 'undo',\n  context: 'normal'\n}, {\n  keys: 'u',\n  type: 'operator',\n  operator: 'changeCase',\n  operatorArgs: {\n    toLower: true\n  },\n  context: 'visual',\n  isEdit: true\n}, {\n  keys: 'U',\n  type: 'operator',\n  operator: 'changeCase',\n  operatorArgs: {\n    toLower: false\n  },\n  context: 'visual',\n  isEdit: true\n}, {\n  keys: '<C-r>',\n  type: 'action',\n  action: 'redo'\n}, {\n  keys: 'm<character>',\n  type: 'action',\n  action: 'setMark'\n}, {\n  keys: '\"<character>',\n  type: 'action',\n  action: 'setRegister'\n}, {\n  keys: 'zz',\n  type: 'action',\n  action: 'scrollToCursor',\n  actionArgs: {\n    position: 'center'\n  }\n}, {\n  keys: 'z.',\n  type: 'action',\n  action: 'scrollToCursor',\n  actionArgs: {\n    position: 'center'\n  },\n  motion: 'moveToFirstNonWhiteSpaceCharacter'\n}, {\n  keys: 'zt',\n  type: 'action',\n  action: 'scrollToCursor',\n  actionArgs: {\n    position: 'top'\n  }\n}, {\n  keys: 'z<CR>',\n  type: 'action',\n  action: 'scrollToCursor',\n  actionArgs: {\n    position: 'top'\n  },\n  motion: 'moveToFirstNonWhiteSpaceCharacter'\n}, {\n  keys: 'z-',\n  type: 'action',\n  action: 'scrollToCursor',\n  actionArgs: {\n    position: 'bottom'\n  }\n}, {\n  keys: 'zb',\n  type: 'action',\n  action: 'scrollToCursor',\n  actionArgs: {\n    position: 'bottom'\n  },\n  motion: 'moveToFirstNonWhiteSpaceCharacter'\n}, {\n  keys: '.',\n  type: 'action',\n  action: 'repeatLastEdit'\n}, {\n  keys: '<C-a>',\n  type: 'action',\n  action: 'incrementNumberToken',\n  isEdit: true,\n  actionArgs: {\n    increase: true,\n    backtrack: false\n  }\n}, {\n  keys: '<C-x>',\n  type: 'action',\n  action: 'incrementNumberToken',\n  isEdit: true,\n  actionArgs: {\n    increase: false,\n    backtrack: false\n  }\n}, {\n  keys: '<C-t>',\n  type: 'action',\n  action: 'indent',\n  actionArgs: {\n    indentRight: true\n  },\n  context: 'insert'\n}, {\n  keys: '<C-d>',\n  type: 'action',\n  action: 'indent',\n  actionArgs: {\n    indentRight: false\n  },\n  context: 'insert'\n}, // Text object motions\n{\n  keys: 'a<character>',\n  type: 'motion',\n  motion: 'textObjectManipulation'\n}, {\n  keys: 'i<character>',\n  type: 'motion',\n  motion: 'textObjectManipulation',\n  motionArgs: {\n    textObjectInner: true\n  }\n}, // Search\n{\n  keys: '/',\n  type: 'search',\n  searchArgs: {\n    forward: true,\n    querySrc: 'prompt',\n    toJumplist: true\n  }\n}, {\n  keys: '?',\n  type: 'search',\n  searchArgs: {\n    forward: false,\n    querySrc: 'prompt',\n    toJumplist: true\n  }\n}, {\n  keys: '*',\n  type: 'search',\n  searchArgs: {\n    forward: true,\n    querySrc: 'wordUnderCursor',\n    wholeWordOnly: true,\n    toJumplist: true\n  }\n}, {\n  keys: '#',\n  type: 'search',\n  searchArgs: {\n    forward: false,\n    querySrc: 'wordUnderCursor',\n    wholeWordOnly: true,\n    toJumplist: true\n  }\n}, {\n  keys: 'g*',\n  type: 'search',\n  searchArgs: {\n    forward: true,\n    querySrc: 'wordUnderCursor',\n    toJumplist: true\n  }\n}, {\n  keys: 'g#',\n  type: 'search',\n  searchArgs: {\n    forward: false,\n    querySrc: 'wordUnderCursor',\n    toJumplist: true\n  }\n}, // Ex command\n{\n  keys: ':',\n  type: 'ex'\n}];\n/**\n * Ex commands\n * Care must be taken when adding to the default Ex command map. For any\n * pair of commands that have a shared prefix, at least one of their\n * shortNames must not match the prefix of the other command.\n */\n\nvar defaultExCommandMap = [{\n  name: 'colorscheme',\n  shortName: 'colo'\n}, {\n  name: 'map'\n}, {\n  name: 'imap',\n  shortName: 'im'\n}, {\n  name: 'nmap',\n  shortName: 'nm'\n}, {\n  name: 'vmap',\n  shortName: 'vm'\n}, {\n  name: 'unmap'\n}, {\n  name: 'write',\n  shortName: 'w'\n}, {\n  name: 'undo',\n  shortName: 'u'\n}, {\n  name: 'redo',\n  shortName: 'red'\n}, {\n  name: 'set',\n  shortName: 'se'\n}, {\n  name: 'set',\n  shortName: 'se'\n}, {\n  name: 'setlocal',\n  shortName: 'setl'\n}, {\n  name: 'setglobal',\n  shortName: 'setg'\n}, {\n  name: 'sort',\n  shortName: 'sor'\n}, {\n  name: 'substitute',\n  shortName: 's',\n  possiblyAsync: true\n}, {\n  name: 'nohlsearch',\n  shortName: 'noh'\n}, {\n  name: 'yank',\n  shortName: 'y'\n}, {\n  name: 'delmarks',\n  shortName: 'delm'\n}, {\n  name: 'registers',\n  shortName: 'reg',\n  excludeFromCommandHistory: true\n}, {\n  name: 'global',\n  shortName: 'g'\n}];\nvar Pos = _cm_adapter[\"default\"].Pos;\n\nvar Vim = function Vim() {\n  function enterVimMode(cm) {\n    cm.setOption('disableInput', true);\n    cm.setOption('showCursorWhenSelecting', false);\n\n    _cm_adapter[\"default\"].signal(cm, \"vim-mode-change\", {\n      mode: \"normal\"\n    });\n\n    cm.on('cursorActivity', onCursorActivity);\n    maybeInitVimState(cm); // CodeMirror.on(cm.getInputField(), 'paste', getOnPasteFn(cm));\n\n    cm.enterVimMode();\n  }\n\n  function leaveVimMode(cm) {\n    cm.setOption('disableInput', false);\n    cm.off('cursorActivity', onCursorActivity); // CodeMirror.off(cm.getInputField(), 'paste', getOnPasteFn(cm));\n\n    cm.state.vim = null;\n    cm.leaveVimMode();\n  }\n\n  function detachVimMap(cm, next) {\n    cm.attached = false;\n\n    if (this == _cm_adapter[\"default\"].keyMap.vim) {\n      _cm_adapter[\"default\"].rmClass(cm.getWrapperElement(), \"cm-fat-cursor\"); // if (cm.getOption(\"inputStyle\") == \"contenteditable\" && document.body.style.caretColor != null) {\n      //   disableFatCursorMark(cm);\n      //   cm.getInputField().style.caretColor = \"\";\n      // }\n\n    }\n\n    if (!next || next.attach != attachVimMap) leaveVimMode(cm);\n  }\n\n  function attachVimMap(cm, prev) {\n    if (this == _cm_adapter[\"default\"].keyMap.vim) {\n      cm.attached = true;\n    }\n\n    if (!prev || prev.attach != attachVimMap) enterVimMode(cm);\n  }\n\n  function fatCursorMarks(cm) {\n    var ranges = cm.listSelections(),\n        result = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n\n      if (range.empty()) {\n        if (range.anchor.ch < cm.getLine(range.anchor.line).length) {\n          result.push(cm.markText(range.anchor, Pos(range.anchor.line, range.anchor.ch + 1), {\n            className: \"cm-fat-cursor-mark\"\n          }));\n        } else {\n          var widget = document.createElement(\"span\");\n          widget.textContent = \"\\xA0\";\n          widget.className = \"cm-fat-cursor-mark\";\n          result.push(cm.setBookmark(range.anchor, {\n            widget: widget\n          }));\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function updateFatCursorMark(cm) {\n    var marks = cm.state.fatCursorMarks;\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      marks[i].clear();\n    }\n    cm.state.fatCursorMarks = fatCursorMarks(cm);\n  }\n\n  function enableFatCursorMark(cm) {\n    cm.state.fatCursorMarks = fatCursorMarks(cm);\n    cm.on(\"cursorActivity\", updateFatCursorMark);\n  }\n\n  function disableFatCursorMark(cm) {\n    var marks = cm.state.fatCursorMarks;\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      marks[i].clear();\n    }\n    cm.state.fatCursorMarks = null;\n    cm.off(\"cursorActivity\", updateFatCursorMark);\n  } // Deprecated, simply setting the keymap works again.\n\n\n  _cm_adapter[\"default\"].defineOption('vimMode', false, function (cm, val, prev) {\n    if (val && cm.getOption(\"keyMap\") != \"vim\") cm.setOption(\"keyMap\", \"vim\");else if (!val && prev != _cm_adapter[\"default\"].Init && /^vim/.test(cm.getOption(\"keyMap\"))) cm.setOption(\"keyMap\", \"default\");\n  });\n\n  function cmKey(key, cm) {\n    if (!cm) {\n      return undefined;\n    }\n\n    if (this[key]) {\n      return this[key];\n    }\n\n    var vimKey = cmKeyToVimKey(key);\n\n    if (!vimKey) {\n      return false;\n    }\n\n    var cmd = _cm_adapter[\"default\"].Vim.findKey(cm, vimKey);\n\n    if (typeof cmd == 'function') {\n      _cm_adapter[\"default\"].signal(cm, 'vim-keypress', vimKey);\n    }\n\n    return cmd;\n  }\n\n  var modifiers = {\n    'Shift': 'S',\n    'Ctrl': 'C',\n    'Alt': 'A',\n    'Cmd': 'D',\n    'Mod': 'A'\n  };\n  var specialKeys = {\n    Enter: 'CR',\n    Backspace: 'BS',\n    Delete: 'Del',\n    Insert: 'Ins'\n  };\n\n  function cmKeyToVimKey(key) {\n    if (key.charAt(0) == '\\'') {\n      // Keypress character binding of format \"'a'\"\n      return key.charAt(1);\n    }\n\n    var pieces = key.split(/-(?!$)/);\n    var lastPiece = pieces[pieces.length - 1];\n\n    if (pieces.length == 1 && pieces[0].length == 1) {\n      // No-modifier bindings use literal character bindings above. Skip.\n      return false;\n    } else if (pieces.length == 2 && pieces[0] == 'Shift' && lastPiece.length == 1) {\n      // Ignore Shift+char bindings as they should be handled by literal character.\n      return false;\n    }\n\n    var hasCharacter = false;\n\n    for (var i = 0; i < pieces.length; i++) {\n      var piece = pieces[i];\n\n      if (piece in modifiers) {\n        pieces[i] = modifiers[piece];\n      } else {\n        hasCharacter = true;\n      }\n\n      if (piece in specialKeys) {\n        pieces[i] = specialKeys[piece];\n      }\n    }\n\n    if (!hasCharacter) {\n      // Vim does not support modifier only keys.\n      return false;\n    } // TODO: Current bindings expect the character to be lower case, but\n    // it looks like vim key notation uses upper case.\n\n\n    if (isUpperCase(lastPiece)) {\n      pieces[pieces.length - 1] = lastPiece.toLowerCase();\n    }\n\n    return '<' + pieces.join('-') + '>';\n  }\n\n  function getOnPasteFn(cm) {\n    var vim = cm.state.vim;\n\n    if (!vim || !vim.onPasteFn) {\n      vim.onPasteFn = function () {\n        if (!vim.insertMode) {\n          cm.setCursor(offsetCursor(cm.getCursor(), 0, 1));\n          actions.enterInsertMode(cm, {}, vim);\n        }\n      };\n    }\n\n    return vim.onPasteFn;\n  }\n\n  var numberRegex = /[\\d]/;\n  var wordCharTest = [_cm_adapter[\"default\"].isWordChar, function (ch) {\n    return ch && !_cm_adapter[\"default\"].isWordChar(ch) && !/\\s/.test(ch);\n  }],\n      bigWordCharTest = [function (ch) {\n    return /\\S/.test(ch);\n  }];\n\n  function makeKeyRange(start, size) {\n    var keys = [];\n\n    for (var i = start; i < start + size; i++) {\n      keys.push(String.fromCharCode(i));\n    }\n\n    return keys;\n  }\n\n  var upperCaseAlphabet = makeKeyRange(65, 26);\n  var lowerCaseAlphabet = makeKeyRange(97, 26);\n  var numbers = makeKeyRange(48, 10);\n  var validMarks = [].concat(upperCaseAlphabet, lowerCaseAlphabet, numbers, ['<', '>']);\n  var validRegisters = [].concat(upperCaseAlphabet, lowerCaseAlphabet, numbers, ['-', '\"', '.', ':', '/']);\n\n  function isLine(cm, line) {\n    return line >= cm.firstLine() && line <= cm.lastLine();\n  }\n\n  function isLowerCase(k) {\n    return /^[a-z]$/.test(k);\n  }\n\n  function isMatchableSymbol(k) {\n    return '()[]{}'.indexOf(k) != -1;\n  }\n\n  function isNumber(k) {\n    return numberRegex.test(k);\n  }\n\n  function isUpperCase(k) {\n    return /^[A-Z]$/.test(k);\n  }\n\n  function isWhiteSpaceString(k) {\n    return /^\\s*$/.test(k);\n  }\n\n  function isEndOfSentenceSymbol(k) {\n    return '.?!'.indexOf(k) != -1;\n  }\n\n  function inArray(val, arr) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] == val) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  var options = {};\n\n  function defineOption(name, defaultValue, type, aliases, callback) {\n    if (defaultValue === undefined && !callback) {\n      throw Error('defaultValue is required unless callback is provided');\n    }\n\n    if (!type) {\n      type = 'string';\n    }\n\n    options[name] = {\n      type: type,\n      defaultValue: defaultValue,\n      callback: callback\n    };\n\n    if (aliases) {\n      for (var i = 0; i < aliases.length; i++) {\n        options[aliases[i]] = options[name];\n      }\n    }\n\n    if (defaultValue) {\n      setOption(name, defaultValue);\n    }\n  }\n\n  function setOption(name, value, cm, cfg) {\n    var option = options[name];\n    cfg = cfg || {};\n    var scope = cfg.scope;\n\n    if (!option) {\n      return new Error('Unknown option: ' + name);\n    }\n\n    if (option.type == 'boolean') {\n      if (value && value !== true) {\n        return new Error('Invalid argument: ' + name + '=' + value);\n      } else if (value !== false) {\n        // Boolean options are set to true if value is not defined.\n        value = true;\n      }\n    }\n\n    if (option.callback) {\n      if (scope !== 'local') {\n        option.callback(value, undefined);\n      }\n\n      if (scope !== 'global' && cm) {\n        option.callback(value, cm);\n      }\n    } else {\n      if (scope !== 'local') {\n        option.value = option.type == 'boolean' ? !!value : value;\n      }\n\n      if (scope !== 'global' && cm) {\n        cm.state.vim.options[name] = {\n          value: value\n        };\n      }\n    }\n  }\n\n  function getOption(name, cm, cfg) {\n    var option = options[name];\n    cfg = cfg || {};\n    var scope = cfg.scope;\n\n    if (!option) {\n      return new Error('Unknown option: ' + name);\n    }\n\n    if (option.callback) {\n      var local = cm && option.callback(undefined, cm);\n\n      if (scope !== 'global' && local !== undefined) {\n        return local;\n      }\n\n      if (scope !== 'local') {\n        return option.callback();\n      }\n\n      return;\n    } else {\n      var local = scope !== 'global' && cm && cm.state.vim.options[name];\n      return (local || scope !== 'local' && option || {}).value;\n    }\n  }\n\n  defineOption('filetype', undefined, 'string', ['ft'], function (name, cm) {\n    // Option is local. Do nothing for global.\n    if (cm === undefined) {\n      return;\n    } // The 'filetype' option proxies to the CodeMirror 'mode' option.\n\n\n    if (name === undefined) {\n      var mode = cm.getOption('mode');\n      return mode == 'null' ? '' : mode;\n    } else {\n      var mode = name == '' ? 'null' : name;\n      cm.setOption('mode', mode);\n    }\n  });\n\n  var createCircularJumpList = function createCircularJumpList() {\n    var size = 100;\n    var pointer = -1;\n    var head = 0;\n    var tail = 0;\n    var buffer = new Array(size);\n\n    function add(cm, oldCur, newCur) {\n      var current = pointer % size;\n      var curMark = buffer[current];\n\n      function useNextSlot(cursor) {\n        var next = ++pointer % size;\n        var trashMark = buffer[next];\n\n        if (trashMark) {\n          trashMark.clear();\n        }\n\n        buffer[next] = cm.setBookmark(cursor);\n      }\n\n      if (curMark) {\n        var markPos = curMark.find(); // avoid recording redundant cursor position\n\n        if (markPos && !cursorEqual(markPos, oldCur)) {\n          useNextSlot(oldCur);\n        }\n      } else {\n        useNextSlot(oldCur);\n      }\n\n      useNextSlot(newCur);\n      head = pointer;\n      tail = pointer - size + 1;\n\n      if (tail < 0) {\n        tail = 0;\n      }\n    }\n\n    function move(cm, offset) {\n      pointer += offset;\n\n      if (pointer > head) {\n        pointer = head;\n      } else if (pointer < tail) {\n        pointer = tail;\n      }\n\n      var mark = buffer[(size + pointer) % size]; // skip marks that are temporarily removed from text buffer\n\n      if (mark && !mark.find()) {\n        var inc = offset > 0 ? 1 : -1;\n        var newCur;\n        var oldCur = cm.getCursor();\n\n        do {\n          pointer += inc;\n          mark = buffer[(size + pointer) % size]; // skip marks that are the same as current position\n\n          if (mark && (newCur = mark.find()) && !cursorEqual(oldCur, newCur)) {\n            break;\n          }\n        } while (pointer < head && pointer > tail);\n      }\n\n      return mark;\n    }\n\n    return {\n      cachedCursor: undefined,\n      //used for # and * jumps\n      add: add,\n      move: move\n    };\n  }; // Returns an object to track the changes associated insert mode.  It\n  // clones the object that is passed in, or creates an empty object one if\n  // none is provided.\n\n\n  var createInsertModeChanges = function createInsertModeChanges(c) {\n    if (c) {\n      // Copy construction\n      return {\n        changes: c.changes,\n        expectCursorActivityForChange: c.expectCursorActivityForChange\n      };\n    }\n\n    return {\n      // Change list\n      changes: [],\n      // Set to true on change, false on cursorActivity.\n      expectCursorActivityForChange: false\n    };\n  };\n\n  function MacroModeState() {\n    this.latestRegister = undefined;\n    this.isPlaying = false;\n    this.isRecording = false;\n    this.replaySearchQueries = [];\n    this.onRecordingDone = undefined;\n    this.lastInsertModeChanges = createInsertModeChanges();\n  }\n\n  MacroModeState.prototype = {\n    exitMacroRecordMode: function exitMacroRecordMode() {\n      var macroModeState = vimGlobalState.macroModeState;\n\n      if (macroModeState.onRecordingDone) {\n        macroModeState.onRecordingDone(); // close dialog\n      }\n\n      macroModeState.onRecordingDone = undefined;\n      macroModeState.isRecording = false;\n    },\n    enterMacroRecordMode: function enterMacroRecordMode(cm, registerName) {\n      var register = vimGlobalState.registerController.getRegister(registerName);\n\n      if (register) {\n        register.clear();\n        this.latestRegister = registerName;\n\n        if (cm.openDialog) {\n          this.onRecordingDone = cm.openDialog('(recording)[' + registerName + ']', null, {\n            bottom: true\n          });\n        }\n\n        this.isRecording = true;\n      }\n    }\n  };\n\n  function maybeInitVimState(cm) {\n    if (!cm.state.vim) {\n      // Store instance state in the CodeMirror object.\n      cm.state.vim = {\n        inputState: new InputState(),\n        // Vim's input state that triggered the last edit, used to repeat\n        // motions and operators with '.'.\n        lastEditInputState: undefined,\n        // Vim's action command before the last edit, used to repeat actions\n        // with '.' and insert mode repeat.\n        lastEditActionCommand: undefined,\n        // When using jk for navigation, if you move from a longer line to a\n        // shorter line, the cursor may clip to the end of the shorter line.\n        // If j is pressed again and cursor goes to the next line, the\n        // cursor should go back to its horizontal position on the longer\n        // line if it can. This is to keep track of the horizontal position.\n        lastHPos: -1,\n        // Doing the same with screen-position for gj/gk\n        lastHSPos: -1,\n        // The last motion command run. Cleared if a non-motion command gets\n        // executed in between.\n        lastMotion: null,\n        marks: {},\n        // Mark for rendering fake cursor for visual mode.\n        fakeCursor: null,\n        insertMode: false,\n        // Repeat count for changes made in insert mode, triggered by key\n        // sequences like 3,i. Only exists when insertMode is true.\n        insertModeRepeat: undefined,\n        visualMode: false,\n        // If we are in visual line mode. No effect if visualMode is false.\n        visualLine: false,\n        visualBlock: false,\n        lastSelection: null,\n        lastPastedText: null,\n        sel: {},\n        // Buffer-local/window-local values of vim options.\n        options: {}\n      };\n    }\n\n    return cm.state.vim;\n  }\n\n  var vimGlobalState;\n\n  function resetVimGlobalState() {\n    vimGlobalState = {\n      // The current search query.\n      searchQuery: null,\n      // Whether we are searching backwards.\n      searchIsReversed: false,\n      // Replace part of the last substituted pattern\n      lastSubstituteReplacePart: undefined,\n      jumpList: createCircularJumpList(),\n      macroModeState: new MacroModeState(),\n      // Recording latest f, t, F or T motion command.\n      lastCharacterSearch: {\n        increment: 0,\n        forward: true,\n        selectedCharacter: ''\n      },\n      registerController: new RegisterController({}),\n      // search history buffer\n      searchHistoryController: new HistoryController(),\n      // ex Command history buffer\n      exCommandHistoryController: new HistoryController()\n    };\n\n    for (var optionName in options) {\n      var option = options[optionName];\n      option.value = option.defaultValue;\n    }\n  }\n\n  var lastInsertModeKeyTimer;\n  var vimApi = {\n    buildKeyMap: function buildKeyMap() {// TODO: Convert keymap into dictionary format for fast lookup.\n    },\n    // Testing hook, though it might be useful to expose the register\n    // controller anyways.\n    getRegisterController: function getRegisterController() {\n      return vimGlobalState.registerController;\n    },\n    // Testing hook.\n    resetVimGlobalState_: resetVimGlobalState,\n    // Testing hook.\n    getVimGlobalState_: function getVimGlobalState_() {\n      return vimGlobalState;\n    },\n    // Testing hook.\n    maybeInitVimState_: maybeInitVimState,\n    suppressErrorLogging: false,\n    InsertModeKey: InsertModeKey,\n    map: function map(lhs, rhs, ctx) {\n      // Add user defined key bindings.\n      exCommandDispatcher.map(lhs, rhs, ctx);\n    },\n    unmap: function unmap(lhs, ctx) {\n      exCommandDispatcher.unmap(lhs, ctx);\n    },\n    // TODO: Expose setOption and getOption as instance methods. Need to decide how to namespace\n    // them, or somehow make them work with the existing CodeMirror setOption/getOption API.\n    setOption: setOption,\n    getOption: getOption,\n    defineOption: defineOption,\n    defineEx: function defineEx(name, prefix, func) {\n      if (!prefix) {\n        prefix = name;\n      } else if (name.indexOf(prefix) !== 0) {\n        throw new Error('(Vim.defineEx) \"' + prefix + '\" is not a prefix of \"' + name + '\", command not registered');\n      }\n\n      exCommands[name] = func;\n      exCommandDispatcher.commandMap_[prefix] = {\n        name: name,\n        shortName: prefix,\n        type: 'api'\n      };\n    },\n    handleKey: function handleKey(cm, key, origin) {\n      var command = this.findKey(cm, key, origin);\n\n      if (typeof command === 'function') {\n        return command();\n      }\n    },\n\n    /**\n     * This is the outermost function called by CodeMirror, after keys have\n     * been mapped to their Vim equivalents.\n     *\n     * Finds a command based on the key (and cached keys if there is a\n     * multi-key sequence). Returns `undefined` if no key is matched, a noop\n     * function if a partial match is found (multi-key), and a function to\n     * execute the bound command if a a key is matched. The function always\n     * returns true.\n     */\n    findKey: function findKey(cm, key, origin) {\n      var vim = maybeInitVimState(cm);\n\n      function handleMacroRecording() {\n        var macroModeState = vimGlobalState.macroModeState;\n\n        if (macroModeState.isRecording) {\n          if (key == 'q') {\n            macroModeState.exitMacroRecordMode();\n            clearInputState(cm);\n            return true;\n          }\n\n          if (origin != 'mapping') {\n            logKey(macroModeState, key);\n          }\n        }\n      }\n\n      function handleEsc() {\n        if (key == '<Esc>') {\n          // Clear input state and get back to normal mode.\n          clearInputState(cm);\n\n          if (vim.visualMode) {\n            exitVisualMode(cm);\n          } else if (vim.insertMode) {\n            exitInsertMode(cm);\n          }\n\n          return true;\n        }\n      }\n\n      function doKeyToKey(keys) {\n        // TODO: prevent infinite recursion.\n        var match;\n\n        while (keys) {\n          // Pull off one command key, which is either a single character\n          // or a special sequence wrapped in '<' and '>', e.g. '<Space>'.\n          match = /<\\w+-.+?>|<\\w+>|./.exec(keys);\n          key = match[0];\n          keys = keys.substring(match.index + key.length);\n\n          _cm_adapter[\"default\"].Vim.handleKey(cm, key, 'mapping');\n        }\n      }\n\n      function handleKeyInsertMode() {\n        if (handleEsc()) {\n          return true;\n        }\n\n        var keys = vim.inputState.keyBuffer = vim.inputState.keyBuffer + key;\n        var keysAreChars = key.length == 1;\n        var match = commandDispatcher.matchCommand(keys, defaultKeymap, vim.inputState, 'insert'); // Need to check all key substrings in insert mode.\n\n        while (keys.length > 1 && match.type != 'full') {\n          var keys = vim.inputState.keyBuffer = keys.slice(1);\n          var thisMatch = commandDispatcher.matchCommand(keys, defaultKeymap, vim.inputState, 'insert');\n\n          if (thisMatch.type != 'none') {\n            match = thisMatch;\n          }\n        }\n\n        if (match.type == 'none') {\n          clearInputState(cm);\n          return false;\n        } else if (match.type == 'partial') {\n          if (lastInsertModeKeyTimer) {\n            window.clearTimeout(lastInsertModeKeyTimer);\n          }\n\n          lastInsertModeKeyTimer = window.setTimeout(function () {\n            if (vim.insertMode && vim.inputState.keyBuffer) {\n              clearInputState(cm);\n            }\n          }, getOption('insertModeEscKeysTimeout'));\n          return !keysAreChars;\n        }\n\n        if (lastInsertModeKeyTimer) {\n          window.clearTimeout(lastInsertModeKeyTimer);\n        }\n\n        if (keysAreChars) {\n          var selections = cm.listSelections();\n\n          for (var i = 0; i < selections.length; i++) {\n            var here = selections[i].head;\n            cm.replaceRange('', offsetCursor(here, 0, -(keys.length - 1)), here, '+input');\n          }\n\n          vimGlobalState.macroModeState.lastInsertModeChanges.changes.pop();\n        }\n\n        clearInputState(cm);\n        return match.command;\n      }\n\n      function handleKeyNonInsertMode() {\n        if (handleMacroRecording() || handleEsc()) {\n          return true;\n        }\n\n        var keys = vim.inputState.keyBuffer = vim.inputState.keyBuffer + key;\n\n        if (/^[1-9]\\d*$/.test(keys)) {\n          return true;\n        }\n\n        var keysMatcher = /^(\\d*)(.*)$/.exec(keys);\n\n        if (!keysMatcher) {\n          clearInputState(cm);\n          return false;\n        }\n\n        var context = vim.visualMode ? 'visual' : 'normal';\n        var match = commandDispatcher.matchCommand(keysMatcher[2] || keysMatcher[1], defaultKeymap, vim.inputState, context);\n\n        if (match.type == 'none') {\n          clearInputState(cm);\n          return false;\n        } else if (match.type == 'partial') {\n          return true;\n        }\n\n        vim.inputState.keyBuffer = '';\n        var keysMatcher = /^(\\d*)(.*)$/.exec(keys);\n\n        if (keysMatcher[1] && keysMatcher[1] != '0') {\n          vim.inputState.pushRepeatDigit(keysMatcher[1]);\n        }\n\n        return match.command;\n      }\n\n      var command;\n\n      if (vim.insertMode) {\n        command = handleKeyInsertMode();\n      } else {\n        command = handleKeyNonInsertMode();\n      }\n\n      if (command === false) {\n        return !vim.insertMode && key.length === 1 ? function () {\n          return true;\n        } : undefined;\n      } else if (command === true) {\n        // TODO: Look into using CodeMirror's multi-key handling.\n        // Return no-op since we are caching the key. Counts as handled, but\n        // don't want act on it just yet.\n        return function () {\n          return true;\n        };\n      } else {\n        return function () {\n          return cm.operation(function () {\n            cm.curOp.isVimOp = true;\n\n            try {\n              if (command.type == 'keyToKey') {\n                doKeyToKey(command.toKeys);\n              } else {\n                commandDispatcher.processCommand(cm, vim, command);\n              }\n            } catch (e) {\n              // clear VIM state in case it's in a bad state.\n              cm.state.vim = undefined;\n              maybeInitVimState(cm);\n\n              if (!_cm_adapter[\"default\"].Vim.suppressErrorLogging) {\n                console['log'](e);\n              }\n\n              throw e;\n            }\n\n            return true;\n          });\n        };\n      }\n    },\n    handleEx: function handleEx(cm, input) {\n      exCommandDispatcher.processCommand(cm, input);\n    },\n    defineMotion: defineMotion,\n    defineAction: defineAction,\n    defineOperator: defineOperator,\n    mapCommand: mapCommand,\n    _mapCommand: _mapCommand,\n    defineRegister: defineRegister,\n    exitVisualMode: exitVisualMode,\n    exitInsertMode: exitInsertMode\n  }; // Represents the current input state.\n\n  function InputState() {\n    this.prefixRepeat = [];\n    this.motionRepeat = [];\n    this.operator = null;\n    this.operatorArgs = null;\n    this.motion = null;\n    this.motionArgs = null;\n    this.keyBuffer = []; // For matching multi-key commands.\n\n    this.registerName = null; // Defaults to the unnamed register.\n  }\n\n  InputState.prototype.pushRepeatDigit = function (n) {\n    if (!this.operator) {\n      this.prefixRepeat = this.prefixRepeat.concat(n);\n    } else {\n      this.motionRepeat = this.motionRepeat.concat(n);\n    }\n  };\n\n  InputState.prototype.getRepeat = function () {\n    var repeat = 0;\n\n    if (this.prefixRepeat.length > 0 || this.motionRepeat.length > 0) {\n      repeat = 1;\n\n      if (this.prefixRepeat.length > 0) {\n        repeat *= parseInt(this.prefixRepeat.join(''), 10);\n      }\n\n      if (this.motionRepeat.length > 0) {\n        repeat *= parseInt(this.motionRepeat.join(''), 10);\n      }\n    }\n\n    return repeat;\n  };\n\n  function clearInputState(cm, reason) {\n    cm.state.vim.inputState = new InputState();\n\n    _cm_adapter[\"default\"].signal(cm, 'vim-command-done', reason);\n  }\n  /*\n   * Register stores information about copy and paste registers.  Besides\n   * text, a register must store whether it is linewise (i.e., when it is\n   * pasted, should it insert itself into a new line, or should the text be\n   * inserted at the cursor position.)\n   */\n\n\n  function Register(text, linewise, blockwise) {\n    this.clear();\n    this.keyBuffer = [text || ''];\n    this.insertModeChanges = [];\n    this.searchQueries = [];\n    this.linewise = !!linewise;\n    this.blockwise = !!blockwise;\n  }\n\n  Register.prototype = {\n    setText: function setText(text, linewise, blockwise) {\n      this.keyBuffer = [text || ''];\n      this.linewise = !!linewise;\n      this.blockwise = !!blockwise;\n    },\n    pushText: function pushText(text, linewise) {\n      // if this register has ever been set to linewise, use linewise.\n      if (linewise) {\n        if (!this.linewise) {\n          this.keyBuffer.push('\\n');\n        }\n\n        this.linewise = true;\n      }\n\n      this.keyBuffer.push(text);\n    },\n    pushInsertModeChanges: function pushInsertModeChanges(changes) {\n      this.insertModeChanges.push(createInsertModeChanges(changes));\n    },\n    pushSearchQuery: function pushSearchQuery(query) {\n      this.searchQueries.push(query);\n    },\n    clear: function clear() {\n      this.keyBuffer = [];\n      this.insertModeChanges = [];\n      this.searchQueries = [];\n      this.linewise = false;\n    },\n    toString: function toString() {\n      return this.keyBuffer.join('');\n    }\n  };\n  /**\n   * Defines an external register.\n   *\n   * The name should be a single character that will be used to reference the register.\n   * The register should support setText, pushText, clear, and toString(). See Register\n   * for a reference implementation.\n   */\n\n  function defineRegister(name, register) {\n    var registers = vimGlobalState.registerController.registers;\n\n    if (!name || name.length != 1) {\n      throw Error('Register name must be 1 character');\n    }\n\n    if (registers[name]) {\n      throw Error('Register already defined ' + name);\n    }\n\n    registers[name] = register;\n    validRegisters.push(name);\n  }\n  /*\n   * vim registers allow you to keep many independent copy and paste buffers.\n   * See http://usevim.com/2012/04/13/registers/ for an introduction.\n   *\n   * RegisterController keeps the state of all the registers.  An initial\n   * state may be passed in.  The unnamed register '\"' will always be\n   * overridden.\n   */\n\n\n  function RegisterController(registers) {\n    this.registers = registers;\n    this.unnamedRegister = registers['\"'] = new Register();\n    registers['.'] = new Register();\n    registers[':'] = new Register();\n    registers['/'] = new Register();\n  }\n\n  RegisterController.prototype = {\n    pushText: function pushText(registerName, operator, text, linewise, blockwise) {\n      if (linewise && text.charAt(text.length - 1) !== '\\n') {\n        text += '\\n';\n      } // Lowercase and uppercase registers refer to the same register.\n      // Uppercase just means append.\n\n\n      var register = this.isValidRegister(registerName) ? this.getRegister(registerName) : null; // if no register/an invalid register was specified, things go to the\n      // default registers\n\n      if (!register) {\n        switch (operator) {\n          case 'yank':\n            // The 0 register contains the text from the most recent yank.\n            this.registers['0'] = new Register(text, linewise, blockwise);\n            break;\n\n          case 'delete':\n          case 'change':\n            if (text.indexOf('\\n') == -1) {\n              // Delete less than 1 line. Update the small delete register.\n              this.registers['-'] = new Register(text, linewise);\n            } else {\n              // Shift down the contents of the numbered registers and put the\n              // deleted text into register 1.\n              this.shiftNumericRegisters_();\n              this.registers['1'] = new Register(text, linewise);\n            }\n\n            break;\n        } // Make sure the unnamed register is set to what just happened\n\n\n        this.unnamedRegister.setText(text, linewise, blockwise);\n        return;\n      } // If we've gotten to this point, we've actually specified a register\n\n\n      var append = isUpperCase(registerName);\n\n      if (append) {\n        register.pushText(text, linewise);\n      } else {\n        register.setText(text, linewise, blockwise);\n      } // The unnamed register always has the same value as the last used\n      // register.\n\n\n      this.unnamedRegister.setText(register.toString(), linewise);\n    },\n    // Gets the register named @name.  If one of @name doesn't already exist,\n    // create it.  If @name is invalid, return the unnamedRegister.\n    getRegister: function getRegister(name) {\n      if (!this.isValidRegister(name)) {\n        return this.unnamedRegister;\n      }\n\n      name = name.toLowerCase();\n\n      if (!this.registers[name]) {\n        this.registers[name] = new Register();\n      }\n\n      return this.registers[name];\n    },\n    isValidRegister: function isValidRegister(name) {\n      return name && inArray(name, validRegisters);\n    },\n    shiftNumericRegisters_: function shiftNumericRegisters_() {\n      for (var i = 9; i >= 2; i--) {\n        this.registers[i] = this.getRegister('' + (i - 1));\n      }\n    }\n  };\n\n  function HistoryController() {\n    this.historyBuffer = [];\n    this.iterator = 0;\n    this.initialPrefix = null;\n  }\n\n  HistoryController.prototype = {\n    // the input argument here acts a user entered prefix for a small time\n    // until we start autocompletion in which case it is the autocompleted.\n    nextMatch: function nextMatch(input, up) {\n      var historyBuffer = this.historyBuffer;\n      var dir = up ? -1 : 1;\n      if (this.initialPrefix === null) this.initialPrefix = input;\n\n      for (var i = this.iterator + dir; up ? i >= 0 : i < historyBuffer.length; i += dir) {\n        var element = historyBuffer[i];\n\n        for (var j = 0; j <= element.length; j++) {\n          if (this.initialPrefix == element.substring(0, j)) {\n            this.iterator = i;\n            return element;\n          }\n        }\n      } // should return the user input in case we reach the end of buffer.\n\n\n      if (i >= historyBuffer.length) {\n        this.iterator = historyBuffer.length;\n        return this.initialPrefix;\n      } // return the last autocompleted query or exCommand as it is.\n\n\n      if (i < 0) return input;\n    },\n    pushInput: function pushInput(input) {\n      var index = this.historyBuffer.indexOf(input);\n      if (index > -1) this.historyBuffer.splice(index, 1);\n      if (input.length) this.historyBuffer.push(input);\n    },\n    reset: function reset() {\n      this.initialPrefix = null;\n      this.iterator = this.historyBuffer.length;\n    }\n  };\n  var commandDispatcher = {\n    matchCommand: function matchCommand(keys, keyMap, inputState, context) {\n      var matches = commandMatches(keys, keyMap, context, inputState);\n\n      if (!matches.full && !matches.partial) {\n        return {\n          type: 'none'\n        };\n      } else if (!matches.full && matches.partial) {\n        return {\n          type: 'partial'\n        };\n      }\n\n      var bestMatch;\n\n      for (var i = 0; i < matches.full.length; i++) {\n        var match = matches.full[i];\n\n        if (!bestMatch) {\n          bestMatch = match;\n        }\n      }\n\n      if (bestMatch.keys.slice(-11) == '<character>') {\n        var character = lastChar(keys);\n        if (!character) return {\n          type: 'none'\n        };\n        inputState.selectedCharacter = character;\n      }\n\n      return {\n        type: 'full',\n        command: bestMatch\n      };\n    },\n    processCommand: function processCommand(cm, vim, command) {\n      vim.inputState.repeatOverride = command.repeatOverride;\n\n      switch (command.type) {\n        case 'motion':\n          this.processMotion(cm, vim, command);\n          break;\n\n        case 'operator':\n          this.processOperator(cm, vim, command); // cm.pushUndoStop();\n\n          break;\n\n        case 'operatorMotion':\n          this.processOperatorMotion(cm, vim, command); // cm.pushUndoStop();\n\n          break;\n\n        case 'action':\n          this.processAction(cm, vim, command);\n          break;\n\n        case 'search':\n          this.processSearch(cm, vim, command);\n          break;\n\n        case 'ex':\n        case 'keyToEx':\n          this.processEx(cm, vim, command);\n          break;\n\n        default:\n          break;\n      }\n    },\n    processMotion: function processMotion(cm, vim, command) {\n      vim.inputState.motion = command.motion;\n      vim.inputState.motionArgs = copyArgs(command.motionArgs);\n      this.evalInput(cm, vim);\n    },\n    processOperator: function processOperator(cm, vim, command) {\n      var inputState = vim.inputState;\n\n      if (inputState.operator) {\n        if (inputState.operator == command.operator) {\n          // Typing an operator twice like 'dd' makes the operator operate\n          // linewise\n          inputState.motion = 'expandToLine';\n          inputState.motionArgs = {\n            linewise: true\n          };\n          this.evalInput(cm, vim);\n          return;\n        } else {\n          // 2 different operators in a row doesn't make sense.\n          clearInputState(cm);\n        }\n      }\n\n      inputState.operator = command.operator;\n      inputState.operatorArgs = copyArgs(command.operatorArgs);\n\n      if (vim.visualMode) {\n        // Operating on a selection in visual mode. We don't need a motion.\n        this.evalInput(cm, vim);\n      }\n    },\n    processOperatorMotion: function processOperatorMotion(cm, vim, command) {\n      var visualMode = vim.visualMode;\n      var operatorMotionArgs = copyArgs(command.operatorMotionArgs);\n\n      if (operatorMotionArgs) {\n        // Operator motions may have special behavior in visual mode.\n        if (visualMode && operatorMotionArgs.visualLine) {\n          vim.visualLine = true;\n        }\n      }\n\n      this.processOperator(cm, vim, command);\n\n      if (!visualMode) {\n        this.processMotion(cm, vim, command);\n      }\n    },\n    processAction: function processAction(cm, vim, command) {\n      var inputState = vim.inputState;\n      var repeat = inputState.getRepeat();\n      var repeatIsExplicit = !!repeat;\n      var actionArgs = copyArgs(command.actionArgs) || {};\n\n      if (inputState.selectedCharacter) {\n        actionArgs.selectedCharacter = inputState.selectedCharacter;\n      } // Actions may or may not have motions and operators. Do these first.\n\n\n      if (command.operator) {\n        this.processOperator(cm, vim, command);\n      }\n\n      if (command.motion) {\n        this.processMotion(cm, vim, command);\n      }\n\n      if (command.motion || command.operator) {\n        this.evalInput(cm, vim);\n      }\n\n      actionArgs.repeat = repeat || 1;\n      actionArgs.repeatIsExplicit = repeatIsExplicit;\n      actionArgs.registerName = inputState.registerName;\n      clearInputState(cm);\n      vim.lastMotion = null;\n\n      if (command.isEdit) {\n        this.recordLastEdit(vim, inputState, command);\n      }\n\n      actions[command.action](cm, actionArgs, vim);\n    },\n    processSearch: function processSearch(cm, vim, command) {\n      if (!cm.getSearchCursor) {\n        // Search depends on SearchCursor.\n        return;\n      }\n\n      var forward = command.searchArgs.forward;\n      var wholeWordOnly = command.searchArgs.wholeWordOnly;\n      getSearchState(cm).setReversed(!forward);\n      var promptPrefix = forward ? '/' : '?';\n      var originalQuery = getSearchState(cm).getQuery();\n      var originalScrollPos = cm.getScrollInfo();\n\n      function handleQuery(query, ignoreCase, smartCase) {\n        vimGlobalState.searchHistoryController.pushInput(query);\n        vimGlobalState.searchHistoryController.reset();\n\n        try {\n          updateSearchQuery(cm, query, ignoreCase, smartCase);\n        } catch (e) {\n          showConfirm(cm, 'Invalid regex: ' + query);\n          clearInputState(cm);\n          return;\n        }\n\n        commandDispatcher.processMotion(cm, vim, {\n          type: 'motion',\n          motion: 'findNext',\n          motionArgs: {\n            forward: true,\n            toJumplist: command.searchArgs.toJumplist\n          }\n        });\n      }\n\n      function onPromptClose(query) {\n        cm.scrollTo(originalScrollPos.left, originalScrollPos.top);\n        handleQuery(query, true\n        /** ignoreCase */\n        , true\n        /** smartCase */\n        );\n        var macroModeState = vimGlobalState.macroModeState;\n\n        if (macroModeState.isRecording) {\n          logSearchQuery(macroModeState, query);\n        }\n      }\n\n      function onPromptKeyUp(e, query, close) {\n        var keyName = _cm_adapter[\"default\"].keyName(e),\n            up,\n            offset;\n\n        if (keyName == 'Up' || keyName == 'Down') {\n          up = keyName == 'Up' ? true : false;\n          offset = e.target ? e.target.selectionEnd : 0;\n          query = vimGlobalState.searchHistoryController.nextMatch(query, up) || '';\n          close(query);\n          if (offset && e.target) e.target.selectionEnd = e.target.selectionStart = Math.min(offset, e.target.value.length);\n        } else {\n          if (keyName != 'Left' && keyName != 'Right' && keyName != 'Ctrl' && keyName != 'Alt' && keyName != 'Shift') vimGlobalState.searchHistoryController.reset();\n        }\n\n        var parsedQuery;\n\n        try {\n          parsedQuery = updateSearchQuery(cm, query, true\n          /** ignoreCase */\n          , true\n          /** smartCase */\n          );\n        } catch (e) {// Swallow bad regexes for incremental search.\n        }\n\n        if (parsedQuery) {\n          cm.scrollIntoView(_findNext(cm, !forward, parsedQuery), 30);\n        } else {\n          clearSearchHighlight(cm);\n          cm.scrollTo(originalScrollPos.left, originalScrollPos.top);\n        }\n      }\n\n      function onPromptKeyDown(e, query, close) {\n        var keyName = _cm_adapter[\"default\"].keyName(e);\n\n        if (keyName == 'Esc' || keyName == 'Ctrl-C' || keyName == 'Ctrl-[' || keyName == 'Backspace' && query == '') {\n          vimGlobalState.searchHistoryController.pushInput(query);\n          vimGlobalState.searchHistoryController.reset();\n          updateSearchQuery(cm, originalQuery);\n          clearSearchHighlight(cm);\n          cm.scrollTo(originalScrollPos.left, originalScrollPos.top);\n\n          _cm_adapter[\"default\"].e_stop(e);\n\n          clearInputState(cm);\n          close();\n          cm.focus();\n        } else if (keyName == 'Up' || keyName == 'Down') {\n          _cm_adapter[\"default\"].e_stop(e);\n        } else if (keyName == 'Ctrl-U') {\n          // Ctrl-U clears input.\n          _cm_adapter[\"default\"].e_stop(e);\n\n          close('');\n        }\n      }\n\n      switch (command.searchArgs.querySrc) {\n        case 'prompt':\n          var macroModeState = vimGlobalState.macroModeState;\n\n          if (macroModeState.isPlaying) {\n            var query = macroModeState.replaySearchQueries.shift();\n            handleQuery(query, true\n            /** ignoreCase */\n            , false\n            /** smartCase */\n            );\n          } else {\n            showPrompt(cm, {\n              onClose: onPromptClose,\n              prefix: promptPrefix,\n              desc: searchPromptDesc,\n              onKeyUp: onPromptKeyUp,\n              onKeyDown: onPromptKeyDown\n            });\n          }\n\n          break;\n\n        case 'wordUnderCursor':\n          var word = expandWordUnderCursor(cm, false\n          /** inclusive */\n          , true\n          /** forward */\n          , false\n          /** bigWord */\n          , true\n          /** noSymbol */\n          );\n          var isKeyword = true;\n\n          if (!word) {\n            word = expandWordUnderCursor(cm, false\n            /** inclusive */\n            , true\n            /** forward */\n            , false\n            /** bigWord */\n            , false\n            /** noSymbol */\n            );\n            isKeyword = false;\n          }\n\n          if (!word) {\n            return;\n          }\n\n          var query = cm.getLine(word.start.line).substring(word.start.ch, word.end.ch);\n\n          if (isKeyword && wholeWordOnly) {\n            query = '\\\\b' + query + '\\\\b';\n          } else {\n            query = escapeRegex(query);\n          } // cachedCursor is used to save the old position of the cursor\n          // when * or # causes vim to seek for the nearest word and shift\n          // the cursor before entering the motion.\n\n\n          vimGlobalState.jumpList.cachedCursor = cm.getCursor();\n          cm.setCursor(word.start);\n          handleQuery(query, true\n          /** ignoreCase */\n          , false\n          /** smartCase */\n          );\n          break;\n      }\n    },\n    processEx: function processEx(cm, vim, command) {\n      function onPromptClose(input) {\n        // Give the prompt some time to close so that if processCommand shows\n        // an error, the elements don't overlap.\n        vimGlobalState.exCommandHistoryController.pushInput(input);\n        vimGlobalState.exCommandHistoryController.reset();\n        exCommandDispatcher.processCommand(cm, input);\n      }\n\n      function onPromptKeyDown(e, input, close) {\n        var keyName = _cm_adapter[\"default\"].keyName(e),\n            up,\n            offset;\n\n        if (keyName == 'Esc' || keyName == 'Ctrl-C' || keyName == 'Ctrl-[' || keyName == 'Backspace' && input == '') {\n          vimGlobalState.exCommandHistoryController.pushInput(input);\n          vimGlobalState.exCommandHistoryController.reset();\n\n          _cm_adapter[\"default\"].e_stop(e);\n\n          clearInputState(cm);\n          close();\n          cm.focus();\n        }\n\n        if (keyName == 'Up' || keyName == 'Down') {\n          _cm_adapter[\"default\"].e_stop(e);\n\n          up = keyName == 'Up' ? true : false;\n          offset = e.target ? e.target.selectionEnd : 0;\n          input = vimGlobalState.exCommandHistoryController.nextMatch(input, up) || '';\n          close(input);\n          if (offset && e.target) e.target.selectionEnd = e.target.selectionStart = Math.min(offset, e.target.value.length);\n        } else if (keyName == 'Ctrl-U') {\n          // Ctrl-U clears input.\n          _cm_adapter[\"default\"].e_stop(e);\n\n          close('');\n        } else {\n          if (keyName != 'Left' && keyName != 'Right' && keyName != 'Ctrl' && keyName != 'Alt' && keyName != 'Shift') vimGlobalState.exCommandHistoryController.reset();\n        }\n      }\n\n      if (command.type == 'keyToEx') {\n        // Handle user defined Ex to Ex mappings\n        exCommandDispatcher.processCommand(cm, command.exArgs.input);\n      } else {\n        if (vim.visualMode) {\n          showPrompt(cm, {\n            onClose: onPromptClose,\n            prefix: ':',\n            value: '\\'<,\\'>',\n            onKeyDown: onPromptKeyDown,\n            selectValueOnOpen: false\n          });\n        } else {\n          showPrompt(cm, {\n            onClose: onPromptClose,\n            prefix: ':',\n            onKeyDown: onPromptKeyDown\n          });\n        }\n      }\n    },\n    evalInput: function evalInput(cm, vim) {\n      // If the motion command is set, execute both the operator and motion.\n      // Otherwise return.\n      var inputState = vim.inputState;\n      var motion = inputState.motion;\n      var motionArgs = inputState.motionArgs || {};\n      var operator = inputState.operator;\n      var operatorArgs = inputState.operatorArgs || {};\n      var registerName = inputState.registerName;\n      var sel = vim.sel; // TODO: Make sure cm and vim selections are identical outside visual mode.\n\n      var origHead = copyCursor(vim.visualMode ? clipCursorToContent(cm, sel.head) : cm.getCursor('head'));\n      var origAnchor = copyCursor(vim.visualMode ? clipCursorToContent(cm, sel.anchor) : cm.getCursor('anchor'));\n      var oldHead = copyCursor(origHead);\n      var oldAnchor = copyCursor(origAnchor);\n      var newHead, newAnchor;\n      var repeat;\n\n      if (operator) {\n        this.recordLastEdit(vim, inputState);\n      }\n\n      if (inputState.repeatOverride !== undefined) {\n        // If repeatOverride is specified, that takes precedence over the\n        // input state's repeat. Used by Ex mode and can be user defined.\n        repeat = inputState.repeatOverride;\n      } else {\n        repeat = inputState.getRepeat();\n      }\n\n      if (repeat > 0 && motionArgs.explicitRepeat) {\n        motionArgs.repeatIsExplicit = true;\n      } else if (motionArgs.noRepeat || !motionArgs.explicitRepeat && repeat === 0) {\n        repeat = 1;\n        motionArgs.repeatIsExplicit = false;\n      }\n\n      if (inputState.selectedCharacter) {\n        // If there is a character input, stick it in all of the arg arrays.\n        motionArgs.selectedCharacter = operatorArgs.selectedCharacter = inputState.selectedCharacter;\n      }\n\n      motionArgs.repeat = repeat;\n      clearInputState(cm);\n\n      if (motion) {\n        var motionResult = motions[motion](cm, origHead, motionArgs, vim);\n        vim.lastMotion = motions[motion];\n\n        if (!motionResult) {\n          return;\n        }\n\n        if (motionArgs.toJumplist) {\n          var jumpList = vimGlobalState.jumpList; // if the current motion is # or *, use cachedCursor\n\n          var cachedCursor = jumpList.cachedCursor;\n\n          if (cachedCursor) {\n            recordJumpPosition(cm, cachedCursor, motionResult);\n            delete jumpList.cachedCursor;\n          } else {\n            recordJumpPosition(cm, origHead, motionResult);\n          }\n        }\n\n        if (motionResult instanceof Array) {\n          newAnchor = motionResult[0];\n          newHead = motionResult[1];\n        } else {\n          newHead = motionResult;\n        } // TODO: Handle null returns from motion commands better.\n\n\n        if (!newHead) {\n          newHead = copyCursor(origHead);\n        }\n\n        if (vim.visualMode) {\n          if (!(vim.visualBlock && newHead.ch === Infinity)) {\n            newHead = clipCursorToContent(cm, newHead, vim.visualBlock);\n          }\n\n          if (newAnchor) {\n            newAnchor = clipCursorToContent(cm, newAnchor, true);\n          }\n\n          newAnchor = newAnchor || oldAnchor;\n          sel.anchor = newAnchor;\n          sel.head = newHead;\n          updateCmSelection(cm);\n          updateMark(cm, vim, '<', cursorIsBefore(newAnchor, newHead) ? newAnchor : newHead);\n          updateMark(cm, vim, '>', cursorIsBefore(newAnchor, newHead) ? newHead : newAnchor);\n        } else if (!operator) {\n          newHead = clipCursorToContent(cm, newHead);\n          cm.setCursor(newHead.line, newHead.ch);\n        }\n      }\n\n      if (operator) {\n        if (operatorArgs.lastSel) {\n          // Replaying a visual mode operation\n          newAnchor = oldAnchor;\n          var lastSel = operatorArgs.lastSel;\n          var lineOffset = Math.abs(lastSel.head.line - lastSel.anchor.line);\n          var chOffset = Math.abs(lastSel.head.ch - lastSel.anchor.ch);\n\n          if (lastSel.visualLine) {\n            // Linewise Visual mode: The same number of lines.\n            newHead = Pos(oldAnchor.line + lineOffset, oldAnchor.ch);\n          } else if (lastSel.visualBlock) {\n            // Blockwise Visual mode: The same number of lines and columns.\n            newHead = Pos(oldAnchor.line + lineOffset, oldAnchor.ch + chOffset);\n          } else if (lastSel.head.line == lastSel.anchor.line) {\n            // Normal Visual mode within one line: The same number of characters.\n            newHead = Pos(oldAnchor.line, oldAnchor.ch + chOffset);\n          } else {\n            // Normal Visual mode with several lines: The same number of lines, in the\n            // last line the same number of characters as in the last line the last time.\n            newHead = Pos(oldAnchor.line + lineOffset, oldAnchor.ch);\n          }\n\n          vim.visualMode = true;\n          vim.visualLine = lastSel.visualLine;\n          vim.visualBlock = lastSel.visualBlock;\n          sel = vim.sel = {\n            anchor: newAnchor,\n            head: newHead\n          };\n          updateCmSelection(cm);\n        } else if (vim.visualMode) {\n          operatorArgs.lastSel = {\n            anchor: copyCursor(sel.anchor),\n            head: copyCursor(sel.head),\n            visualBlock: vim.visualBlock,\n            visualLine: vim.visualLine\n          };\n        }\n\n        var curStart, curEnd, linewise, mode;\n        var cmSel;\n\n        if (vim.visualMode) {\n          // Init visual op\n          curStart = cursorMin(sel.head, sel.anchor);\n          curEnd = cursorMax(sel.head, sel.anchor);\n          linewise = vim.visualLine || operatorArgs.linewise;\n          mode = vim.visualBlock ? 'block' : linewise ? 'line' : 'char';\n          cmSel = makeCmSelection(cm, {\n            anchor: curStart,\n            head: curEnd\n          }, mode);\n\n          if (linewise) {\n            var ranges = cmSel.ranges;\n\n            if (mode == 'block') {\n              // Linewise operators in visual block mode extend to end of line\n              for (var i = 0; i < ranges.length; i++) {\n                ranges[i].head.ch = lineLength(cm, ranges[i].head.line);\n              }\n            } else if (mode == 'line') {\n              ranges[0].head = Pos(ranges[0].head.line + 1, 0);\n            }\n          }\n        } else {\n          // Init motion op\n          curStart = copyCursor(newAnchor || oldAnchor);\n          curEnd = copyCursor(newHead || oldHead);\n\n          if (cursorIsBefore(curEnd, curStart)) {\n            var tmp = curStart;\n            curStart = curEnd;\n            curEnd = tmp;\n          }\n\n          linewise = motionArgs.linewise || operatorArgs.linewise;\n\n          if (linewise) {\n            // Expand selection to entire line.\n            expandSelectionToLine(cm, curStart, curEnd);\n          } else if (motionArgs.forward) {\n            // Clip to trailing newlines only if the motion goes forward.\n            clipToLine(cm, curStart, curEnd);\n          }\n\n          mode = 'char';\n          var exclusive = !motionArgs.inclusive || linewise;\n          cmSel = makeCmSelection(cm, {\n            anchor: curStart,\n            head: curEnd\n          }, mode, exclusive);\n        }\n\n        cm.setSelections(cmSel.ranges, cmSel.primary);\n        vim.lastMotion = null;\n        operatorArgs.repeat = repeat; // For indent in visual mode.\n\n        operatorArgs.registerName = registerName; // Keep track of linewise as it affects how paste and change behave.\n\n        operatorArgs.linewise = linewise;\n        var operatorMoveTo = operators[operator](cm, operatorArgs, cmSel.ranges, oldAnchor, newHead);\n\n        if (vim.visualMode) {\n          exitVisualMode(cm, operatorMoveTo != null);\n        }\n\n        if (operatorMoveTo) {\n          cm.setCursor(operatorMoveTo);\n        }\n      }\n    },\n    recordLastEdit: function recordLastEdit(vim, inputState, actionCommand) {\n      var macroModeState = vimGlobalState.macroModeState;\n\n      if (macroModeState.isPlaying) {\n        return;\n      }\n\n      vim.lastEditInputState = inputState;\n      vim.lastEditActionCommand = actionCommand;\n      macroModeState.lastInsertModeChanges.changes = [];\n      macroModeState.lastInsertModeChanges.expectCursorActivityForChange = false;\n    }\n  };\n  /**\n   * typedef {Object{line:number,ch:number}} Cursor An object containing the\n   *     position of the cursor.\n   */\n  // All of the functions below return Cursor objects.\n\n  var motions = {\n    moveToTopLine: function moveToTopLine(cm, _head, motionArgs) {\n      var line = getUserVisibleLines(cm).top + motionArgs.repeat - 1;\n      return Pos(line, cm.findFirstNonWhiteSpaceCharacter(line));\n    },\n    moveToMiddleLine: function moveToMiddleLine(cm) {\n      var range = getUserVisibleLines(cm);\n      var line = Math.floor((range.top + range.bottom) * 0.5);\n      return Pos(line, cm.findFirstNonWhiteSpaceCharacter(line));\n    },\n    moveToBottomLine: function moveToBottomLine(cm, _head, motionArgs) {\n      var line = getUserVisibleLines(cm).bottom - motionArgs.repeat + 1;\n      return Pos(line, cm.findFirstNonWhiteSpaceCharacter(line));\n    },\n    expandToLine: function expandToLine(_cm, head, motionArgs) {\n      // Expands forward to end of line, and then to next line if repeat is\n      // >1. Does not handle backward motion!\n      var cur = head;\n      return Pos(cur.line + motionArgs.repeat - 1, Infinity);\n    },\n    findNext: function findNext(cm, _head, motionArgs) {\n      var state = getSearchState(cm);\n      var query = state.getQuery();\n\n      if (!query) {\n        return;\n      }\n\n      var prev = !motionArgs.forward; // If search is initiated with ? instead of /, negate direction.\n\n      prev = state.isReversed() ? !prev : prev;\n      highlightSearchMatches(cm, query);\n      return _findNext(cm, prev\n      /** prev */\n      , query, motionArgs.repeat);\n    },\n    goToMark: function goToMark(cm, _head, motionArgs, vim) {\n      var pos = getMarkPos(cm, vim, motionArgs.selectedCharacter);\n\n      if (pos) {\n        return motionArgs.linewise ? {\n          line: pos.line,\n          ch: cm.findFirstNonWhiteSpaceCharacter(pos.line)\n        } : pos;\n      }\n\n      return null;\n    },\n    moveToOtherHighlightedEnd: function moveToOtherHighlightedEnd(cm, _head, motionArgs, vim) {\n      if (vim.visualBlock && motionArgs.sameLine) {\n        var sel = vim.sel;\n        return [clipCursorToContent(cm, Pos(sel.anchor.line, sel.head.ch)), clipCursorToContent(cm, Pos(sel.head.line, sel.anchor.ch))];\n      } else {\n        return [vim.sel.head, vim.sel.anchor];\n      }\n    },\n    jumpToMark: function jumpToMark(cm, head, motionArgs, vim) {\n      var best = head;\n\n      for (var i = 0; i < motionArgs.repeat; i++) {\n        var cursor = best;\n\n        for (var key in vim.marks) {\n          if (!isLowerCase(key)) {\n            continue;\n          }\n\n          var mark = vim.marks[key].find();\n          var isWrongDirection = motionArgs.forward ? cursorIsBefore(mark, cursor) : cursorIsBefore(cursor, mark);\n\n          if (isWrongDirection) {\n            continue;\n          }\n\n          if (motionArgs.linewise && mark.line == cursor.line) {\n            continue;\n          }\n\n          var equal = cursorEqual(cursor, best);\n          var between = motionArgs.forward ? cursorIsBetween(cursor, mark, best) : cursorIsBetween(best, mark, cursor);\n\n          if (equal || between) {\n            best = mark;\n          }\n        }\n      }\n\n      if (motionArgs.linewise) {\n        // Vim places the cursor on the first non-whitespace character of\n        // the line if there is one, else it places the cursor at the end\n        // of the line, regardless of whether a mark was found.\n        best = Pos(best.line, cm.findFirstNonWhiteSpaceCharacter(best.line));\n      }\n\n      return best;\n    },\n    moveByCharacters: function moveByCharacters(_cm, head, motionArgs) {\n      var cur = head;\n      var repeat = motionArgs.repeat;\n      var ch = motionArgs.forward ? cur.ch + repeat : cur.ch - repeat;\n      return Pos(cur.line, ch);\n    },\n    moveByLines: function moveByLines(cm, head, motionArgs, vim) {\n      var cur = head;\n      var endCh = cur.ch; // Depending what our last motion was, we may want to do different\n      // things. If our last motion was moving vertically, we want to\n      // preserve the HPos from our last horizontal move.  If our last motion\n      // was going to the end of a line, moving vertically we should go to\n      // the end of the line, etc.\n\n      switch (vim.lastMotion) {\n        case this.moveByLines:\n        case this.moveByDisplayLines:\n        case this.moveByScroll:\n        case this.moveToColumn:\n        case this.moveToEol:\n          endCh = vim.lastHPos;\n          break;\n\n        default:\n          vim.lastHPos = endCh;\n      }\n\n      var repeat = motionArgs.repeat + (motionArgs.repeatOffset || 0);\n      var line = motionArgs.forward ? cur.line + repeat : cur.line - repeat;\n      var first = cm.firstLine();\n      var last = cm.lastLine(); // Vim go to line begin or line end when cursor at first/last line and\n      // move to previous/next line is triggered.\n\n      if (line < first && cur.line == first) {\n        return this.moveToStartOfLine(cm, head, motionArgs, vim);\n      } else if (line > last && cur.line == last) {\n        return this.moveToEol(cm, head, motionArgs, vim);\n      }\n\n      if (motionArgs.toFirstChar) {\n        endCh = cm.findFirstNonWhiteSpaceCharacter(line);\n        vim.lastHPos = endCh;\n      }\n\n      vim.lastHSPos = cm.charCoords(Pos(line, endCh), 'div').left;\n      return Pos(line, endCh);\n    },\n    moveByDisplayLines: function moveByDisplayLines(cm, head, motionArgs, vim) {\n      var cur = head;\n\n      switch (vim.lastMotion) {\n        case this.moveByDisplayLines:\n        case this.moveByScroll:\n        case this.moveByLines:\n        case this.moveToColumn:\n        case this.moveToEol:\n          break;\n\n        default:\n          vim.lastHSPos = cm.charCoords(cur, 'div').left;\n      }\n\n      var repeat = motionArgs.repeat;\n      var res = cm.findPosV(cur, motionArgs.forward ? repeat : -repeat, 'line', vim.lastHSPos);\n\n      if (res.hitSide) {\n        if (motionArgs.forward) {\n          var lastCharCoords = cm.charCoords(res, 'div');\n          var goalCoords = {\n            top: lastCharCoords.top + 8,\n            left: vim.lastHSPos\n          };\n          var res = cm.coordsChar(goalCoords, 'div');\n        } else {\n          var resCoords = cm.charCoords(Pos(cm.firstLine(), 0), 'div');\n          resCoords.left = vim.lastHSPos;\n          res = cm.coordsChar(resCoords, 'div');\n        }\n      }\n\n      vim.lastHPos = res.ch;\n      return res;\n    },\n    moveByPage: function moveByPage(cm, head, motionArgs) {\n      // CodeMirror only exposes functions that move the cursor page down, so\n      // doing this bad hack to move the cursor and move it back. evalInput\n      // will move the cursor to where it should be in the end.\n      var curStart = head;\n      var repeat = motionArgs.repeat;\n      return cm.findPosV(curStart, motionArgs.forward ? repeat : -repeat, 'page');\n    },\n    moveByParagraph: function moveByParagraph(cm, head, motionArgs) {\n      var dir = motionArgs.forward ? 1 : -1;\n      return findParagraph(cm, head, motionArgs.repeat, dir);\n    },\n    moveBySentence: function moveBySentence(cm, head, motionArgs) {\n      var dir = motionArgs.forward ? 1 : -1;\n      return findSentence(cm, head, motionArgs.repeat, dir);\n    },\n    moveByScroll: function moveByScroll(cm, head, motionArgs, vim) {\n      var scrollbox = cm.getScrollInfo();\n      var curEnd = null;\n      var repeat = motionArgs.repeat;\n\n      if (!repeat) {\n        repeat = Math.floor(scrollbox.clientHeight / (2 * cm.defaultTextHeight()));\n      }\n\n      var orig = cm.charCoords(head, 'local');\n      motionArgs.repeat = repeat;\n      var curEnd = motions.moveByDisplayLines(cm, head, motionArgs, vim);\n\n      if (!curEnd) {\n        return null;\n      }\n\n      var dest = cm.charCoords(curEnd, 'local');\n      cm.scrollTo(null, scrollbox.top + dest.top - orig.top);\n      return curEnd;\n    },\n    moveByWords: function moveByWords(cm, head, motionArgs) {\n      return moveToWord(cm, head, motionArgs.repeat, !!motionArgs.forward, !!motionArgs.wordEnd, !!motionArgs.bigWord);\n    },\n    moveTillCharacter: function moveTillCharacter(cm, _head, motionArgs) {\n      var repeat = motionArgs.repeat;\n\n      var curEnd = _moveToCharacter(cm, repeat, motionArgs.forward, motionArgs.selectedCharacter);\n\n      var increment = motionArgs.forward ? -1 : 1;\n      recordLastCharacterSearch(increment, motionArgs);\n      if (!curEnd) return null;\n      curEnd.ch += increment;\n      return curEnd;\n    },\n    moveToCharacter: function moveToCharacter(cm, head, motionArgs) {\n      var repeat = motionArgs.repeat;\n      recordLastCharacterSearch(0, motionArgs);\n      return _moveToCharacter(cm, repeat, motionArgs.forward, motionArgs.selectedCharacter) || head;\n    },\n    moveToSymbol: function moveToSymbol(cm, head, motionArgs) {\n      var repeat = motionArgs.repeat;\n      return findSymbol(cm, repeat, motionArgs.forward, motionArgs.selectedCharacter) || head;\n    },\n    moveToColumn: function moveToColumn(cm, head, motionArgs, vim) {\n      var repeat = motionArgs.repeat; // repeat is equivalent to which column we want to move to!\n\n      vim.lastHPos = repeat - 1;\n      vim.lastHSPos = cm.charCoords(head, 'div').left;\n      return _moveToColumn(cm, repeat);\n    },\n    moveToEol: function moveToEol(cm, head, motionArgs, vim) {\n      var cur = head;\n      vim.lastHPos = Infinity;\n      var retval = Pos(cur.line + motionArgs.repeat - 1, Infinity);\n      var end = cm.clipPos(retval);\n      end.ch--;\n      vim.lastHSPos = cm.charCoords(end, 'div').left;\n      return retval;\n    },\n    moveToFirstNonWhiteSpaceCharacter: function moveToFirstNonWhiteSpaceCharacter(cm, head) {\n      // Go to the start of the line where the text begins, or the end for\n      // whitespace-only lines\n      var cursor = head;\n      return Pos(cursor.line, cm.findFirstNonWhiteSpaceCharacter(cursor.line));\n    },\n    moveToMatchedSymbol: function moveToMatchedSymbol(cm, head) {\n      var cursor = head;\n      var line = cursor.line;\n      var ch = cursor.ch;\n      var lineText = cm.getLine(line); // var symbol;\n      // for (; ch < lineText.length; ch++) {\n      //   symbol = lineText.charAt(ch);\n      //   if (symbol && isMatchableSymbol(symbol)) {\n      //     var style = cm.getTokenTypeAt(Pos(line, ch + 1));\n      //     if (style !== \"string\" && style !== \"comment\") {\n      //       break;\n      //     }\n      //   }\n      // }\n\n      if (ch < lineText.length) {\n        var matched = cm.findMatchingBracket(Pos(line, ch));\n        return matched.to;\n      } else {\n        return cursor;\n      }\n    },\n    moveToStartOfLine: function moveToStartOfLine(_cm, head) {\n      return Pos(head.line, 0);\n    },\n    moveToLineOrEdgeOfDocument: function moveToLineOrEdgeOfDocument(cm, _head, motionArgs) {\n      var lineNum = motionArgs.forward ? cm.lastLine() : cm.firstLine();\n\n      if (motionArgs.repeatIsExplicit) {\n        lineNum = motionArgs.repeat - cm.getOption('firstLineNumber');\n      }\n\n      return Pos(lineNum, cm.findFirstNonWhiteSpaceCharacter(lineNum));\n    },\n    textObjectManipulation: function textObjectManipulation(cm, head, motionArgs, vim) {\n      // TODO: lots of possible exceptions that can be thrown here. Try da(\n      //     outside of a () block.\n      // TODO: adding <> >< to this map doesn't work, presumably because\n      // they're operators\n      var mirroredPairs = {\n        '(': ')',\n        ')': '(',\n        '{': '}',\n        '}': '{',\n        '[': ']',\n        ']': '['\n      };\n      var selfPaired = {\n        '\\'': true,\n        '\"': true\n      };\n      var character = motionArgs.selectedCharacter; // 'b' refers to  '()' block.\n      // 'B' refers to  '{}' block.\n\n      if (character == 'b') {\n        character = '(';\n      } else if (character == 'B') {\n        character = '{';\n      } // Inclusive is the difference between a and i\n      // TODO: Instead of using the additional text object map to perform text\n      //     object operations, merge the map into the defaultKeyMap and use\n      //     motionArgs to define behavior. Define separate entries for 'aw',\n      //     'iw', 'a[', 'i[', etc.\n\n\n      var inclusive = !motionArgs.textObjectInner;\n      var tmp;\n\n      if (mirroredPairs[character]) {\n        tmp = selectCompanionObject(cm, head, character, inclusive);\n      } else if (selfPaired[character]) {\n        tmp = findBeginningAndEnd(cm, head, character, inclusive);\n      } else if (character === 'W') {\n        tmp = expandWordUnderCursor(cm, inclusive, true\n        /** forward */\n        , true\n        /** bigWord */\n        );\n      } else if (character === 'w') {\n        tmp = expandWordUnderCursor(cm, inclusive, true\n        /** forward */\n        , false\n        /** bigWord */\n        );\n      } else if (character === 'p') {\n        tmp = findParagraph(cm, head, motionArgs.repeat, 0, inclusive);\n        motionArgs.linewise = true;\n\n        if (vim.visualMode) {\n          if (!vim.visualLine) {\n            vim.visualLine = true;\n          }\n        } else {\n          var operatorArgs = vim.inputState.operatorArgs;\n\n          if (operatorArgs) {\n            operatorArgs.linewise = true;\n          }\n\n          tmp.end.line--;\n        }\n      } else {\n        // No text object defined for this, don't move.\n        return null;\n      }\n\n      if (!cm.state.vim.visualMode) {\n        return [tmp.start, tmp.end];\n      } else {\n        return expandSelection(cm, tmp.start, tmp.end);\n      }\n    },\n    repeatLastCharacterSearch: function repeatLastCharacterSearch(cm, head, motionArgs) {\n      var lastSearch = vimGlobalState.lastCharacterSearch;\n      var repeat = motionArgs.repeat;\n      var forward = motionArgs.forward === lastSearch.forward;\n      var increment = (lastSearch.increment ? 1 : 0) * (forward ? -1 : 1);\n      cm.moveH(-1 * increment, 'char');\n      motionArgs.inclusive = forward ? true : false;\n\n      var curEnd = _moveToCharacter(cm, repeat, forward, lastSearch.selectedCharacter);\n\n      if (!curEnd) {\n        cm.moveH(increment, 'char');\n        return head;\n      }\n\n      curEnd.ch += increment;\n      return curEnd;\n    }\n  };\n\n  function defineMotion(name, fn) {\n    motions[name] = fn;\n  }\n\n  function fillArray(val, times) {\n    var arr = [];\n\n    for (var i = 0; i < times; i++) {\n      arr.push(val);\n    }\n\n    return arr;\n  }\n  /**\n   * An operator acts on a text selection. It receives the list of selections\n   * as input. The corresponding CodeMirror selection is guaranteed to\n  * match the input selection.\n   */\n\n\n  var operators = {\n    change: function change(cm, args, ranges) {\n      var finalHead, text;\n      var vim = cm.state.vim;\n      vimGlobalState.macroModeState.lastInsertModeChanges.inVisualBlock = vim.visualBlock;\n\n      if (!vim.visualMode) {\n        var anchor = ranges[0].anchor,\n            head = ranges[0].head;\n        text = cm.getRange(anchor, head);\n        var lastState = vim.lastEditInputState || {};\n\n        if (lastState.motion == \"moveByWords\" && !isWhiteSpaceString(text)) {\n          // Exclude trailing whitespace if the range is not all whitespace.\n          var match = /\\s+$/.exec(text);\n\n          if (match && lastState.motionArgs && lastState.motionArgs.forward) {\n            head = offsetCursor(head, 0, -match[0].length);\n            text = text.slice(0, -match[0].length);\n          }\n        }\n\n        var prevLineEnd = new Pos(anchor.line - 1, Number.MAX_VALUE);\n        var wasLastLine = cm.firstLine() == cm.lastLine();\n\n        if (head.line > cm.lastLine() && args.linewise && !wasLastLine) {\n          cm.replaceRange('', prevLineEnd, head);\n        } else {\n          cm.replaceRange('', anchor, head);\n        }\n\n        if (args.linewise) {\n          // Push the next line back down, if there is a next line.\n          if (!wasLastLine) {\n            cm.setCursor(prevLineEnd);\n\n            _cm_adapter[\"default\"].commands.newlineAndIndent(cm);\n          } // make sure cursor ends up at the end of the line.\n\n\n          anchor.ch = Number.MAX_VALUE;\n        }\n\n        finalHead = anchor;\n      } else {\n        text = cm.getSelection();\n        var replacement = fillArray('', ranges.length);\n        cm.replaceSelections(replacement);\n        finalHead = cursorMin(ranges[0].head, ranges[0].anchor);\n      }\n\n      vimGlobalState.registerController.pushText(args.registerName, 'change', text, args.linewise, ranges.length > 1);\n      actions.enterInsertMode(cm, {\n        head: finalHead\n      }, cm.state.vim);\n    },\n    // delete is a javascript keyword.\n    'delete': function _delete(cm, args, ranges) {\n      // Add to the undo stack explicitly so that this delete is recorded as a\n      // specific action instead of being bundled with generic other edits.\n      cm.pushUndoStop();\n      var finalHead, text;\n      var vim = cm.state.vim;\n\n      if (!vim.visualBlock) {\n        var anchor = ranges[0].anchor,\n            head = ranges[0].head;\n\n        if (args.linewise && head.line != cm.firstLine() && anchor.line == cm.lastLine() && anchor.line == head.line - 1) {\n          // Special case for dd on last line (and first line).\n          if (anchor.line == cm.firstLine()) {\n            anchor.ch = 0;\n          } else {\n            anchor = Pos(anchor.line - 1, lineLength(cm, anchor.line - 1));\n          }\n        }\n\n        text = cm.getRange(anchor, head);\n        cm.replaceRange('', anchor, head);\n        finalHead = anchor;\n\n        if (args.linewise) {\n          finalHead = motions.moveToFirstNonWhiteSpaceCharacter(cm, anchor);\n        }\n      } else {\n        text = cm.getSelection();\n        var replacement = fillArray('', ranges.length);\n        cm.replaceSelections(replacement);\n        finalHead = ranges[0].anchor;\n      }\n\n      vimGlobalState.registerController.pushText(args.registerName, 'delete', text, args.linewise, vim.visualBlock);\n      var includeLineBreak = vim.insertMode;\n      return clipCursorToContent(cm, finalHead, includeLineBreak);\n    },\n    indent: function indent(cm, args, ranges) {\n      var vim = cm.state.vim;\n      var startLine = ranges[0].anchor.line;\n      var endLine = vim.visualBlock ? ranges[ranges.length - 1].anchor.line : ranges[0].head.line; // In visual mode, n> shifts the selection right n times, instead of\n      // shifting n lines right once.\n\n      var repeat = vim.visualMode ? args.repeat : 1;\n\n      if (args.linewise) {\n        // The only way to delete a newline is to delete until the start of\n        // the next line, so in linewise mode evalInput will include the next\n        // line. We don't want this in indent, so we go back a line.\n        endLine--;\n      }\n\n      cm.pushUndoStop();\n\n      for (var i = startLine; i <= endLine; i++) {\n        for (var j = 0; j < repeat; j++) {\n          cm.indentLine(i, args.indentRight);\n        }\n      }\n\n      cm.pushUndoStop();\n      return motions.moveToFirstNonWhiteSpaceCharacter(cm, ranges[0].anchor);\n    },\n    changeCase: function changeCase(cm, args, ranges, oldAnchor, newHead) {\n      var selections = cm.getSelections();\n      var swapped = [];\n      var toLower = args.toLower;\n\n      for (var j = 0; j < selections.length; j++) {\n        var toSwap = selections[j];\n        var text = '';\n\n        if (toLower === true) {\n          text = toSwap.toLowerCase();\n        } else if (toLower === false) {\n          text = toSwap.toUpperCase();\n        } else {\n          for (var i = 0; i < toSwap.length; i++) {\n            var character = toSwap.charAt(i);\n            text += isUpperCase(character) ? character.toLowerCase() : character.toUpperCase();\n          }\n        }\n\n        swapped.push(text);\n      }\n\n      cm.replaceSelections(swapped);\n\n      if (args.shouldMoveCursor) {\n        return newHead;\n      } else if (!cm.state.vim.visualMode && args.linewise && ranges[0].anchor.line + 1 == ranges[0].head.line) {\n        return motions.moveToFirstNonWhiteSpaceCharacter(cm, oldAnchor);\n      } else if (args.linewise) {\n        return oldAnchor;\n      } else {\n        return cursorMin(ranges[0].anchor, ranges[0].head);\n      }\n    },\n    yank: function yank(cm, args, ranges, oldAnchor) {\n      var vim = cm.state.vim;\n      var text = cm.getSelection();\n      var endPos = vim.visualMode ? cursorMin(vim.sel.anchor, vim.sel.head, ranges[0].head, ranges[0].anchor) : oldAnchor;\n      vimGlobalState.registerController.pushText(args.registerName, 'yank', text, args.linewise, vim.visualBlock);\n      return endPos;\n    }\n  };\n\n  function defineOperator(name, fn) {\n    operators[name] = fn;\n  }\n\n  var actions = {\n    jumpListWalk: function jumpListWalk(cm, actionArgs, vim) {\n      if (vim.visualMode) {\n        return;\n      }\n\n      var repeat = actionArgs.repeat;\n      var forward = actionArgs.forward;\n      var jumpList = vimGlobalState.jumpList;\n      var mark = jumpList.move(cm, forward ? repeat : -repeat);\n      var markPos = mark ? mark.find() : undefined;\n      markPos = markPos ? markPos : cm.getCursor();\n      cm.setCursor(markPos);\n    },\n    scroll: function scroll(cm, actionArgs, vim) {\n      if (vim.visualMode) {\n        return;\n      }\n\n      var repeat = actionArgs.repeat || 1;\n      var lineHeight = cm.defaultTextHeight();\n      var top = cm.getScrollInfo().top;\n      var delta = lineHeight * repeat;\n      var newPos = actionArgs.forward ? top + delta : top - delta;\n      var cursor = copyCursor(cm.getCursor());\n      var cursorCoords = cm.charCoords(cursor, 'local');\n\n      if (actionArgs.forward) {\n        if (newPos > cursorCoords.top) {\n          cursor.line += (newPos - cursorCoords.top) / lineHeight;\n          cursor.line = Math.ceil(cursor.line);\n          cm.setCursor(cursor);\n          cursorCoords = cm.charCoords(cursor, 'local');\n          cm.scrollTo(null, cursorCoords.top);\n        } else {\n          // Cursor stays within bounds.  Just reposition the scroll window.\n          cm.scrollTo(null, newPos);\n        }\n      } else {\n        var newBottom = newPos + cm.getScrollInfo().clientHeight;\n\n        if (newBottom < cursorCoords.bottom) {\n          cursor.line -= (cursorCoords.bottom - newBottom) / lineHeight;\n          cursor.line = Math.floor(cursor.line);\n          cm.setCursor(cursor);\n          cursorCoords = cm.charCoords(cursor, 'local');\n          cm.scrollTo(null, cursorCoords.bottom - cm.getScrollInfo().clientHeight);\n        } else {\n          // Cursor stays within bounds.  Just reposition the scroll window.\n          cm.scrollTo(null, newPos);\n        }\n      }\n    },\n    scrollToCursor: function scrollToCursor(cm, actionArgs) {\n      // var lineNum = cm.getCursor().line;\n      // var charCoords = cm.charCoords(Pos(lineNum, 0), 'local');\n      // var height = cm.getScrollInfo().clientHeight;\n      // var y = charCoords.top;\n      // var lineHeight = charCoords.bottom - y;\n      // switch (actionArgs.position) {\n      //   case 'center': y = y - (height / 2) + lineHeight;\n      //     break;\n      //   case 'bottom': y = y - height + lineHeight;\n      //     break;\n      // }\n      // cm.scrollTo(null, y);\n      cm.moveCurrentLineTo(actionArgs.position);\n    },\n    replayMacro: function replayMacro(cm, actionArgs, vim) {\n      var registerName = actionArgs.selectedCharacter;\n      var repeat = actionArgs.repeat;\n      var macroModeState = vimGlobalState.macroModeState;\n\n      if (registerName == '@') {\n        registerName = macroModeState.latestRegister;\n      }\n\n      while (repeat--) {\n        executeMacroRegister(cm, vim, macroModeState, registerName);\n      }\n    },\n    enterMacroRecordMode: function enterMacroRecordMode(cm, actionArgs) {\n      var macroModeState = vimGlobalState.macroModeState;\n      var registerName = actionArgs.selectedCharacter;\n\n      if (vimGlobalState.registerController.isValidRegister(registerName)) {\n        macroModeState.enterMacroRecordMode(cm, registerName);\n      }\n    },\n    toggleOverwrite: function toggleOverwrite(cm) {\n      if (!cm.replaceMode) {\n        cm.toggleOverwrite(true);\n        cm.setOption('keyMap', 'vim-replace');\n\n        _cm_adapter[\"default\"].signal(cm, \"vim-mode-change\", {\n          mode: \"replace\"\n        });\n      } else {\n        cm.toggleOverwrite(false);\n        cm.setOption('keyMap', 'vim-insert');\n\n        _cm_adapter[\"default\"].signal(cm, \"vim-mode-change\", {\n          mode: \"insert\"\n        });\n      }\n    },\n    enterInsertMode: function enterInsertMode(cm, actionArgs, vim) {\n      if (cm.getOption('readOnly')) {\n        return;\n      }\n\n      vim.insertMode = true;\n      vim.insertModeRepeat = actionArgs && actionArgs.repeat || 1;\n      cm.leaveVimMode();\n      var insertAt = actionArgs ? actionArgs.insertAt : null;\n      var sel = vim.sel;\n      var head = actionArgs.head || cm.getCursor('head');\n      var height = cm.listSelections().length;\n\n      if (insertAt == 'eol') {\n        head = Pos(head.line, lineLength(cm, head.line));\n      } else if (insertAt == 'charAfter') {\n        head = offsetCursor(head, 0, 1);\n      } else if (insertAt == 'firstNonBlank') {\n        head = motions.moveToFirstNonWhiteSpaceCharacter(cm, head);\n      } else if (insertAt == 'startOfSelectedArea') {\n        if (!vim.visualBlock) {\n          if (sel.head.line < sel.anchor.line) {\n            head = sel.head;\n          } else {\n            head = Pos(sel.anchor.line, 0);\n          }\n        } else {\n          head = Pos(Math.min(sel.head.line, sel.anchor.line), Math.min(sel.head.ch, sel.anchor.ch));\n          height = Math.abs(sel.head.line - sel.anchor.line) + 1;\n        }\n      } else if (insertAt == 'endOfSelectedArea') {\n        if (!vim.visualBlock) {\n          if (sel.head.line >= sel.anchor.line) {\n            head = offsetCursor(sel.head, 0, 1);\n          } else {\n            head = Pos(sel.anchor.line, 0);\n          }\n        } else {\n          head = Pos(Math.min(sel.head.line, sel.anchor.line), Math.max(sel.head.ch + 1, sel.anchor.ch));\n          height = Math.abs(sel.head.line - sel.anchor.line) + 1;\n        }\n      } else if (insertAt == 'inplace') {\n        if (vim.visualMode) {\n          return;\n        }\n      }\n\n      cm.setOption('disableInput', false);\n\n      if (vim.visualMode) {\n        exitVisualMode(cm);\n      }\n\n      if (actionArgs && actionArgs.replace) {\n        // Handle Replace-mode as a special case of insert mode.\n        cm.toggleOverwrite(true);\n        cm.setOption('keyMap', 'vim-replace');\n\n        _cm_adapter[\"default\"].signal(cm, \"vim-mode-change\", {\n          mode: \"replace\"\n        });\n      } else {\n        cm.toggleOverwrite(false);\n        cm.setOption('keyMap', 'vim-insert');\n\n        _cm_adapter[\"default\"].signal(cm, \"vim-mode-change\", {\n          mode: \"insert\"\n        });\n      }\n\n      if (!vimGlobalState.macroModeState.isPlaying) {\n        // Only record if not replaying.\n        cm.on('change', onChange);\n\n        _cm_adapter[\"default\"].on(cm.getInputField(), 'keydown', onKeyEventTargetKeyDown);\n      }\n\n      selectForInsert(cm, head, height);\n    },\n    toggleVisualMode: function toggleVisualMode(cm, actionArgs, vim) {\n      var repeat = actionArgs.repeat;\n      var anchor = cm.getCursor();\n      var head; // TODO: The repeat should actually select number of characters/lines\n      //     equal to the repeat times the size of the previous visual\n      //     operation.\n\n      if (!vim.visualMode) {\n        // Entering visual mode\n        vim.visualMode = true;\n        vim.visualLine = !!actionArgs.linewise;\n        vim.visualBlock = !!actionArgs.blockwise;\n        head = clipCursorToContent(cm, Pos(anchor.line, anchor.ch + repeat - 1), true\n        /** includeLineBreak */\n        );\n        vim.sel = {\n          anchor: anchor,\n          head: head\n        };\n\n        _cm_adapter[\"default\"].signal(cm, \"vim-mode-change\", {\n          mode: \"visual\",\n          subMode: vim.visualLine ? \"linewise\" : vim.visualBlock ? \"blockwise\" : \"\"\n        });\n\n        updateCmSelection(cm);\n        updateMark(cm, vim, '<', cursorMin(anchor, head));\n        updateMark(cm, vim, '>', cursorMax(anchor, head));\n      } else if (vim.visualLine ^ actionArgs.linewise || vim.visualBlock ^ actionArgs.blockwise) {\n        // Toggling between modes\n        vim.visualLine = !!actionArgs.linewise;\n        vim.visualBlock = !!actionArgs.blockwise;\n\n        _cm_adapter[\"default\"].signal(cm, \"vim-mode-change\", {\n          mode: \"visual\",\n          subMode: vim.visualLine ? \"linewise\" : vim.visualBlock ? \"blockwise\" : \"\"\n        });\n\n        updateCmSelection(cm);\n      } else {\n        exitVisualMode(cm);\n      }\n    },\n    reselectLastSelection: function reselectLastSelection(cm, _actionArgs, vim) {\n      var lastSelection = vim.lastSelection;\n\n      if (vim.visualMode) {\n        updateLastSelection(cm, vim);\n      }\n\n      if (lastSelection) {\n        var anchor = lastSelection.anchorMark.find();\n        var head = lastSelection.headMark.find();\n\n        if (!anchor || !head) {\n          // If the marks have been destroyed due to edits, do nothing.\n          return;\n        }\n\n        vim.sel = {\n          anchor: anchor,\n          head: head\n        };\n        vim.visualMode = true;\n        vim.visualLine = lastSelection.visualLine;\n        vim.visualBlock = lastSelection.visualBlock;\n        updateCmSelection(cm);\n        updateMark(cm, vim, '<', cursorMin(anchor, head));\n        updateMark(cm, vim, '>', cursorMax(anchor, head));\n\n        _cm_adapter[\"default\"].signal(cm, 'vim-mode-change', {\n          mode: 'visual',\n          subMode: vim.visualLine ? 'linewise' : vim.visualBlock ? 'blockwise' : ''\n        });\n      }\n    },\n    joinLines: function joinLines(cm, actionArgs, vim) {\n      var curStart, curEnd;\n\n      if (vim.visualMode) {\n        curStart = cm.getCursor('anchor');\n        curEnd = cm.getCursor('head');\n\n        if (cursorIsBefore(curEnd, curStart)) {\n          var tmp = curEnd;\n          curEnd = curStart;\n          curStart = tmp;\n        }\n\n        curEnd.ch = lineLength(cm, curEnd.line) - 1;\n      } else {\n        // Repeat is the number of lines to join. Minimum 2 lines.\n        var repeat = Math.max(actionArgs.repeat, 2);\n        curStart = cm.getCursor();\n        curEnd = clipCursorToContent(cm, Pos(curStart.line + repeat - 1, Infinity));\n      }\n\n      var finalCh = 0;\n\n      for (var i = curStart.line; i < curEnd.line; i++) {\n        finalCh = lineLength(cm, curStart.line);\n        var tmp = Pos(curStart.line + 1, lineLength(cm, curStart.line + 1));\n        var text = cm.getRange(curStart, tmp);\n        text = text.replace(/\\n\\s*/g, ' ');\n        cm.replaceRange(text, curStart, tmp);\n      }\n\n      var curFinalPos = Pos(curStart.line, finalCh);\n\n      if (vim.visualMode) {\n        exitVisualMode(cm, false);\n      }\n\n      cm.setCursor(curFinalPos);\n    },\n    newLineAndEnterInsertMode: function newLineAndEnterInsertMode(cm, actionArgs, vim) {\n      vim.insertMode = true;\n      var insertAt = copyCursor(cm.getCursor());\n\n      if (insertAt.line === cm.firstLine() && !actionArgs.after) {\n        // Special case for inserting newline before start of document.\n        cm.replaceRange('\\n', Pos(cm.firstLine(), 0));\n        cm.setCursor(cm.firstLine(), 0);\n      } else {\n        insertAt.line = actionArgs.after ? insertAt.line : insertAt.line - 1;\n        insertAt.ch = lineLength(cm, insertAt.line);\n        cm.setCursor(insertAt);\n        var newlineFn = _cm_adapter[\"default\"].commands.newlineAndIndentContinueComment || _cm_adapter[\"default\"].commands.newlineAndIndent;\n        newlineFn(cm);\n      }\n\n      this.enterInsertMode(cm, {\n        repeat: actionArgs.repeat\n      }, vim);\n    },\n    paste: function paste(cm, actionArgs, vim) {\n      var cur = copyCursor(cm.getCursor());\n      var register = vimGlobalState.registerController.getRegister(actionArgs.registerName);\n      var text = register.toString();\n\n      if (!text) {\n        return;\n      }\n\n      if (actionArgs.matchIndent) {\n        var tabSize = cm.getOption(\"tabSize\"); // length that considers tabs and tabSize\n\n        var whitespaceLength = function whitespaceLength(str) {\n          var tabs = str.split(\"\\t\").length - 1;\n          var spaces = str.split(\" \").length - 1;\n          return tabs * tabSize + spaces * 1;\n        };\n\n        var currentLine = cm.getLine(cm.getCursor().line);\n        var indent = whitespaceLength(currentLine.match(/^\\s*/)[0]); // chomp last newline b/c don't want it to match /^\\s*/gm\n\n        var chompedText = text.replace(/\\n$/, '');\n        var wasChomped = text !== chompedText;\n        var firstIndent = whitespaceLength(text.match(/^\\s*/)[0]);\n        var text = chompedText.replace(/^\\s*/gm, function (wspace) {\n          var newIndent = indent + (whitespaceLength(wspace) - firstIndent);\n\n          if (newIndent < 0) {\n            return \"\";\n          } else if (cm.getOption(\"indentWithTabs\")) {\n            var quotient = Math.floor(newIndent / tabSize);\n            return Array(quotient + 1).join('\\t');\n          } else {\n            return Array(newIndent + 1).join(' ');\n          }\n        });\n        text += wasChomped ? \"\\n\" : \"\";\n      }\n\n      if (actionArgs.repeat > 1) {\n        var text = Array(actionArgs.repeat + 1).join(text);\n      }\n\n      var linewise = register.linewise;\n      var blockwise = register.blockwise;\n\n      if (linewise) {\n        if (vim.visualMode) {\n          text = vim.visualLine ? text.slice(0, -1) : '\\n' + text.slice(0, text.length - 1) + '\\n';\n        } else if (actionArgs.after) {\n          // Move the newline at the end to the start instead, and paste just\n          // before the newline character of the line we are on right now.\n          text = '\\n' + text.slice(0, text.length - 1);\n          cur.ch = lineLength(cm, cur.line);\n        } else {\n          cur.ch = 0;\n        }\n      } else {\n        if (blockwise) {\n          text = text.split('\\n');\n\n          for (var i = 0; i < text.length; i++) {\n            text[i] = text[i] == '' ? ' ' : text[i];\n          }\n        }\n\n        cur.ch += actionArgs.after ? 1 : 0;\n      }\n\n      var curPosFinal;\n      var idx;\n\n      if (vim.visualMode) {\n        //  save the pasted text for reselection if the need arises\n        vim.lastPastedText = text;\n        var lastSelectionCurEnd;\n        var selectedArea = getSelectedAreaRange(cm, vim);\n        var selectionStart = selectedArea[0];\n        var selectionEnd = selectedArea[1];\n        var selectedText = cm.getSelection();\n        var selections = cm.listSelections();\n        var emptyStrings = new Array(selections.length).join('1').split('1'); // save the curEnd marker before it get cleared due to cm.replaceRange.\n\n        if (vim.lastSelection) {\n          lastSelectionCurEnd = vim.lastSelection.headMark.find();\n        } // push the previously selected text to unnamed register\n\n\n        vimGlobalState.registerController.unnamedRegister.setText(selectedText);\n\n        if (blockwise) {\n          // first delete the selected text\n          cm.replaceSelections(emptyStrings); // Set new selections as per the block length of the yanked text\n\n          selectionEnd = Pos(selectionStart.line + text.length - 1, selectionStart.ch);\n          cm.setCursor(selectionStart);\n          selectBlock(cm, selectionEnd);\n          cm.replaceSelections(text);\n          curPosFinal = selectionStart;\n        } else if (vim.visualBlock) {\n          cm.replaceSelections(emptyStrings);\n          cm.setCursor(selectionStart);\n          cm.replaceRange(text, selectionStart, selectionStart);\n          curPosFinal = selectionStart;\n        } else {\n          cm.replaceRange(text, selectionStart, selectionEnd);\n          curPosFinal = cm.posFromIndex(cm.indexFromPos(selectionStart) + text.length - 1);\n        } // restore the the curEnd marker\n\n\n        if (lastSelectionCurEnd) {\n          vim.lastSelection.headMark = cm.setBookmark(lastSelectionCurEnd);\n        }\n\n        if (linewise) {\n          curPosFinal.ch = 0;\n        }\n      } else {\n        if (blockwise) {\n          cm.setCursor(cur);\n\n          for (var i = 0; i < text.length; i++) {\n            var line = cur.line + i;\n\n            if (line > cm.lastLine()) {\n              cm.replaceRange('\\n', Pos(line, 0));\n            }\n\n            var lastCh = lineLength(cm, line);\n\n            if (lastCh < cur.ch) {\n              extendLineToColumn(cm, line, cur.ch);\n            }\n          }\n\n          cm.setCursor(cur);\n          selectBlock(cm, Pos(cur.line + text.length - 1, cur.ch));\n          cm.replaceSelections(text);\n          curPosFinal = cur;\n        } else {\n          cm.replaceRange(text, cur); // Now fine tune the cursor to where we want it.\n\n          if (linewise && actionArgs.after) {\n            curPosFinal = Pos(cur.line + 1, cm.findFirstNonWhiteSpaceCharacter(cur.line + 1));\n          } else if (linewise && !actionArgs.after) {\n            curPosFinal = Pos(cur.line, cm.findFirstNonWhiteSpaceCharacter(cur.line));\n          } else if (!linewise && actionArgs.after) {\n            idx = cm.indexFromPos(cur);\n            curPosFinal = cm.posFromIndex(idx + text.length - 1);\n          } else {\n            idx = cm.indexFromPos(cur);\n            curPosFinal = cm.posFromIndex(idx + text.length);\n          }\n        }\n      }\n\n      if (vim.visualMode) {\n        exitVisualMode(cm, false);\n      }\n\n      cm.setCursor(curPosFinal);\n    },\n    undo: function undo(cm, actionArgs) {\n      cm.operation(function () {\n        repeatFn(cm, _cm_adapter[\"default\"].commands.undo, actionArgs.repeat)();\n        cm.setCursor(cm.getCursor('anchor'));\n      });\n    },\n    redo: function redo(cm, actionArgs) {\n      repeatFn(cm, _cm_adapter[\"default\"].commands.redo, actionArgs.repeat)();\n    },\n    setRegister: function setRegister(_cm, actionArgs, vim) {\n      vim.inputState.registerName = actionArgs.selectedCharacter;\n    },\n    setMark: function setMark(cm, actionArgs, vim) {\n      var markName = actionArgs.selectedCharacter;\n      updateMark(cm, vim, markName, cm.getCursor());\n    },\n    replace: function replace(cm, actionArgs, vim) {\n      var replaceWith = actionArgs.selectedCharacter;\n      var curStart = cm.getCursor();\n      var replaceTo;\n      var curEnd;\n      var selections = cm.listSelections();\n\n      if (vim.visualMode) {\n        curStart = cm.getCursor('start');\n        curEnd = cm.getCursor('end');\n      } else {\n        var line = cm.getLine(curStart.line);\n        replaceTo = curStart.ch + actionArgs.repeat;\n\n        if (replaceTo > line.length) {\n          replaceTo = line.length;\n        }\n\n        curEnd = Pos(curStart.line, replaceTo);\n      }\n\n      if (replaceWith == '\\n') {\n        if (!vim.visualMode) cm.replaceRange('', curStart, curEnd); // special case, where vim help says to replace by just one line-break\n\n        (_cm_adapter[\"default\"].commands.newlineAndIndentContinueComment || _cm_adapter[\"default\"].commands.newlineAndIndent)(cm);\n      } else {\n        var replaceWithStr = cm.getRange(curStart, curEnd); //replace all characters in range by selected, but keep linebreaks\n\n        replaceWithStr = replaceWithStr.replace(/[^\\n]/g, replaceWith);\n\n        if (vim.visualBlock) {\n          // Tabs are split in visua block before replacing\n          var spaces = new Array(cm.getOption(\"tabSize\") + 1).join(' ');\n          replaceWithStr = cm.getSelection();\n          replaceWithStr = replaceWithStr.replace(/\\t/g, spaces).replace(/[^\\n]/g, replaceWith).split('\\n');\n          cm.replaceSelections(replaceWithStr);\n        } else {\n          cm.replaceRange(replaceWithStr, curStart, curEnd);\n        }\n\n        if (vim.visualMode) {\n          curStart = cursorIsBefore(selections[0].anchor, selections[0].head) ? selections[0].anchor : selections[0].head;\n          cm.setCursor(curStart);\n          exitVisualMode(cm, false);\n        } else {\n          cm.setCursor(offsetCursor(curEnd, 0, -1));\n        }\n      }\n    },\n    incrementNumberToken: function incrementNumberToken(cm, actionArgs) {\n      var cur = cm.getCursor();\n      var lineStr = cm.getLine(cur.line);\n      var re = /(-?)(?:(0x)([\\da-f]+)|(0b|0|)(\\d+))/gi;\n      var match;\n      var start;\n      var end;\n      var numberStr;\n\n      while ((match = re.exec(lineStr)) !== null) {\n        start = match.index;\n        end = start + match[0].length;\n        if (cur.ch < end) break;\n      }\n\n      if (!actionArgs.backtrack && end <= cur.ch) return;\n\n      if (match) {\n        var baseStr = match[2] || match[4];\n        var digits = match[3] || match[5];\n        var increment = actionArgs.increase ? 1 : -1;\n        var base = {\n          '0b': 2,\n          '0': 8,\n          '': 10,\n          '0x': 16\n        }[baseStr.toLowerCase()];\n        var number = parseInt(match[1] + digits, base) + increment * actionArgs.repeat;\n        numberStr = number.toString(base);\n        var zeroPadding = baseStr ? new Array(digits.length - numberStr.length + 1 + match[1].length).join('0') : '';\n\n        if (numberStr.charAt(0) === '-') {\n          numberStr = '-' + baseStr + zeroPadding + numberStr.substr(1);\n        } else {\n          numberStr = baseStr + zeroPadding + numberStr;\n        }\n\n        var from = Pos(cur.line, start);\n        var to = Pos(cur.line, end);\n        cm.replaceRange(numberStr, from, to);\n      } else {\n        return;\n      }\n\n      cm.setCursor(Pos(cur.line, start + numberStr.length - 1));\n    },\n    repeatLastEdit: function repeatLastEdit(cm, actionArgs, vim) {\n      var lastEditInputState = vim.lastEditInputState;\n\n      if (!lastEditInputState) {\n        return;\n      }\n\n      var repeat = actionArgs.repeat;\n\n      if (repeat && actionArgs.repeatIsExplicit) {\n        vim.lastEditInputState.repeatOverride = repeat;\n      } else {\n        repeat = vim.lastEditInputState.repeatOverride || repeat;\n      }\n\n      _repeatLastEdit(cm, vim, repeat, false\n      /** repeatForInsert */\n      );\n    },\n    indent: function indent(cm, actionArgs) {\n      cm.indentLine(cm.getCursor().line, actionArgs.indentRight);\n    },\n    exitInsertMode: exitInsertMode\n  };\n\n  function defineAction(name, fn) {\n    actions[name] = fn;\n  }\n  /*\n   * Below are miscellaneous utility functions used by vim.js\n   */\n\n  /**\n   * Clips cursor to ensure that line is within the buffer's range\n   * If includeLineBreak is true, then allow cur.ch == lineLength.\n   */\n\n\n  function clipCursorToContent(cm, cur, includeLineBreak) {\n    var line = Math.min(Math.max(cm.firstLine(), cur.line), cm.lastLine());\n    var maxCh = lineLength(cm, line) - 1;\n    maxCh = includeLineBreak ? maxCh + 1 : maxCh;\n    var ch = Math.min(Math.max(0, cur.ch), maxCh);\n    return Pos(line, ch);\n  }\n\n  function copyArgs(args) {\n    var ret = {};\n\n    for (var prop in args) {\n      if (args.hasOwnProperty(prop)) {\n        ret[prop] = args[prop];\n      }\n    }\n\n    return ret;\n  }\n\n  function offsetCursor(cur, offsetLine, offsetCh) {\n    if (_typeof(offsetLine) === 'object') {\n      offsetCh = offsetLine.ch;\n      offsetLine = offsetLine.line;\n    }\n\n    return Pos(cur.line + offsetLine, cur.ch + offsetCh);\n  }\n\n  function getOffset(anchor, head) {\n    return {\n      line: head.line - anchor.line,\n      ch: head.line - anchor.line\n    };\n  }\n\n  function commandMatches(keys, keyMap, context, inputState) {\n    // Partial matches are not applied. They inform the key handler\n    // that the current key sequence is a subsequence of a valid key\n    // sequence, so that the key buffer is not cleared.\n    var match,\n        partial = [],\n        full = [];\n\n    for (var i = 0; i < keyMap.length; i++) {\n      var command = keyMap[i];\n\n      if (context == 'insert' && command.context != 'insert' || command.context && command.context != context || inputState.operator && command.type == 'action' || !(match = commandMatch(keys, command.keys))) {\n        continue;\n      }\n\n      if (match == 'partial') {\n        partial.push(command);\n      }\n\n      if (match == 'full') {\n        full.push(command);\n      }\n    }\n\n    return {\n      partial: partial.length && partial,\n      full: full.length && full\n    };\n  }\n\n  function commandMatch(pressed, mapped) {\n    if (mapped.slice(-11) == '<character>') {\n      // Last character matches anything.\n      var prefixLen = mapped.length - 11;\n      var pressedPrefix = pressed.slice(0, prefixLen);\n      var mappedPrefix = mapped.slice(0, prefixLen);\n      return pressedPrefix == mappedPrefix && pressed.length > prefixLen ? 'full' : mappedPrefix.indexOf(pressedPrefix) == 0 ? 'partial' : false;\n    } else {\n      return pressed == mapped ? 'full' : mapped.indexOf(pressed) == 0 ? 'partial' : false;\n    }\n  }\n\n  function lastChar(keys) {\n    var match = /^.*(<[^>]+>)$/.exec(keys);\n    var selectedCharacter = match ? match[1] : keys.slice(-1);\n\n    if (selectedCharacter.length > 1) {\n      switch (selectedCharacter) {\n        case '<CR>':\n          selectedCharacter = '\\n';\n          break;\n\n        case '<Space>':\n          selectedCharacter = ' ';\n          break;\n\n        default:\n          selectedCharacter = '';\n          break;\n      }\n    }\n\n    return selectedCharacter;\n  }\n\n  function repeatFn(cm, fn, repeat) {\n    return function () {\n      for (var i = 0; i < repeat; i++) {\n        fn(cm);\n      }\n    };\n  }\n\n  function copyCursor(cur) {\n    return Pos(cur.line, cur.ch);\n  }\n\n  function cursorEqual(cur1, cur2) {\n    return cur1.ch == cur2.ch && cur1.line == cur2.line;\n  }\n\n  function cursorIsBefore(cur1, cur2) {\n    if (cur1.line < cur2.line) {\n      return true;\n    }\n\n    if (cur1.line == cur2.line && cur1.ch < cur2.ch) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function cursorMin(cur1, cur2) {\n    if (arguments.length > 2) {\n      cur2 = cursorMin.apply(undefined, Array.prototype.slice.call(arguments, 1));\n    }\n\n    return cursorIsBefore(cur1, cur2) ? cur1 : cur2;\n  }\n\n  function cursorMax(cur1, cur2) {\n    if (arguments.length > 2) {\n      cur2 = cursorMax.apply(undefined, Array.prototype.slice.call(arguments, 1));\n    }\n\n    return cursorIsBefore(cur1, cur2) ? cur2 : cur1;\n  }\n\n  function cursorIsBetween(cur1, cur2, cur3) {\n    // returns true if cur2 is between cur1 and cur3.\n    var cur1before2 = cursorIsBefore(cur1, cur2);\n    var cur2before3 = cursorIsBefore(cur2, cur3);\n    return cur1before2 && cur2before3;\n  }\n\n  function lineLength(cm, lineNum) {\n    return cm.getLine(lineNum).length;\n  }\n\n  function trim(s) {\n    if (s.trim) {\n      return s.trim();\n    }\n\n    return s.replace(/^\\s+|\\s+$/g, '');\n  }\n\n  function escapeRegex(s) {\n    return s.replace(/([.?*+$\\[\\]\\/\\\\(){}|\\-])/g, '\\\\$1');\n  }\n\n  function extendLineToColumn(cm, lineNum, column) {\n    var endCh = lineLength(cm, lineNum);\n    var spaces = new Array(column - endCh + 1).join(' ');\n    cm.setCursor(Pos(lineNum, endCh));\n    cm.replaceRange(spaces, cm.getCursor());\n  } // This functions selects a rectangular block\n  // of text with selectionEnd as any of its corner\n  // Height of block:\n  // Difference in selectionEnd.line and first/last selection.line\n  // Width of the block:\n  // Distance between selectionEnd.ch and any(first considered here) selection.ch\n\n\n  function selectBlock(cm, selectionEnd) {\n    var selections = [],\n        ranges = cm.listSelections();\n    var head = copyCursor(cm.clipPos(selectionEnd));\n    var isClipped = !cursorEqual(selectionEnd, head);\n    var curHead = cm.getCursor('head');\n    var primIndex = getIndex(ranges, curHead);\n    var wasClipped = cursorEqual(ranges[primIndex].head, ranges[primIndex].anchor);\n    var max = ranges.length - 1;\n    var index = max - primIndex > primIndex ? max : 0;\n    var base = ranges[index].anchor;\n    var firstLine = Math.min(base.line, head.line);\n    var lastLine = Math.max(base.line, head.line);\n    var baseCh = base.ch,\n        headCh = head.ch;\n    var dir = ranges[index].head.ch - baseCh;\n    var newDir = headCh - baseCh;\n\n    if (dir > 0 && newDir <= 0) {\n      baseCh++;\n\n      if (!isClipped) {\n        headCh--;\n      }\n    } else if (dir < 0 && newDir >= 0) {\n      baseCh--;\n\n      if (!wasClipped) {\n        headCh++;\n      }\n    } else if (dir < 0 && newDir == -1) {\n      baseCh--;\n      headCh++;\n    }\n\n    for (var line = firstLine; line <= lastLine; line++) {\n      var range = {\n        anchor: new Pos(line, baseCh),\n        head: new Pos(line, headCh)\n      };\n      selections.push(range);\n    }\n\n    cm.setSelections(selections);\n    selectionEnd.ch = headCh;\n    base.ch = baseCh;\n    return base;\n  }\n\n  function selectForInsert(cm, head, height) {\n    var sel = [];\n\n    for (var i = 0; i < height; i++) {\n      var lineHead = offsetCursor(head, i, 0);\n      sel.push({\n        anchor: lineHead,\n        head: lineHead\n      });\n    }\n\n    cm.setSelections(sel, 0);\n  } // getIndex returns the index of the cursor in the selections.\n\n\n  function getIndex(ranges, cursor, end) {\n    for (var i = 0; i < ranges.length; i++) {\n      var atAnchor = end != 'head' && cursorEqual(ranges[i].anchor, cursor);\n      var atHead = end != 'anchor' && cursorEqual(ranges[i].head, cursor);\n\n      if (atAnchor || atHead) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  function getSelectedAreaRange(cm, vim) {\n    var lastSelection = vim.lastSelection;\n\n    var getCurrentSelectedAreaRange = function getCurrentSelectedAreaRange() {\n      var selections = cm.listSelections();\n      var start = selections[0];\n      var end = selections[selections.length - 1];\n      var selectionStart = cursorIsBefore(start.anchor, start.head) ? start.anchor : start.head;\n      var selectionEnd = cursorIsBefore(end.anchor, end.head) ? end.head : end.anchor;\n      return [selectionStart, selectionEnd];\n    };\n\n    var getLastSelectedAreaRange = function getLastSelectedAreaRange() {\n      var selectionStart = cm.getCursor();\n      var selectionEnd = cm.getCursor();\n      var block = lastSelection.visualBlock;\n\n      if (block) {\n        var width = block.width;\n        var height = block.height;\n        selectionEnd = Pos(selectionStart.line + height, selectionStart.ch + width);\n        var selections = []; // selectBlock creates a 'proper' rectangular block.\n        // We do not want that in all cases, so we manually set selections.\n\n        for (var i = selectionStart.line; i < selectionEnd.line; i++) {\n          var anchor = Pos(i, selectionStart.ch);\n          var head = Pos(i, selectionEnd.ch);\n          var range = {\n            anchor: anchor,\n            head: head\n          };\n          selections.push(range);\n        }\n\n        cm.setSelections(selections);\n      } else {\n        var start = lastSelection.anchorMark.find();\n        var end = lastSelection.headMark.find();\n        var line = end.line - start.line;\n        var ch = end.ch - start.ch;\n        selectionEnd = {\n          line: selectionEnd.line + line,\n          ch: line ? selectionEnd.ch : ch + selectionEnd.ch\n        };\n\n        if (lastSelection.visualLine) {\n          selectionStart = Pos(selectionStart.line, 0);\n          selectionEnd = Pos(selectionEnd.line, lineLength(cm, selectionEnd.line));\n        }\n\n        cm.setSelection(selectionStart, selectionEnd);\n      }\n\n      return [selectionStart, selectionEnd];\n    };\n\n    if (!vim.visualMode) {\n      // In case of replaying the action.\n      return getLastSelectedAreaRange();\n    } else {\n      return getCurrentSelectedAreaRange();\n    }\n  } // Updates the previous selection with the current selection's values. This\n  // should only be called in visual mode.\n\n\n  function updateLastSelection(cm, vim) {\n    var anchor = vim.sel.anchor;\n    var head = vim.sel.head; // To accommodate the effect of lastPastedText in the last selection\n\n    if (vim.lastPastedText) {\n      head = cm.posFromIndex(cm.indexFromPos(anchor) + vim.lastPastedText.length);\n      vim.lastPastedText = null;\n    }\n\n    vim.lastSelection = {\n      'anchorMark': cm.setBookmark(anchor),\n      'headMark': cm.setBookmark(head),\n      'anchor': copyCursor(anchor),\n      'head': copyCursor(head),\n      'visualMode': vim.visualMode,\n      'visualLine': vim.visualLine,\n      'visualBlock': vim.visualBlock\n    };\n  }\n\n  function expandSelection(cm, start, end) {\n    var sel = cm.state.vim.sel;\n    var head = sel.head;\n    var anchor = sel.anchor;\n    var tmp;\n\n    if (cursorIsBefore(end, start)) {\n      tmp = end;\n      end = start;\n      start = tmp;\n    }\n\n    if (cursorIsBefore(head, anchor)) {\n      head = cursorMin(start, head);\n      anchor = cursorMax(anchor, end);\n    } else {\n      anchor = cursorMin(start, anchor);\n      head = cursorMax(head, end);\n      head = offsetCursor(head, 0, -1);\n\n      if (head.ch == -1 && head.line != cm.firstLine()) {\n        head = Pos(head.line - 1, lineLength(cm, head.line - 1));\n      }\n    }\n\n    return [anchor, head];\n  }\n  /**\n   * Updates the CodeMirror selection to match the provided vim selection.\n   * If no arguments are given, it uses the current vim selection state.\n   */\n\n\n  function updateCmSelection(cm, sel, mode) {\n    var vim = cm.state.vim;\n    sel = sel || vim.sel;\n    var mode = mode || vim.visualLine ? 'line' : vim.visualBlock ? 'block' : 'char';\n    var cmSel = makeCmSelection(cm, sel, mode, vim.visualMode && mode === 'char');\n    cm.setSelections(cmSel.ranges, cmSel.primary);\n    updateFakeCursor(cm);\n  }\n\n  function makeCmSelection(cm, sel, mode, exclusive) {\n    var head = copyCursor(sel.head);\n    var anchor = copyCursor(sel.anchor);\n\n    if (mode == 'char') {\n      var headOffset = !exclusive && !cursorIsBefore(sel.head, sel.anchor) ? 1 : 0;\n      var anchorOffset = cursorIsBefore(sel.head, sel.anchor) ? 1 : 0;\n      head = offsetCursor(sel.head, 0, headOffset);\n      anchor = offsetCursor(sel.anchor, 0, anchorOffset);\n      return {\n        ranges: [{\n          anchor: anchor,\n          head: head\n        }],\n        primary: 0\n      };\n    } else if (mode == 'line') {\n      if (!cursorIsBefore(sel.head, sel.anchor)) {\n        anchor.ch = 0;\n        var lastLine = cm.lastLine();\n\n        if (head.line > lastLine) {\n          head.line = lastLine;\n        }\n\n        head.ch = lineLength(cm, head.line);\n      } else {\n        head.ch = 0;\n        anchor.ch = lineLength(cm, anchor.line);\n      }\n\n      return {\n        ranges: [{\n          anchor: anchor,\n          head: head\n        }],\n        primary: 0\n      };\n    } else if (mode == 'block') {\n      var top = Math.min(anchor.line, head.line),\n          left = Math.min(anchor.ch, head.ch),\n          bottom = Math.max(anchor.line, head.line),\n          right = Math.max(anchor.ch, head.ch) + 1;\n      var height = bottom - top + 1;\n      var primary = head.line == top ? 0 : height - 1;\n      var ranges = [];\n\n      for (var i = 0; i < height; i++) {\n        ranges.push({\n          anchor: Pos(top + i, left),\n          head: Pos(top + i, right)\n        });\n      }\n\n      return {\n        ranges: ranges,\n        primary: primary\n      };\n    }\n  }\n\n  function getHead(cm) {\n    var cur = cm.getCursor('head');\n\n    if (cm.getSelection().length == 1) {\n      // Small corner case when only 1 character is selected. The \"real\"\n      // head is the left of head and anchor.\n      cur = cursorMin(cur, cm.getCursor('anchor'));\n    }\n\n    return cur;\n  }\n  /**\n   * If moveHead is set to false, the CodeMirror selection will not be\n   * touched. The caller assumes the responsibility of putting the cursor\n  * in the right place.\n   */\n\n\n  function exitVisualMode(cm, moveHead) {\n    var vim = cm.state.vim;\n\n    if (moveHead !== false) {\n      cm.setCursor(clipCursorToContent(cm, vim.sel.head));\n    }\n\n    updateLastSelection(cm, vim);\n    vim.visualMode = false;\n    vim.visualLine = false;\n    vim.visualBlock = false;\n\n    _cm_adapter[\"default\"].signal(cm, \"vim-mode-change\", {\n      mode: \"normal\"\n    });\n\n    if (vim.fakeCursor) {\n      vim.fakeCursor.clear();\n    }\n  } // Remove any trailing newlines from the selection. For\n  // example, with the caret at the start of the last word on the line,\n  // 'dw' should word, but not the newline, while 'w' should advance the\n  // caret to the first character of the next line.\n\n\n  function clipToLine(cm, curStart, curEnd) {\n    var selection = cm.getRange(curStart, curEnd); // Only clip if the selection ends with trailing newline + whitespace\n\n    if (/\\n\\s*$/.test(selection)) {\n      var lines = selection.split('\\n'); // We know this is all whitespace.\n\n      lines.pop(); // Cases:\n      // 1. Last word is an empty line - do not clip the trailing '\\n'\n      // 2. Last word is not an empty line - clip the trailing '\\n'\n\n      var line; // Find the line containing the last word, and clip all whitespace up\n      // to it.\n\n      for (var line = lines.pop(); lines.length > 0 && line && isWhiteSpaceString(line); line = lines.pop()) {\n        curEnd.line--;\n        curEnd.ch = 0;\n      } // If the last word is not an empty line, clip an additional newline\n\n\n      if (line) {\n        curEnd.line--;\n        curEnd.ch = lineLength(cm, curEnd.line);\n      } else {\n        curEnd.ch = 0;\n      }\n    }\n  } // Expand the selection to line ends.\n\n\n  function expandSelectionToLine(_cm, curStart, curEnd) {\n    curStart.ch = 0;\n    curEnd.ch = 0;\n    curEnd.line++;\n  } // function findFirstNonWhiteSpaceCharacter(text) {\n  //   if (!text) {\n  //     return 0;\n  //   }\n  //   var firstNonWS = text.search(/\\S/);\n  //   return firstNonWS == -1 ? text.length : firstNonWS;\n  // }\n\n\n  function expandWordUnderCursor(cm, inclusive, _forward, bigWord, noSymbol) {\n    var cur = getHead(cm);\n    var line = cm.getLine(cur.line);\n    var idx = cur.ch; // Seek to first word or non-whitespace character, depending on if\n    // noSymbol is true.\n\n    var test = noSymbol ? wordCharTest[0] : bigWordCharTest[0];\n\n    while (!test(line.charAt(idx))) {\n      idx++;\n\n      if (idx >= line.length) {\n        return null;\n      }\n    }\n\n    if (bigWord) {\n      test = bigWordCharTest[0];\n    } else {\n      test = wordCharTest[0];\n\n      if (!test(line.charAt(idx))) {\n        test = wordCharTest[1];\n      }\n    }\n\n    var end = idx,\n        start = idx;\n\n    while (test(line.charAt(end)) && end < line.length) {\n      end++;\n    }\n\n    while (test(line.charAt(start)) && start >= 0) {\n      start--;\n    }\n\n    start++;\n\n    if (inclusive) {\n      // If present, include all whitespace after word.\n      // Otherwise, include all whitespace before word, except indentation.\n      var wordEnd = end;\n\n      while (/\\s/.test(line.charAt(end)) && end < line.length) {\n        end++;\n      }\n\n      if (wordEnd == end) {\n        var wordStart = start;\n\n        while (/\\s/.test(line.charAt(start - 1)) && start > 0) {\n          start--;\n        }\n\n        if (!start) {\n          start = wordStart;\n        }\n      }\n    }\n\n    return {\n      start: Pos(cur.line, start),\n      end: Pos(cur.line, end)\n    };\n  }\n\n  function recordJumpPosition(cm, oldCur, newCur) {\n    if (!cursorEqual(oldCur, newCur)) {\n      vimGlobalState.jumpList.add(cm, oldCur, newCur);\n    }\n  }\n\n  function recordLastCharacterSearch(increment, args) {\n    vimGlobalState.lastCharacterSearch.increment = increment;\n    vimGlobalState.lastCharacterSearch.forward = args.forward;\n    vimGlobalState.lastCharacterSearch.selectedCharacter = args.selectedCharacter;\n  }\n\n  var symbolToMode = {\n    '(': 'bracket',\n    ')': 'bracket',\n    '{': 'bracket',\n    '}': 'bracket',\n    '[': 'section',\n    ']': 'section',\n    '*': 'comment',\n    '/': 'comment',\n    'm': 'method',\n    'M': 'method',\n    '#': 'preprocess'\n  };\n  var findSymbolModes = {\n    bracket: {\n      isComplete: function isComplete(state) {\n        if (state.nextCh === state.symb) {\n          state.depth++;\n          if (state.depth >= 1) return true;\n        } else if (state.nextCh === state.reverseSymb) {\n          state.depth--;\n        }\n\n        return false;\n      }\n    },\n    section: {\n      init: function init(state) {\n        state.curMoveThrough = true;\n        state.symb = (state.forward ? ']' : '[') === state.symb ? '{' : '}';\n      },\n      isComplete: function isComplete(state) {\n        return state.index === 0 && state.nextCh === state.symb;\n      }\n    },\n    comment: {\n      isComplete: function isComplete(state) {\n        var found = state.lastCh === '*' && state.nextCh === '/';\n        state.lastCh = state.nextCh;\n        return found;\n      }\n    },\n    // TODO: The original Vim implementation only operates on level 1 and 2.\n    // The current implementation doesn't check for code block level and\n    // therefore it operates on any levels.\n    method: {\n      init: function init(state) {\n        state.symb = state.symb === 'm' ? '{' : '}';\n        state.reverseSymb = state.symb === '{' ? '}' : '{';\n      },\n      isComplete: function isComplete(state) {\n        if (state.nextCh === state.symb) return true;\n        return false;\n      }\n    },\n    preprocess: {\n      init: function init(state) {\n        state.index = 0;\n      },\n      isComplete: function isComplete(state) {\n        if (state.nextCh === '#') {\n          var token = state.lineText.match(/#(\\w+)/)[1];\n\n          if (token === 'endif') {\n            if (state.forward && state.depth === 0) {\n              return true;\n            }\n\n            state.depth++;\n          } else if (token === 'if') {\n            if (!state.forward && state.depth === 0) {\n              return true;\n            }\n\n            state.depth--;\n          }\n\n          if (token === 'else' && state.depth === 0) return true;\n        }\n\n        return false;\n      }\n    }\n  };\n\n  function findSymbol(cm, repeat, forward, symb) {\n    var cur = copyCursor(cm.getCursor());\n    var increment = forward ? 1 : -1;\n    var endLine = forward ? cm.lineCount() : -1;\n    var curCh = cur.ch;\n    var line = cur.line;\n    var lineText = cm.getLine(line);\n    var state = {\n      lineText: lineText,\n      nextCh: lineText.charAt(curCh),\n      lastCh: null,\n      index: curCh,\n      symb: symb,\n      reverseSymb: (forward ? {\n        ')': '(',\n        '}': '{'\n      } : {\n        '(': ')',\n        '{': '}'\n      })[symb],\n      forward: forward,\n      depth: 0,\n      curMoveThrough: false\n    };\n    var mode = symbolToMode[symb];\n    if (!mode) return cur;\n    var init = findSymbolModes[mode].init;\n    var isComplete = findSymbolModes[mode].isComplete;\n\n    if (init) {\n      init(state);\n    }\n\n    while (line !== endLine && repeat) {\n      state.index += increment;\n      state.nextCh = state.lineText.charAt(state.index);\n\n      if (!state.nextCh) {\n        line += increment;\n        state.lineText = cm.getLine(line) || '';\n\n        if (increment > 0) {\n          state.index = 0;\n        } else {\n          var lineLen = state.lineText.length;\n          state.index = lineLen > 0 ? lineLen - 1 : 0;\n        }\n\n        state.nextCh = state.lineText.charAt(state.index);\n      }\n\n      if (isComplete(state)) {\n        cur.line = line;\n        cur.ch = state.index;\n        repeat--;\n      }\n    }\n\n    if (state.nextCh || state.curMoveThrough) {\n      return Pos(line, state.index);\n    }\n\n    return cur;\n  }\n  /*\n   * Returns the boundaries of the next word. If the cursor in the middle of\n   * the word, then returns the boundaries of the current word, starting at\n   * the cursor. If the cursor is at the start/end of a word, and we are going\n   * forward/backward, respectively, find the boundaries of the next word.\n   *\n   * @param {CodeMirror} cm CodeMirror object.\n   * @param {Cursor} cur The cursor position.\n   * @param {boolean} forward True to search forward. False to search\n   *     backward.\n   * @param {boolean} bigWord True if punctuation count as part of the word.\n   *     False if only [a-zA-Z0-9] characters count as part of the word.\n   * @param {boolean} emptyLineIsWord True if empty lines should be treated\n   *     as words.\n   * @return {Object{from:number, to:number, line: number}} The boundaries of\n   *     the word, or null if there are no more words.\n   */\n\n\n  function findWord(cm, cur, forward, bigWord, emptyLineIsWord) {\n    var lineNum = cur.line;\n    var pos = cur.ch;\n    var line = cm.getLine(lineNum);\n    var dir = forward ? 1 : -1;\n    var charTests = bigWord ? bigWordCharTest : wordCharTest;\n\n    if (emptyLineIsWord && line == '') {\n      lineNum += dir;\n      line = cm.getLine(lineNum);\n\n      if (!isLine(cm, lineNum)) {\n        return null;\n      }\n\n      pos = forward ? 0 : line.length;\n    }\n\n    while (true) {\n      if (emptyLineIsWord && line == '') {\n        return {\n          from: 0,\n          to: 0,\n          line: lineNum\n        };\n      }\n\n      var stop = dir > 0 ? line.length : -1;\n      var wordStart = stop,\n          wordEnd = stop; // Find bounds of next word.\n\n      while (pos != stop) {\n        var foundWord = false;\n\n        for (var i = 0; i < charTests.length && !foundWord; ++i) {\n          if (charTests[i](line.charAt(pos))) {\n            wordStart = pos; // Advance to end of word.\n\n            while (pos != stop && charTests[i](line.charAt(pos))) {\n              pos += dir;\n            }\n\n            wordEnd = pos;\n            foundWord = wordStart != wordEnd;\n\n            if (wordStart == cur.ch && lineNum == cur.line && wordEnd == wordStart + dir) {\n              // We started at the end of a word. Find the next one.\n              continue;\n            } else {\n              return {\n                from: Math.min(wordStart, wordEnd + 1),\n                to: Math.max(wordStart, wordEnd),\n                line: lineNum\n              };\n            }\n          }\n        }\n\n        if (!foundWord) {\n          pos += dir;\n        }\n      } // Advance to next/prev line.\n\n\n      lineNum += dir;\n\n      if (!isLine(cm, lineNum)) {\n        return null;\n      }\n\n      line = cm.getLine(lineNum);\n      pos = dir > 0 ? 0 : line.length;\n    }\n  }\n  /**\n   * @param {CodeMirror} cm CodeMirror object.\n   * @param {Pos} cur The position to start from.\n   * @param {int} repeat Number of words to move past.\n   * @param {boolean} forward True to search forward. False to search\n   *     backward.\n   * @param {boolean} wordEnd True to move to end of word. False to move to\n   *     beginning of word.\n   * @param {boolean} bigWord True if punctuation count as part of the word.\n   *     False if only alphabet characters count as part of the word.\n   * @return {Cursor} The position the cursor should move to.\n   */\n\n\n  function moveToWord(cm, cur, repeat, forward, wordEnd, bigWord) {\n    var curStart = copyCursor(cur);\n    var words = [];\n\n    if (forward && !wordEnd || !forward && wordEnd) {\n      repeat++;\n    } // For 'e', empty lines are not considered words, go figure.\n\n\n    var emptyLineIsWord = !(forward && wordEnd);\n\n    for (var i = 0; i < repeat; i++) {\n      var word = findWord(cm, cur, forward, bigWord, emptyLineIsWord);\n\n      if (!word) {\n        var eodCh = lineLength(cm, cm.lastLine());\n        words.push(forward ? {\n          line: cm.lastLine(),\n          from: eodCh,\n          to: eodCh\n        } : {\n          line: 0,\n          from: 0,\n          to: 0\n        });\n        break;\n      }\n\n      words.push(word);\n      cur = Pos(word.line, forward ? word.to - 1 : word.from);\n    }\n\n    var shortCircuit = words.length != repeat;\n    var firstWord = words[0];\n    var lastWord = words.pop();\n\n    if (forward && !wordEnd) {\n      // w\n      if (!shortCircuit && (firstWord.from != curStart.ch || firstWord.line != curStart.line)) {\n        // We did not start in the middle of a word. Discard the extra word at the end.\n        lastWord = words.pop();\n      }\n\n      return Pos(lastWord.line, lastWord.from);\n    } else if (forward && wordEnd) {\n      return Pos(lastWord.line, lastWord.to - 1);\n    } else if (!forward && wordEnd) {\n      // ge\n      if (!shortCircuit && (firstWord.to != curStart.ch || firstWord.line != curStart.line)) {\n        // We did not start in the middle of a word. Discard the extra word at the end.\n        lastWord = words.pop();\n      }\n\n      return Pos(lastWord.line, lastWord.to);\n    } else {\n      // b\n      return Pos(lastWord.line, lastWord.from);\n    }\n  }\n\n  function _moveToCharacter(cm, repeat, forward, character) {\n    var cur = cm.getCursor();\n    var start = cur.ch;\n    var idx;\n\n    for (var i = 0; i < repeat; i++) {\n      var line = cm.getLine(cur.line);\n      idx = charIdxInLine(start, line, character, forward, true);\n\n      if (idx == -1) {\n        return null;\n      }\n\n      start = idx;\n    }\n\n    return Pos(cm.getCursor().line, idx);\n  }\n\n  function _moveToColumn(cm, repeat) {\n    // repeat is always >= 1, so repeat - 1 always corresponds\n    // to the column we want to go to.\n    var line = cm.getCursor().line;\n    return clipCursorToContent(cm, Pos(line, repeat - 1));\n  }\n\n  function updateMark(cm, vim, markName, pos) {\n    if (!inArray(markName, validMarks)) {\n      return;\n    }\n\n    if (vim.marks[markName]) {\n      vim.marks[markName].clear();\n    }\n\n    vim.marks[markName] = cm.setBookmark(pos);\n  }\n\n  function charIdxInLine(start, line, character, forward, includeChar) {\n    // Search for char in line.\n    // motion_options: {forward, includeChar}\n    // If includeChar = true, include it too.\n    // If forward = true, search forward, else search backwards.\n    // If char is not found on this line, do nothing\n    var idx;\n\n    if (forward) {\n      idx = line.indexOf(character, start + 1);\n\n      if (idx != -1 && !includeChar) {\n        idx -= 1;\n      }\n    } else {\n      idx = line.lastIndexOf(character, start - 1);\n\n      if (idx != -1 && !includeChar) {\n        idx += 1;\n      }\n    }\n\n    return idx;\n  }\n\n  function findParagraph(cm, head, repeat, dir, inclusive) {\n    var line = head.line;\n    var min = cm.firstLine();\n    var max = cm.lastLine();\n    var start,\n        end,\n        i = line;\n\n    function isEmpty(i) {\n      return !cm.getLine(i);\n    }\n\n    function isBoundary(i, dir, any) {\n      if (any) {\n        return isEmpty(i) != isEmpty(i + dir);\n      }\n\n      return !isEmpty(i) && isEmpty(i + dir);\n    }\n\n    if (dir) {\n      while (min <= i && i <= max && repeat > 0) {\n        if (isBoundary(i, dir)) {\n          repeat--;\n        }\n\n        i += dir;\n      }\n\n      return new Pos(i, 0);\n    }\n\n    var vim = cm.state.vim;\n\n    if (vim.visualLine && isBoundary(line, 1, true)) {\n      var anchor = vim.sel.anchor;\n\n      if (isBoundary(anchor.line, -1, true)) {\n        if (!inclusive || anchor.line != line) {\n          line += 1;\n        }\n      }\n    }\n\n    var startState = isEmpty(line);\n\n    for (i = line; i <= max && repeat; i++) {\n      if (isBoundary(i, 1, true)) {\n        if (!inclusive || isEmpty(i) != startState) {\n          repeat--;\n        }\n      }\n    }\n\n    end = new Pos(i, 0); // select boundary before paragraph for the last one\n\n    if (i > max && !startState) {\n      startState = true;\n    } else {\n      inclusive = false;\n    }\n\n    for (i = line; i > min; i--) {\n      if (!inclusive || isEmpty(i) == startState || i == line) {\n        if (isBoundary(i, -1, true)) {\n          break;\n        }\n      }\n    }\n\n    start = new Pos(i, 0);\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function findSentence(cm, cur, repeat, dir) {\n    /*\n      Takes an index object\n      {\n        line: the line string,\n        ln: line number,\n        pos: index in line,\n        dir: direction of traversal (-1 or 1)\n      }\n      and modifies the line, ln, and pos members to represent the\n      next valid position or sets them to null if there are\n      no more valid positions.\n     */\n    function nextChar(cm, idx) {\n      if (idx.pos + idx.dir < 0 || idx.pos + idx.dir >= idx.line.length) {\n        idx.ln += idx.dir;\n\n        if (!isLine(cm, idx.ln)) {\n          idx.line = null;\n          idx.ln = null;\n          idx.pos = null;\n          return;\n        }\n\n        idx.line = cm.getLine(idx.ln);\n        idx.pos = idx.dir > 0 ? 0 : idx.line.length - 1;\n      } else {\n        idx.pos += idx.dir;\n      }\n    }\n    /*\n      Performs one iteration of traversal in forward direction\n      Returns an index object of the new location\n     */\n\n\n    function forward(cm, ln, pos, dir) {\n      var line = cm.getLine(ln);\n      var stop = line === \"\";\n      var curr = {\n        line: line,\n        ln: ln,\n        pos: pos,\n        dir: dir\n      };\n      var last_valid = {\n        ln: curr.ln,\n        pos: curr.pos\n      };\n      var skip_empty_lines = curr.line === \"\"; // Move one step to skip character we start on\n\n      nextChar(cm, curr);\n\n      while (curr.line !== null) {\n        last_valid.ln = curr.ln;\n        last_valid.pos = curr.pos;\n\n        if (curr.line === \"\" && !skip_empty_lines) {\n          return {\n            ln: curr.ln,\n            pos: curr.pos\n          };\n        } else if (stop && curr.line !== \"\" && !isWhiteSpaceString(curr.line[curr.pos])) {\n          return {\n            ln: curr.ln,\n            pos: curr.pos\n          };\n        } else if (isEndOfSentenceSymbol(curr.line[curr.pos]) && !stop && (curr.pos === curr.line.length - 1 || isWhiteSpaceString(curr.line[curr.pos + 1]))) {\n          stop = true;\n        }\n\n        nextChar(cm, curr);\n      }\n      /*\n        Set the position to the last non whitespace character on the last\n        valid line in the case that we reach the end of the document.\n      */\n\n\n      var line = cm.getLine(last_valid.ln);\n      last_valid.pos = 0;\n\n      for (var i = line.length - 1; i >= 0; --i) {\n        if (!isWhiteSpaceString(line[i])) {\n          last_valid.pos = i;\n          break;\n        }\n      }\n\n      return last_valid;\n    }\n    /*\n      Performs one iteration of traversal in reverse direction\n      Returns an index object of the new location\n     */\n\n\n    function reverse(cm, ln, pos, dir) {\n      var line = cm.getLine(ln);\n      var curr = {\n        line: line,\n        ln: ln,\n        pos: pos,\n        dir: dir\n      };\n      var last_valid = {\n        ln: curr.ln,\n        pos: null\n      };\n      var skip_empty_lines = curr.line === \"\"; // Move one step to skip character we start on\n\n      nextChar(cm, curr);\n\n      while (curr.line !== null) {\n        if (curr.line === \"\" && !skip_empty_lines) {\n          if (last_valid.pos !== null) {\n            return last_valid;\n          } else {\n            return {\n              ln: curr.ln,\n              pos: curr.pos\n            };\n          }\n        } else if (isEndOfSentenceSymbol(curr.line[curr.pos]) && last_valid.pos !== null && !(curr.ln === last_valid.ln && curr.pos + 1 === last_valid.pos)) {\n          return last_valid;\n        } else if (curr.line !== \"\" && !isWhiteSpaceString(curr.line[curr.pos])) {\n          skip_empty_lines = false;\n          last_valid = {\n            ln: curr.ln,\n            pos: curr.pos\n          };\n        }\n\n        nextChar(cm, curr);\n      }\n      /*\n        Set the position to the first non whitespace character on the last\n        valid line in the case that we reach the beginning of the document.\n      */\n\n\n      var line = cm.getLine(last_valid.ln);\n      last_valid.pos = 0;\n\n      for (var i = 0; i < line.length; ++i) {\n        if (!isWhiteSpaceString(line[i])) {\n          last_valid.pos = i;\n          break;\n        }\n      }\n\n      return last_valid;\n    }\n\n    var curr_index = {\n      ln: cur.line,\n      pos: cur.ch\n    };\n\n    while (repeat > 0) {\n      if (dir < 0) {\n        curr_index = reverse(cm, curr_index.ln, curr_index.pos, dir);\n      } else {\n        curr_index = forward(cm, curr_index.ln, curr_index.pos, dir);\n      }\n\n      repeat--;\n    }\n\n    return Pos(curr_index.ln, curr_index.pos);\n  } // TODO: perhaps this finagling of start and end positions belonds\n  // in codemirror/replaceRange?\n\n\n  function selectCompanionObject(cm, head, symb, inclusive) {\n    var cur = head,\n        start,\n        end;\n    var bracketRegexp = {\n      '(': /[()]/,\n      ')': /[()]/,\n      '[': /[[\\]]/,\n      ']': /[[\\]]/,\n      '{': /[{}]/,\n      '}': /[{}]/\n    }[symb];\n    var openSym = {\n      '(': '(',\n      ')': '(',\n      '[': '[',\n      ']': '[',\n      '{': '{',\n      '}': '{'\n    }[symb];\n    var curChar = cm.getLine(cur.line).charAt(cur.ch); // Due to the behavior of scanForBracket, we need to add an offset if the\n    // cursor is on a matching open bracket.\n\n    var offset = curChar === openSym ? 1 : 0;\n    start = cm.scanForBracket(Pos(cur.line, cur.ch + offset), -1, undefined, {\n      'bracketRegex': bracketRegexp\n    });\n    end = cm.scanForBracket(Pos(cur.line, cur.ch + offset), 1, undefined, {\n      'bracketRegex': bracketRegexp\n    });\n\n    if (!start || !end) {\n      return {\n        start: cur,\n        end: cur\n      };\n    }\n\n    start = start.pos;\n    end = end.pos;\n\n    if (start.line == end.line && start.ch > end.ch || start.line > end.line) {\n      var tmp = start;\n      start = end;\n      end = tmp;\n    }\n\n    if (inclusive) {\n      end.ch += 1;\n    } else {\n      start.ch += 1;\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  } // Takes in a symbol and a cursor and tries to simulate text objects that\n  // have identical opening and closing symbols\n  // TODO support across multiple lines\n\n\n  function findBeginningAndEnd(cm, head, symb, inclusive) {\n    var cur = copyCursor(head);\n    var line = cm.getLine(cur.line);\n    var chars = line.split('');\n    var start, end, i, len;\n    var firstIndex = chars.indexOf(symb); // the decision tree is to always look backwards for the beginning first,\n    // but if the cursor is in front of the first instance of the symb,\n    // then move the cursor forward\n\n    if (cur.ch < firstIndex) {\n      cur.ch = firstIndex; // Why is this line even here???\n      // cm.setCursor(cur.line, firstIndex+1);\n    } // otherwise if the cursor is currently on the closing symbol\n    else if (firstIndex < cur.ch && chars[cur.ch] == symb) {\n        end = cur.ch; // assign end to the current cursor\n\n        --cur.ch; // make sure to look backwards\n      } // if we're currently on the symbol, we've got a start\n\n\n    if (chars[cur.ch] == symb && !end) {\n      start = cur.ch + 1; // assign start to ahead of the cursor\n    } else {\n      // go backwards to find the start\n      for (i = cur.ch; i > -1 && !start; i--) {\n        if (chars[i] == symb) {\n          start = i + 1;\n        }\n      }\n    } // look forwards for the end symbol\n\n\n    if (start && !end) {\n      for (i = start, len = chars.length; i < len && !end; i++) {\n        if (chars[i] == symb) {\n          end = i;\n        }\n      }\n    } // nothing found\n\n\n    if (!start || !end) {\n      return {\n        start: cur,\n        end: cur\n      };\n    } // include the symbols\n\n\n    if (inclusive) {\n      --start;\n      ++end;\n    }\n\n    return {\n      start: Pos(cur.line, start),\n      end: Pos(cur.line, end)\n    };\n  } // Search functions\n\n\n  defineOption('pcre', true, 'boolean');\n\n  function SearchState() {}\n\n  SearchState.prototype = {\n    getQuery: function getQuery() {\n      return vimGlobalState.query;\n    },\n    setQuery: function setQuery(query) {\n      vimGlobalState.query = query;\n    },\n    getOverlay: function getOverlay() {\n      return this.searchOverlay;\n    },\n    setOverlay: function setOverlay(overlay) {\n      this.searchOverlay = overlay;\n    },\n    isReversed: function isReversed() {\n      return vimGlobalState.isReversed;\n    },\n    setReversed: function setReversed(reversed) {\n      vimGlobalState.isReversed = reversed;\n    },\n    getScrollbarAnnotate: function getScrollbarAnnotate() {\n      return this.annotate;\n    },\n    setScrollbarAnnotate: function setScrollbarAnnotate(annotate) {\n      this.annotate = annotate;\n    }\n  };\n\n  function getSearchState(cm) {\n    var vim = cm.state.vim;\n    return vim.searchState_ || (vim.searchState_ = new SearchState());\n  }\n\n  function dialog(cm, template, shortText, onClose, options) {\n    if (cm.openDialog) {\n      cm.openDialog(template, onClose, {\n        bottom: true,\n        value: options.value,\n        onKeyDown: options.onKeyDown,\n        onKeyUp: options.onKeyUp,\n        selectValueOnOpen: false\n      });\n    } else {\n      onClose(prompt(shortText, ''));\n    }\n  }\n\n  function splitBySlash(argString) {\n    return splitBySeparator(argString, '/');\n  }\n\n  function findUnescapedSlashes(argString) {\n    return findUnescapedSeparators(argString, '/');\n  }\n\n  function splitBySeparator(argString, separator) {\n    var slashes = findUnescapedSeparators(argString, separator) || [];\n    if (!slashes.length) return [];\n    var tokens = []; // in case of strings like foo/bar\n\n    if (slashes[0] !== 0) return;\n\n    for (var i = 0; i < slashes.length; i++) {\n      if (typeof slashes[i] == 'number') tokens.push(argString.substring(slashes[i] + 1, slashes[i + 1]));\n    }\n\n    return tokens;\n  }\n\n  function findUnescapedSeparators(str, separator) {\n    if (!separator) separator = '/';\n    var escapeNextChar = false;\n    var slashes = [];\n\n    for (var i = 0; i < str.length; i++) {\n      var c = str.charAt(i);\n\n      if (!escapeNextChar && c == separator) {\n        slashes.push(i);\n      }\n\n      escapeNextChar = !escapeNextChar && c == '\\\\';\n    }\n\n    return slashes;\n  } // Translates a search string from ex (vim) syntax into javascript form.\n\n\n  function translateRegex(str) {\n    // When these match, add a '\\' if unescaped or remove one if escaped.\n    var specials = '|(){'; // Remove, but never add, a '\\' for these.\n\n    var unescape = '}';\n    var escapeNextChar = false;\n    var out = [];\n\n    for (var i = -1; i < str.length; i++) {\n      var c = str.charAt(i) || '';\n      var n = str.charAt(i + 1) || '';\n      var specialComesNext = n && specials.indexOf(n) != -1;\n\n      if (escapeNextChar) {\n        if (c !== '\\\\' || !specialComesNext) {\n          out.push(c);\n        }\n\n        escapeNextChar = false;\n      } else {\n        if (c === '\\\\') {\n          escapeNextChar = true; // Treat the unescape list as special for removing, but not adding '\\'.\n\n          if (n && unescape.indexOf(n) != -1) {\n            specialComesNext = true;\n          } // Not passing this test means removing a '\\'.\n\n\n          if (!specialComesNext || n === '\\\\') {\n            out.push(c);\n          }\n        } else {\n          out.push(c);\n\n          if (specialComesNext && n !== '\\\\') {\n            out.push('\\\\');\n          }\n        }\n      }\n    }\n\n    return out.join('');\n  } // Translates the replace part of a search and replace from ex (vim) syntax into\n  // javascript form.  Similar to translateRegex, but additionally fixes back references\n  // (translates '\\[0..9]' to '$[0..9]') and follows different rules for escaping '$'.\n\n\n  var charUnescapes = {\n    '\\\\n': '\\n',\n    '\\\\r': '\\r',\n    '\\\\t': '\\t'\n  };\n\n  function translateRegexReplace(str) {\n    var escapeNextChar = false;\n    var out = [];\n\n    for (var i = -1; i < str.length; i++) {\n      var c = str.charAt(i) || '';\n      var n = str.charAt(i + 1) || '';\n\n      if (charUnescapes[c + n]) {\n        out.push(charUnescapes[c + n]);\n        i++;\n      } else if (escapeNextChar) {\n        // At any point in the loop, escapeNextChar is true if the previous\n        // character was a '\\' and was not escaped.\n        out.push(c);\n        escapeNextChar = false;\n      } else {\n        if (c === '\\\\') {\n          escapeNextChar = true;\n\n          if (isNumber(n) || n === '$') {\n            out.push('$');\n          } else if (n !== '/' && n !== '\\\\') {\n            out.push('\\\\');\n          }\n        } else {\n          if (c === '$') {\n            out.push('$');\n          }\n\n          out.push(c);\n\n          if (n === '/') {\n            out.push('\\\\');\n          }\n        }\n      }\n    }\n\n    return out.join('');\n  } // Unescape \\ and / in the replace part, for PCRE mode.\n\n\n  var unescapes = {\n    '\\\\/': '/',\n    '\\\\\\\\': '\\\\',\n    '\\\\n': '\\n',\n    '\\\\r': '\\r',\n    '\\\\t': '\\t'\n  };\n\n  function unescapeRegexReplace(str) {\n    var stream = new _cm_adapter[\"default\"].StringStream(str);\n    var output = [];\n\n    while (!stream.eol()) {\n      // Search for \\.\n      while (stream.peek() && stream.peek() != '\\\\') {\n        output.push(stream.next());\n      }\n\n      var matched = false;\n\n      for (var matcher in unescapes) {\n        if (stream.match(matcher, true)) {\n          matched = true;\n          output.push(unescapes[matcher]);\n          break;\n        }\n      }\n\n      if (!matched) {\n        // Don't change anything\n        output.push(stream.next());\n      }\n    }\n\n    return output.join('');\n  }\n  /**\n   * Extract the regular expression from the query and return a Regexp object.\n   * Returns null if the query is blank.\n   * If ignoreCase is passed in, the Regexp object will have the 'i' flag set.\n   * If smartCase is passed in, and the query contains upper case letters,\n   *   then ignoreCase is overridden, and the 'i' flag will not be set.\n   * If the query contains the /i in the flag part of the regular expression,\n   *   then both ignoreCase and smartCase are ignored, and 'i' will be passed\n   *   through to the Regex object.\n   */\n\n\n  function parseQuery(query, ignoreCase, smartCase) {\n    // First update the last search register\n    var lastSearchRegister = vimGlobalState.registerController.getRegister('/');\n    lastSearchRegister.setText(query); // Check if the query is already a regex.\n\n    if (query instanceof RegExp) {\n      return query;\n    } // First try to extract regex + flags from the input. If no flags found,\n    // extract just the regex. IE does not accept flags directly defined in\n    // the regex string in the form /regex/flags\n\n\n    var slashes = findUnescapedSlashes(query);\n    var regexPart;\n    var forceIgnoreCase;\n\n    if (!slashes.length) {\n      // Query looks like 'regexp'\n      regexPart = query;\n    } else {\n      // Query looks like 'regexp/...'\n      regexPart = query.substring(0, slashes[0]);\n      var flagsPart = query.substring(slashes[0]);\n      forceIgnoreCase = flagsPart.indexOf('i') != -1;\n    }\n\n    if (!regexPart) {\n      return null;\n    }\n\n    if (!getOption('pcre')) {\n      regexPart = translateRegex(regexPart);\n    }\n\n    if (smartCase) {\n      ignoreCase = /^[^A-Z]*$/.test(regexPart);\n    }\n\n    var regexp = new RegExp(regexPart, ignoreCase || forceIgnoreCase ? 'i' : undefined);\n    return regexp;\n  }\n\n  function showConfirm(cm, text) {\n    if (cm.openNotification) {\n      cm.openNotification('<span style=\"color: red\">' + text + '</span>', {\n        bottom: true,\n        duration: 5000\n      });\n    } else {\n      alert(text);\n    }\n  }\n\n  function makePrompt(prefix, desc) {\n    var raw = '<span style=\"font-family: monospace; white-space: pre\">' + (prefix || \"\") + '<input type=\"text\"></span>';\n    if (desc) raw += ' <span style=\"color: #888\">' + desc + '</span>';\n    return raw;\n  }\n\n  var searchPromptDesc = '(Javascript regexp)';\n\n  function showPrompt(cm, options) {\n    var shortText = (options.prefix || '') + ' ' + (options.desc || '');\n    var prompt = makePrompt(options.prefix, options.desc);\n    dialog(cm, prompt, shortText, options.onClose, options);\n  }\n\n  function regexEqual(r1, r2) {\n    if (r1 instanceof RegExp && r2 instanceof RegExp) {\n      var props = ['global', 'multiline', 'ignoreCase', 'source'];\n\n      for (var i = 0; i < props.length; i++) {\n        var prop = props[i];\n\n        if (r1[prop] !== r2[prop]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  } // Returns true if the query is valid.\n\n\n  function updateSearchQuery(cm, rawQuery, ignoreCase, smartCase) {\n    if (!rawQuery) {\n      return;\n    }\n\n    var state = getSearchState(cm);\n    var query = parseQuery(rawQuery, !!ignoreCase, !!smartCase);\n\n    if (!query) {\n      return;\n    }\n\n    highlightSearchMatches(cm, query);\n\n    if (regexEqual(query, state.getQuery())) {\n      return query;\n    }\n\n    state.setQuery(query);\n    return query;\n  }\n\n  function searchOverlay(query) {\n    if (query.source.charAt(0) == '^') {\n      var matchSol = true;\n    }\n\n    return {\n      token: function token(stream) {\n        if (matchSol && !stream.sol()) {\n          stream.skipToEnd();\n          return;\n        }\n\n        var match = stream.match(query, false);\n\n        if (match) {\n          if (match[0].length == 0) {\n            // Matched empty string, skip to next.\n            stream.next();\n            return 'searching';\n          }\n\n          if (!stream.sol()) {\n            // Backtrack 1 to match \\b\n            stream.backUp(1);\n\n            if (!query.exec(stream.next() + match[0])) {\n              stream.next();\n              return null;\n            }\n          }\n\n          stream.match(query);\n          return 'searching';\n        }\n\n        while (!stream.eol()) {\n          stream.next();\n          if (stream.match(query, false)) break;\n        }\n      },\n      query: query\n    };\n  }\n\n  function highlightSearchMatches(cm, query) {\n    var searchState = getSearchState(cm);\n    var overlay = searchState.getOverlay();\n\n    if (!overlay || query != overlay.query) {\n      if (overlay) {\n        cm.removeOverlay(overlay);\n      }\n\n      overlay = searchOverlay(query);\n      cm.addOverlay(overlay);\n\n      if (cm.showMatchesOnScrollbar) {\n        if (searchState.getScrollbarAnnotate()) {\n          searchState.getScrollbarAnnotate().clear();\n        }\n\n        searchState.setScrollbarAnnotate(cm.showMatchesOnScrollbar(query));\n      }\n\n      searchState.setOverlay(overlay);\n    }\n  }\n\n  function _findNext(cm, prev, query, repeat) {\n    if (repeat === undefined) {\n      repeat = 1;\n    }\n\n    return cm.operation(function () {\n      var pos = cm.getCursor();\n      var cursor = cm.getSearchCursor(query, pos);\n\n      for (var i = 0; i < repeat; i++) {\n        var found = cursor.find(prev);\n\n        if (i == 0 && found && cursorEqual(cursor.from(), pos)) {\n          found = cursor.find(prev);\n        }\n\n        if (!found) {\n          // SearchCursor may have returned null because it hit EOF, wrap\n          // around and try again.\n          cursor = cm.getSearchCursor(query, prev ? Pos(cm.lastLine()) : Pos(cm.firstLine(), 0));\n\n          if (!cursor.find(prev)) {\n            return;\n          }\n        }\n      }\n\n      return cursor.from();\n    });\n  }\n\n  function clearSearchHighlight(cm) {\n    var state = getSearchState(cm);\n    cm.removeOverlay(getSearchState(cm).getOverlay());\n    state.setOverlay(null);\n\n    if (state.getScrollbarAnnotate()) {\n      state.getScrollbarAnnotate().clear();\n      state.setScrollbarAnnotate(null);\n    }\n  }\n  /**\n   * Check if pos is in the specified range, INCLUSIVE.\n   * Range can be specified with 1 or 2 arguments.\n   * If the first range argument is an array, treat it as an array of line\n   * numbers. Match pos against any of the lines.\n   * If the first range argument is a number,\n   *   if there is only 1 range argument, check if pos has the same line\n   *       number\n   *   if there are 2 range arguments, then check if pos is in between the two\n   *       range arguments.\n   */\n\n\n  function isInRange(pos, start, end) {\n    if (typeof pos != 'number') {\n      // Assume it is a cursor position. Get the line number.\n      pos = pos.line;\n    }\n\n    if (start instanceof Array) {\n      return inArray(pos, start);\n    } else {\n      if (end) {\n        return pos >= start && pos <= end;\n      } else {\n        return pos == start;\n      }\n    }\n  }\n\n  function getUserVisibleLines(cm) {\n    // var scrollInfo = cm.getScrollInfo();\n    // var occludeToleranceTop = 6;\n    // var occludeToleranceBottom = 10;\n    // var from = cm.coordsChar({left:0, top: occludeToleranceTop + scrollInfo.top}, 'local');\n    // var bottomY = scrollInfo.clientHeight - occludeToleranceBottom + scrollInfo.top;\n    // var to = cm.coordsChar({left:0, top: bottomY}, 'local');\n    // return {top: from.line, bottom: to.line};\n    return cm.getUserVisibleLines();\n  }\n\n  function getMarkPos(cm, vim, markName) {\n    if (markName == '\\'') {\n      var history = cm.doc.history.done;\n      var event = history[history.length - 2];\n      return event && event.ranges && event.ranges[0].head;\n    } else if (markName == '.') {\n      if (cm.doc.history.lastModTime == 0) {\n        return; // If no changes, bail out; don't bother to copy or reverse history array.\n      } else {\n        var changeHistory = cm.doc.history.done.filter(function (el) {\n          if (el.changes !== undefined) {\n            return el;\n          }\n        });\n        changeHistory.reverse();\n        var lastEditPos = changeHistory[0].changes[0].to;\n      }\n\n      return lastEditPos;\n    }\n\n    var mark = vim.marks[markName];\n    return mark && mark.find();\n  }\n\n  var ExCommandDispatcher = function ExCommandDispatcher() {\n    this.buildCommandMap_();\n  };\n\n  ExCommandDispatcher.prototype = {\n    processCommand: function processCommand(cm, input, opt_params) {\n      var that = this;\n      cm.operation(function () {\n        cm.curOp.isVimOp = true;\n\n        that._processCommand(cm, input, opt_params);\n      });\n    },\n    _processCommand: function _processCommand(cm, input, opt_params) {\n      var vim = cm.state.vim;\n      var commandHistoryRegister = vimGlobalState.registerController.getRegister(':');\n      var previousCommand = commandHistoryRegister.toString();\n\n      if (vim.visualMode) {\n        exitVisualMode(cm);\n      }\n\n      var inputStream = new _cm_adapter[\"default\"].StringStream(input); // update \": with the latest command whether valid or invalid\n\n      commandHistoryRegister.setText(input);\n      var params = opt_params || {};\n      params.input = input;\n\n      try {\n        this.parseInput_(cm, inputStream, params);\n      } catch (e) {\n        showConfirm(cm, e);\n        throw e;\n      }\n\n      var command;\n      var commandName;\n\n      if (!params.commandName) {\n        // If only a line range is defined, move to the line.\n        if (params.line !== undefined) {\n          commandName = 'move';\n        }\n      } else {\n        command = this.matchCommand_(params.commandName);\n\n        if (command) {\n          commandName = command.name;\n\n          if (command.excludeFromCommandHistory) {\n            commandHistoryRegister.setText(previousCommand);\n          }\n\n          this.parseCommandArgs_(inputStream, params, command);\n\n          if (command.type == 'exToKey') {\n            // Handle Ex to Key mapping.\n            for (var i = 0; i < command.toKeys.length; i++) {\n              _cm_adapter[\"default\"].Vim.handleKey(cm, command.toKeys[i], 'mapping');\n            }\n\n            return;\n          } else if (command.type == 'exToEx') {\n            // Handle Ex to Ex mapping.\n            this.processCommand(cm, command.toInput);\n            return;\n          }\n        }\n      }\n\n      if (!commandName) {\n        showConfirm(cm, 'Not an editor command \":' + input + '\"');\n        return;\n      }\n\n      try {\n        exCommands[commandName](cm, params); // Possibly asynchronous commands (e.g. substitute, which might have a\n        // user confirmation), are responsible for calling the callback when\n        // done. All others have it taken care of for them here.\n\n        if ((!command || !command.possiblyAsync) && params.callback) {\n          params.callback();\n        }\n      } catch (e) {\n        showConfirm(cm, e);\n        throw e;\n      }\n    },\n    parseInput_: function parseInput_(cm, inputStream, result) {\n      inputStream.eatWhile(':'); // Parse range.\n\n      if (inputStream.eat('%')) {\n        result.line = cm.firstLine();\n        result.lineEnd = cm.lastLine();\n      } else {\n        result.line = this.parseLineSpec_(cm, inputStream);\n\n        if (result.line !== undefined && inputStream.eat(',')) {\n          result.lineEnd = this.parseLineSpec_(cm, inputStream);\n        }\n      } // Parse command name.\n\n\n      var commandMatch = inputStream.match(/^(\\w+)/);\n\n      if (commandMatch) {\n        result.commandName = commandMatch[1];\n      } else {\n        result.commandName = inputStream.match(/.*/)[0];\n      }\n\n      return result;\n    },\n    parseLineSpec_: function parseLineSpec_(cm, inputStream) {\n      var numberMatch = inputStream.match(/^(\\d+)/);\n\n      if (numberMatch) {\n        // Absolute line number plus offset (N+M or N-M) is probably a typo,\n        // not something the user actually wanted. (NB: vim does allow this.)\n        return parseInt(numberMatch[1], 10) - 1;\n      }\n\n      switch (inputStream.next()) {\n        case '.':\n          return this.parseLineSpecOffset_(inputStream, cm.getCursor().line);\n\n        case '$':\n          return this.parseLineSpecOffset_(inputStream, cm.lastLine());\n\n        case '\\'':\n          var markName = inputStream.next();\n          var markPos = getMarkPos(cm, cm.state.vim, markName);\n          if (!markPos) throw new Error('Mark not set');\n          return this.parseLineSpecOffset_(inputStream, markPos.line);\n\n        case '-':\n        case '+':\n          inputStream.backUp(1); // Offset is relative to current line if not otherwise specified.\n\n          return this.parseLineSpecOffset_(inputStream, cm.getCursor().line);\n\n        default:\n          inputStream.backUp(1);\n          return undefined;\n      }\n    },\n    parseLineSpecOffset_: function parseLineSpecOffset_(inputStream, line) {\n      var offsetMatch = inputStream.match(/^([+-])?(\\d+)/);\n\n      if (offsetMatch) {\n        var offset = parseInt(offsetMatch[2], 10);\n\n        if (offsetMatch[1] == \"-\") {\n          line -= offset;\n        } else {\n          line += offset;\n        }\n      }\n\n      return line;\n    },\n    parseCommandArgs_: function parseCommandArgs_(inputStream, params, command) {\n      if (inputStream.eol()) {\n        return;\n      }\n\n      params.argString = inputStream.match(/.*/)[0]; // Parse command-line arguments\n\n      var delim = command.argDelimiter || /\\s+/;\n      var args = trim(params.argString).split(delim);\n\n      if (args.length && args[0]) {\n        params.args = args;\n      }\n    },\n    matchCommand_: function matchCommand_(commandName) {\n      // Return the command in the command map that matches the shortest\n      // prefix of the passed in command name. The match is guaranteed to be\n      // unambiguous if the defaultExCommandMap's shortNames are set up\n      // correctly. (see @code{defaultExCommandMap}).\n      for (var i = commandName.length; i > 0; i--) {\n        var prefix = commandName.substring(0, i);\n\n        if (this.commandMap_[prefix]) {\n          var command = this.commandMap_[prefix];\n\n          if (command.name.indexOf(commandName) === 0) {\n            return command;\n          }\n        }\n      }\n\n      return null;\n    },\n    buildCommandMap_: function buildCommandMap_() {\n      this.commandMap_ = {};\n\n      for (var i = 0; i < defaultExCommandMap.length; i++) {\n        var command = defaultExCommandMap[i];\n        var key = command.shortName || command.name;\n        this.commandMap_[key] = command;\n      }\n    },\n    map: function map(lhs, rhs, ctx) {\n      if (lhs != ':' && lhs.charAt(0) == ':') {\n        if (ctx) {\n          throw Error('Mode not supported for ex mappings');\n        }\n\n        var commandName = lhs.substring(1);\n\n        if (rhs != ':' && rhs.charAt(0) == ':') {\n          // Ex to Ex mapping\n          this.commandMap_[commandName] = {\n            name: commandName,\n            type: 'exToEx',\n            toInput: rhs.substring(1),\n            user: true\n          };\n        } else {\n          // Ex to key mapping\n          this.commandMap_[commandName] = {\n            name: commandName,\n            type: 'exToKey',\n            toKeys: rhs,\n            user: true\n          };\n        }\n      } else {\n        if (rhs != ':' && rhs.charAt(0) == ':') {\n          // Key to Ex mapping.\n          var mapping = {\n            keys: lhs,\n            type: 'keyToEx',\n            exArgs: {\n              input: rhs.substring(1)\n            }\n          };\n\n          if (ctx) {\n            mapping.context = ctx;\n          }\n\n          defaultKeymap.unshift(mapping);\n        } else {\n          // Key to key mapping\n          var mapping = {\n            keys: lhs,\n            type: 'keyToKey',\n            toKeys: rhs\n          };\n\n          if (ctx) {\n            mapping.context = ctx;\n          }\n\n          defaultKeymap.unshift(mapping);\n        }\n      }\n    },\n    unmap: function unmap(lhs, ctx) {\n      if (lhs != ':' && lhs.charAt(0) == ':') {\n        // Ex to Ex or Ex to key mapping\n        if (ctx) {\n          throw Error('Mode not supported for ex mappings');\n        }\n\n        var commandName = lhs.substring(1);\n\n        if (this.commandMap_[commandName] && this.commandMap_[commandName].user) {\n          delete this.commandMap_[commandName];\n          return;\n        }\n      } else {\n        // Key to Ex or key to key mapping\n        var keys = lhs;\n\n        for (var i = 0; i < defaultKeymap.length; i++) {\n          if (keys == defaultKeymap[i].keys && defaultKeymap[i].context === ctx) {\n            defaultKeymap.splice(i, 1);\n            return;\n          }\n        }\n      }\n\n      throw Error('No such mapping.');\n    }\n  };\n  var exCommands = {\n    colorscheme: function colorscheme(cm, params) {\n      if (!params.args || params.args.length < 1) {\n        showConfirm(cm, cm.getOption('theme'));\n        return;\n      }\n\n      cm.setOption('theme', params.args[0]);\n    },\n    map: function map(cm, params, ctx) {\n      var mapArgs = params.args;\n\n      if (!mapArgs || mapArgs.length < 2) {\n        if (cm) {\n          showConfirm(cm, 'Invalid mapping: ' + params.input);\n        }\n\n        return;\n      }\n\n      exCommandDispatcher.map(mapArgs[0], mapArgs[1], ctx);\n    },\n    imap: function imap(cm, params) {\n      this.map(cm, params, 'insert');\n    },\n    nmap: function nmap(cm, params) {\n      this.map(cm, params, 'normal');\n    },\n    vmap: function vmap(cm, params) {\n      this.map(cm, params, 'visual');\n    },\n    unmap: function unmap(cm, params, ctx) {\n      var mapArgs = params.args;\n\n      if (!mapArgs || mapArgs.length < 1) {\n        if (cm) {\n          showConfirm(cm, 'No such mapping: ' + params.input);\n        }\n\n        return;\n      }\n\n      exCommandDispatcher.unmap(mapArgs[0], ctx);\n    },\n    move: function move(cm, params) {\n      commandDispatcher.processCommand(cm, cm.state.vim, {\n        type: 'motion',\n        motion: 'moveToLineOrEdgeOfDocument',\n        motionArgs: {\n          forward: false,\n          explicitRepeat: true,\n          linewise: true\n        },\n        repeatOverride: params.line + 1\n      });\n    },\n    set: function set(cm, params) {\n      var setArgs = params.args; // Options passed through to the setOption/getOption calls. May be passed in by the\n      // local/global versions of the set command\n\n      var setCfg = params.setCfg || {};\n\n      if (!setArgs || setArgs.length < 1) {\n        if (cm) {\n          showConfirm(cm, 'Invalid mapping: ' + params.input);\n        }\n\n        return;\n      }\n\n      var expr = setArgs[0].split('=');\n      var optionName = expr[0];\n      var value = expr[1];\n      var forceGet = false;\n\n      if (optionName.charAt(optionName.length - 1) == '?') {\n        // If post-fixed with ?, then the set is actually a get.\n        if (value) {\n          throw Error('Trailing characters: ' + params.argString);\n        }\n\n        optionName = optionName.substring(0, optionName.length - 1);\n        forceGet = true;\n      }\n\n      if (value === undefined && optionName.substring(0, 2) == 'no') {\n        // To set boolean options to false, the option name is prefixed with\n        // 'no'.\n        optionName = optionName.substring(2);\n        value = false;\n      }\n\n      var optionIsBoolean = options[optionName] && options[optionName].type == 'boolean';\n\n      if (optionIsBoolean && value == undefined) {\n        // Calling set with a boolean option sets it to true.\n        value = true;\n      } // If no value is provided, then we assume this is a get.\n\n\n      if (!optionIsBoolean && value === undefined || forceGet) {\n        var oldValue = getOption(optionName, cm, setCfg);\n\n        if (oldValue instanceof Error) {\n          showConfirm(cm, oldValue.message);\n        } else if (oldValue === true || oldValue === false) {\n          showConfirm(cm, ' ' + (oldValue ? '' : 'no') + optionName);\n        } else {\n          showConfirm(cm, '  ' + optionName + '=' + oldValue);\n        }\n      } else {\n        var setOptionReturn = setOption(optionName, value, cm, setCfg);\n\n        if (setOptionReturn instanceof Error) {\n          showConfirm(cm, setOptionReturn.message);\n        }\n      }\n    },\n    setlocal: function setlocal(cm, params) {\n      // setCfg is passed through to setOption\n      params.setCfg = {\n        scope: 'local'\n      };\n      this.set(cm, params);\n    },\n    setglobal: function setglobal(cm, params) {\n      // setCfg is passed through to setOption\n      params.setCfg = {\n        scope: 'global'\n      };\n      this.set(cm, params);\n    },\n    registers: function registers(cm, params) {\n      var regArgs = params.args;\n      var registers = vimGlobalState.registerController.registers;\n      var regInfo = '----------Registers----------<br><br>';\n\n      if (!regArgs) {\n        for (var registerName in registers) {\n          var text = registers[registerName].toString();\n\n          if (text.length) {\n            regInfo += '\"' + registerName + '    ' + text + '<br>';\n          }\n        }\n      } else {\n        var registerName;\n        regArgs = regArgs.join('');\n\n        for (var i = 0; i < regArgs.length; i++) {\n          registerName = regArgs.charAt(i);\n\n          if (!vimGlobalState.registerController.isValidRegister(registerName)) {\n            continue;\n          }\n\n          var register = registers[registerName] || new Register();\n          regInfo += '\"' + registerName + '    ' + register.toString() + '<br>';\n        }\n      }\n\n      showConfirm(cm, regInfo);\n    },\n    sort: function sort(cm, params) {\n      var reverse, ignoreCase, unique, number, pattern;\n\n      function parseArgs() {\n        if (params.argString) {\n          var args = new _cm_adapter[\"default\"].StringStream(params.argString);\n\n          if (args.eat('!')) {\n            reverse = true;\n          }\n\n          if (args.eol()) {\n            return;\n          }\n\n          if (!args.eatSpace()) {\n            return 'Invalid arguments';\n          }\n\n          var opts = args.match(/([dinuox]+)?\\s*(\\/.+\\/)?\\s*/);\n\n          if (!opts && !args.eol()) {\n            return 'Invalid arguments';\n          }\n\n          if (opts[1]) {\n            ignoreCase = opts[1].indexOf('i') != -1;\n            unique = opts[1].indexOf('u') != -1;\n            var decimal = opts[1].indexOf('d') != -1 || opts[1].indexOf('n') != -1 && 1;\n            var hex = opts[1].indexOf('x') != -1 && 1;\n            var octal = opts[1].indexOf('o') != -1 && 1;\n\n            if (decimal + hex + octal > 1) {\n              return 'Invalid arguments';\n            }\n\n            number = decimal && 'decimal' || hex && 'hex' || octal && 'octal';\n          }\n\n          if (opts[2]) {\n            pattern = new RegExp(opts[2].substr(1, opts[2].length - 2), ignoreCase ? 'i' : '');\n          }\n        }\n      }\n\n      var err = parseArgs();\n\n      if (err) {\n        showConfirm(cm, err + ': ' + params.argString);\n        return;\n      }\n\n      var lineStart = params.line || cm.firstLine();\n      var lineEnd = params.lineEnd || params.line || cm.lastLine();\n\n      if (lineStart == lineEnd) {\n        return;\n      }\n\n      var curStart = Pos(lineStart, 0);\n      var curEnd = Pos(lineEnd, lineLength(cm, lineEnd));\n      var text = cm.getRange(curStart, curEnd).split('\\n');\n      var numberRegex = pattern ? pattern : number == 'decimal' ? /(-?)([\\d]+)/ : number == 'hex' ? /(-?)(?:0x)?([0-9a-f]+)/i : number == 'octal' ? /([0-7]+)/ : null;\n      var radix = number == 'decimal' ? 10 : number == 'hex' ? 16 : number == 'octal' ? 8 : null;\n      var numPart = [],\n          textPart = [];\n\n      if (number || pattern) {\n        for (var i = 0; i < text.length; i++) {\n          var matchPart = pattern ? text[i].match(pattern) : null;\n\n          if (matchPart && matchPart[0] != '') {\n            numPart.push(matchPart);\n          } else if (!pattern && numberRegex.exec(text[i])) {\n            numPart.push(text[i]);\n          } else {\n            textPart.push(text[i]);\n          }\n        }\n      } else {\n        textPart = text;\n      }\n\n      function compareFn(a, b) {\n        if (reverse) {\n          var tmp;\n          tmp = a;\n          a = b;\n          b = tmp;\n        }\n\n        if (ignoreCase) {\n          a = a.toLowerCase();\n          b = b.toLowerCase();\n        }\n\n        var anum = number && numberRegex.exec(a);\n        var bnum = number && numberRegex.exec(b);\n\n        if (!anum) {\n          return a < b ? -1 : 1;\n        }\n\n        anum = parseInt((anum[1] + anum[2]).toLowerCase(), radix);\n        bnum = parseInt((bnum[1] + bnum[2]).toLowerCase(), radix);\n        return anum - bnum;\n      }\n\n      function comparePatternFn(a, b) {\n        if (reverse) {\n          var tmp;\n          tmp = a;\n          a = b;\n          b = tmp;\n        }\n\n        if (ignoreCase) {\n          a[0] = a[0].toLowerCase();\n          b[0] = b[0].toLowerCase();\n        }\n\n        return a[0] < b[0] ? -1 : 1;\n      }\n\n      numPart.sort(pattern ? comparePatternFn : compareFn);\n\n      if (pattern) {\n        for (var i = 0; i < numPart.length; i++) {\n          numPart[i] = numPart[i].input;\n        }\n      } else if (!number) {\n        textPart.sort(compareFn);\n      }\n\n      text = !reverse ? textPart.concat(numPart) : numPart.concat(textPart);\n\n      if (unique) {\n        // Remove duplicate lines\n        var textOld = text;\n        var lastLine;\n        text = [];\n\n        for (var i = 0; i < textOld.length; i++) {\n          if (textOld[i] != lastLine) {\n            text.push(textOld[i]);\n          }\n\n          lastLine = textOld[i];\n        }\n      }\n\n      cm.replaceRange(text.join('\\n'), curStart, curEnd);\n    },\n    global: function global(cm, params) {\n      // a global command is of the form\n      // :[range]g/pattern/[cmd]\n      // argString holds the string /pattern/[cmd]\n      var argString = params.argString;\n\n      if (!argString) {\n        showConfirm(cm, 'Regular Expression missing from global');\n        return;\n      } // range is specified here\n\n\n      var lineStart = params.line !== undefined ? params.line : cm.firstLine();\n      var lineEnd = params.lineEnd || params.line || cm.lastLine(); // get the tokens from argString\n\n      var tokens = splitBySlash(argString);\n      var regexPart = argString,\n          cmd;\n\n      if (tokens.length) {\n        regexPart = tokens[0];\n        cmd = tokens.slice(1, tokens.length).join('/');\n      }\n\n      if (regexPart) {\n        // If regex part is empty, then use the previous query. Otherwise\n        // use the regex part as the new query.\n        try {\n          updateSearchQuery(cm, regexPart, true\n          /** ignoreCase */\n          , true\n          /** smartCase */\n          );\n        } catch (e) {\n          showConfirm(cm, 'Invalid regex: ' + regexPart);\n          return;\n        }\n      } // now that we have the regexPart, search for regex matches in the\n      // specified range of lines\n\n\n      var query = getSearchState(cm).getQuery();\n      var matchedLines = [],\n          content = '';\n\n      for (var i = lineStart; i <= lineEnd; i++) {\n        var matched = query.test(cm.getLine(i));\n\n        if (matched) {\n          matchedLines.push(i + 1);\n          content += cm.getLine(i) + '<br>';\n        }\n      } // if there is no [cmd], just display the list of matched lines\n\n\n      if (!cmd) {\n        showConfirm(cm, content);\n        return;\n      }\n\n      var index = 0;\n\n      var nextCommand = function nextCommand() {\n        if (index < matchedLines.length) {\n          var command = matchedLines[index] + cmd;\n          exCommandDispatcher.processCommand(cm, command, {\n            callback: nextCommand\n          });\n        }\n\n        index++;\n      };\n\n      nextCommand();\n    },\n    substitute: function substitute(cm, params) {\n      if (!cm.getSearchCursor) {\n        throw new Error('Search feature not available. Requires searchcursor.js or ' + 'any other getSearchCursor implementation.');\n      }\n\n      var argString = params.argString;\n      var tokens = argString ? splitBySeparator(argString, argString[0]) : [];\n      var regexPart,\n          replacePart = '',\n          trailing,\n          flagsPart,\n          count;\n      var confirm = false; // Whether to confirm each replace.\n\n      var global = false; // True to replace all instances on a line, false to replace only 1.\n\n      if (tokens.length) {\n        regexPart = tokens[0];\n        replacePart = tokens[1];\n\n        if (regexPart && regexPart[regexPart.length - 1] === '$') {\n          regexPart = regexPart.slice(0, regexPart.length - 1) + '\\\\n';\n          replacePart = replacePart ? replacePart + '\\n' : '\\n';\n        }\n\n        if (replacePart !== undefined) {\n          if (getOption('pcre')) {\n            replacePart = unescapeRegexReplace(replacePart);\n          } else {\n            replacePart = translateRegexReplace(replacePart);\n          }\n\n          vimGlobalState.lastSubstituteReplacePart = replacePart;\n        }\n\n        trailing = tokens[2] ? tokens[2].split(' ') : [];\n      } else {\n        // either the argString is empty or its of the form ' hello/world'\n        // actually splitBySlash returns a list of tokens\n        // only if the string starts with a '/'\n        if (argString && argString.length) {\n          showConfirm(cm, 'Substitutions should be of the form ' + ':s/pattern/replace/');\n          return;\n        }\n      } // After the 3rd slash, we can have flags followed by a space followed\n      // by count.\n\n\n      if (trailing) {\n        flagsPart = trailing[0];\n        count = parseInt(trailing[1]);\n\n        if (flagsPart) {\n          if (flagsPart.indexOf('c') != -1) {\n            confirm = true;\n            flagsPart.replace('c', '');\n          }\n\n          if (flagsPart.indexOf('g') != -1) {\n            global = true;\n            flagsPart.replace('g', '');\n          }\n\n          regexPart = regexPart.replace(/\\//g, \"\\\\/\") + '/' + flagsPart;\n        }\n      }\n\n      if (regexPart) {\n        // If regex part is empty, then use the previous query. Otherwise use\n        // the regex part as the new query.\n        try {\n          updateSearchQuery(cm, regexPart, true\n          /** ignoreCase */\n          , true\n          /** smartCase */\n          );\n        } catch (e) {\n          showConfirm(cm, 'Invalid regex: ' + regexPart);\n          return;\n        }\n      }\n\n      replacePart = replacePart || vimGlobalState.lastSubstituteReplacePart;\n\n      if (replacePart === undefined) {\n        showConfirm(cm, 'No previous substitute regular expression');\n        return;\n      }\n\n      var state = getSearchState(cm);\n      var query = state.getQuery();\n      var lineStart = params.line !== undefined ? params.line : cm.getCursor().line;\n      var lineEnd = params.lineEnd || lineStart;\n\n      if (lineStart == cm.firstLine() && lineEnd == cm.lastLine()) {\n        lineEnd = Infinity;\n      }\n\n      if (count) {\n        lineStart = lineEnd;\n        lineEnd = lineStart + count - 1;\n      }\n\n      var startPos = clipCursorToContent(cm, Pos(lineStart, 0));\n      var cursor = cm.getSearchCursor(query, startPos);\n      doReplace(cm, confirm, global, lineStart, lineEnd, cursor, query, replacePart, params.callback);\n    },\n    redo: _cm_adapter[\"default\"].commands.redo,\n    undo: _cm_adapter[\"default\"].commands.undo,\n    write: function write(cm) {\n      if (_cm_adapter[\"default\"].commands.save) {\n        // If a save command is defined, call it.\n        _cm_adapter[\"default\"].commands.save(cm);\n      } else if (cm.save) {\n        // Saves to text area if no save command is defined and cm.save() is available.\n        cm.save();\n      }\n    },\n    nohlsearch: function nohlsearch(cm) {\n      clearSearchHighlight(cm);\n    },\n    yank: function yank(cm) {\n      var cur = copyCursor(cm.getCursor());\n      var line = cur.line;\n      var lineText = cm.getLine(line);\n      vimGlobalState.registerController.pushText('0', 'yank', lineText, true, true);\n    },\n    delmarks: function delmarks(cm, params) {\n      if (!params.argString || !trim(params.argString)) {\n        showConfirm(cm, 'Argument required');\n        return;\n      }\n\n      var state = cm.state.vim;\n      var stream = new _cm_adapter[\"default\"].StringStream(trim(params.argString));\n\n      while (!stream.eol()) {\n        stream.eatSpace(); // Record the streams position at the beginning of the loop for use\n        // in error messages.\n\n        var count = stream.pos;\n\n        if (!stream.match(/[a-zA-Z]/, false)) {\n          showConfirm(cm, 'Invalid argument: ' + params.argString.substring(count));\n          return;\n        }\n\n        var sym = stream.next(); // Check if this symbol is part of a range\n\n        if (stream.match('-', true)) {\n          // This symbol is part of a range.\n          // The range must terminate at an alphabetic character.\n          if (!stream.match(/[a-zA-Z]/, false)) {\n            showConfirm(cm, 'Invalid argument: ' + params.argString.substring(count));\n            return;\n          }\n\n          var startMark = sym;\n          var finishMark = stream.next(); // The range must terminate at an alphabetic character which\n          // shares the same case as the start of the range.\n\n          if (isLowerCase(startMark) && isLowerCase(finishMark) || isUpperCase(startMark) && isUpperCase(finishMark)) {\n            var start = startMark.charCodeAt(0);\n            var finish = finishMark.charCodeAt(0);\n\n            if (start >= finish) {\n              showConfirm(cm, 'Invalid argument: ' + params.argString.substring(count));\n              return;\n            } // Because marks are always ASCII values, and we have\n            // determined that they are the same case, we can use\n            // their char codes to iterate through the defined range.\n\n\n            for (var j = 0; j <= finish - start; j++) {\n              var mark = String.fromCharCode(start + j);\n              delete state.marks[mark];\n            }\n          } else {\n            showConfirm(cm, 'Invalid argument: ' + startMark + '-');\n            return;\n          }\n        } else {\n          // This symbol is a valid mark, and is not part of a range.\n          delete state.marks[sym];\n        }\n      }\n    }\n  };\n  var exCommandDispatcher = new ExCommandDispatcher();\n  /**\n  * @param {CodeMirror} cm CodeMirror instance we are in.\n  * @param {boolean} confirm Whether to confirm each replace.\n  * @param {Cursor} lineStart Line to start replacing from.\n  * @param {Cursor} lineEnd Line to stop replacing at.\n  * @param {RegExp} query Query for performing matches with.\n  * @param {string} replaceWith Text to replace matches with. May contain $1,\n  *     $2, etc for replacing captured groups using Javascript replace.\n  * @param {function()} callback A callback for when the replace is done.\n  */\n\n  function doReplace(cm, confirm, global, lineStart, lineEnd, searchCursor, query, replaceWith, callback) {\n    // Set up all the functions.\n    cm.state.vim.exMode = true;\n    var done = false;\n    var lastPos = searchCursor.from();\n\n    function replaceAll() {\n      var matches = searchCursor.getMatches();\n      var matchesLength = matches.length;\n      cm.operation(function (matches, matchesLength) {\n        for (var i = matchesLength - 1; i >= 0; i--) {\n          replace();\n          replaceAllNext(matches, i);\n        }\n\n        done = true;\n        stop();\n      }.bind(this, matches, matchesLength));\n    }\n\n    function replace() {\n      var text = cm.getRange(searchCursor.from(), searchCursor.to());\n      var newText = text.replace(query, replaceWith);\n      searchCursor.replace(newText);\n    }\n\n    function replaceAllNext(matches, index) {\n      var hasNext = searchCursor.jumpTo(index) && isInRange(searchCursor.from(), lineStart, lineEnd);\n      var match = matches.pop();\n\n      if (hasNext && !global && lastPos && searchCursor.from().line == lastPos.line) {\n        // Skip over multiple occurrences on the same line when 'global' is\n        // not true.\n        return;\n      }\n\n      cm.scrollIntoView(searchCursor.from(), 30);\n      lastPos = searchCursor.from();\n      done = false;\n      return;\n    }\n\n    function next() {\n      // The below only loops to skip over multiple occurrences on the same\n      // line when 'global' is not true.\n      while (searchCursor.findNext() && isInRange(searchCursor.from(), lineStart, lineEnd)) {\n        if (!global && lastPos && searchCursor.from().line == lastPos.line) {\n          continue;\n        }\n\n        cm.scrollIntoView(searchCursor.from(), 30);\n        cm.setSelection(searchCursor.from(), searchCursor.to());\n        lastPos = searchCursor.from();\n        done = false;\n        return;\n      }\n\n      done = true;\n    }\n\n    function stop(close) {\n      if (close) {\n        close();\n      }\n\n      cm.focus();\n\n      if (lastPos) {\n        cm.setCursor(lastPos);\n        var vim = cm.state.vim;\n        vim.exMode = false;\n        vim.lastHPos = vim.lastHSPos = lastPos.ch;\n      }\n\n      if (callback) {\n        callback();\n      }\n    }\n\n    function onPromptKeyDown(e, _value, close) {\n      // Swallow all keys.\n      _cm_adapter[\"default\"].e_stop(e);\n\n      var keyName = _cm_adapter[\"default\"].keyName(e);\n\n      switch (keyName) {\n        case 'y':\n        case 'Y':\n          replace();\n          next();\n          break;\n\n        case 'n':\n        case 'N':\n          next();\n          break;\n\n        case 'a':\n        case 'A':\n          // replaceAll contains a call to close of its own. We don't want it\n          // to fire too early or multiple times.\n          var savedCallback = callback;\n          callback = undefined;\n          cm.operation(replaceAll);\n          callback = savedCallback;\n          break;\n\n        case 'l':\n        case 'L':\n          replace();\n        // fall through and exit.\n\n        case 'q':\n        case 'Q':\n        case 'Esc':\n        case 'Ctrl-C':\n        case 'Ctrl-[':\n          stop(close);\n          break;\n      }\n\n      if (done) {\n        stop(close);\n      }\n\n      return true;\n    } // Actually do replace.\n\n\n    next();\n\n    if (done) {\n      showConfirm(cm, 'No matches for ' + query.source);\n      return;\n    }\n\n    if (!confirm) {\n      replaceAll();\n\n      if (callback) {\n        callback();\n      }\n\n      return;\n    }\n\n    showPrompt(cm, {\n      prefix: 'replace with <strong>' + replaceWith + '</strong> (y/n/a/q/l)',\n      onKeyDown: onPromptKeyDown\n    });\n  }\n\n  _cm_adapter[\"default\"].keyMap.vim = {\n    attach: attachVimMap,\n    detach: detachVimMap,\n    call: cmKey\n  };\n\n  function exitInsertMode(cm) {\n    var vim = cm.state.vim;\n    var macroModeState = vimGlobalState.macroModeState;\n    var insertModeChangeRegister = vimGlobalState.registerController.getRegister('.');\n    var isPlaying = macroModeState.isPlaying;\n    var lastChange = macroModeState.lastInsertModeChanges; // In case of visual block, the insertModeChanges are not saved as a\n    // single word, so we convert them to a single word\n    // so as to update the \". register as expected in real vim.\n\n    var text = [];\n\n    if (!isPlaying) {\n      var selLength = lastChange.inVisualBlock && vim.lastSelection ? vim.lastSelection.visualBlock.height : 1;\n      var changes = lastChange.changes;\n      var text = [];\n      var i = 0; // In case of multiple selections in blockwise visual,\n      // the inserted text, for example: 'f<Backspace>oo', is stored as\n      // 'f', 'f', InsertModeKey 'o', 'o', 'o', 'o'. (if you have a block with 2 lines).\n      // We push the contents of the changes array as per the following:\n      // 1. In case of InsertModeKey, just increment by 1.\n      // 2. In case of a character, jump by selLength (2 in the example).\n\n      while (i < changes.length) {\n        // This loop will convert 'ff<bs>oooo' to 'f<bs>oo'.\n        text.push(changes[i]);\n\n        if (changes[i] instanceof InsertModeKey) {\n          i++;\n        } else {\n          i += selLength;\n        }\n      }\n\n      lastChange.changes = text;\n      cm.off('change', onChange);\n\n      _cm_adapter[\"default\"].off(cm.getInputField(), 'keydown', onKeyEventTargetKeyDown);\n    }\n\n    if (!isPlaying && vim.insertModeRepeat > 1) {\n      // Perform insert mode repeat for commands like 3,a and 3,o.\n      _repeatLastEdit(cm, vim, vim.insertModeRepeat - 1, true\n      /** repeatForInsert */\n      );\n\n      vim.lastEditInputState.repeatOverride = vim.insertModeRepeat;\n    }\n\n    delete vim.insertModeRepeat;\n    vim.insertMode = false;\n    cm.setCursor(cm.getCursor().line, cm.getCursor().ch - 1);\n    cm.setOption('keyMap', 'vim');\n    cm.setOption('disableInput', true);\n    cm.toggleOverwrite(false); // exit replace mode if we were in it.\n    // update the \". register before exiting insert mode\n\n    insertModeChangeRegister.setText(lastChange.changes.join(''));\n\n    _cm_adapter[\"default\"].signal(cm, \"vim-mode-change\", {\n      mode: \"normal\"\n    });\n\n    if (macroModeState.isRecording) {\n      logInsertModeChange(macroModeState);\n    }\n\n    cm.enterVimMode();\n  }\n\n  function _mapCommand(command) {\n    defaultKeymap.unshift(command);\n  }\n\n  function mapCommand(keys, type, name, args, extra) {\n    var command = {\n      keys: keys,\n      type: type\n    };\n    command[type] = name;\n    command[type + \"Args\"] = args;\n\n    for (var key in extra) {\n      command[key] = extra[key];\n    }\n\n    _mapCommand(command);\n  } // The timeout in milliseconds for the two-character ESC keymap should be\n  // adjusted according to your typing speed to prevent false positives.\n\n\n  defineOption('insertModeEscKeysTimeout', 200, 'number');\n  _cm_adapter[\"default\"].keyMap['vim-insert'] = {\n    // TODO: override navigation keys so that Esc will cancel automatic\n    // indentation from o, O, i_<CR>\n    fallthrough: ['default'],\n    attach: attachVimMap,\n    detach: detachVimMap,\n    call: cmKey\n  };\n  _cm_adapter[\"default\"].keyMap['vim-replace'] = {\n    'Backspace': 'goCharLeft',\n    fallthrough: ['vim-insert'],\n    attach: attachVimMap,\n    detach: detachVimMap,\n    call: cmKey\n  };\n\n  function executeMacroRegister(cm, vim, macroModeState, registerName) {\n    var register = vimGlobalState.registerController.getRegister(registerName);\n\n    if (registerName == ':') {\n      // Read-only register containing last Ex command.\n      if (register.keyBuffer[0]) {\n        exCommandDispatcher.processCommand(cm, register.keyBuffer[0]);\n      }\n\n      macroModeState.isPlaying = false;\n      return;\n    }\n\n    var keyBuffer = register.keyBuffer;\n    var imc = 0;\n    macroModeState.isPlaying = true;\n    macroModeState.replaySearchQueries = register.searchQueries.slice(0);\n\n    for (var i = 0; i < keyBuffer.length; i++) {\n      var text = keyBuffer[i];\n      var match, key;\n\n      while (text) {\n        // Pull off one command key, which is either a single character\n        // or a special sequence wrapped in '<' and '>', e.g. '<Space>'.\n        match = /<\\w+-.+?>|<\\w+>|./.exec(text);\n        key = match[0];\n        text = text.substring(match.index + key.length);\n\n        _cm_adapter[\"default\"].Vim.handleKey(cm, key, 'macro');\n\n        if (vim.insertMode) {\n          var changes = register.insertModeChanges[imc++].changes;\n          vimGlobalState.macroModeState.lastInsertModeChanges.changes = changes;\n          repeatInsertModeChanges(cm, changes, 1);\n          exitInsertMode(cm);\n        }\n      }\n    }\n\n    macroModeState.isPlaying = false;\n  }\n\n  function logKey(macroModeState, key) {\n    if (macroModeState.isPlaying) {\n      return;\n    }\n\n    var registerName = macroModeState.latestRegister;\n    var register = vimGlobalState.registerController.getRegister(registerName);\n\n    if (register) {\n      register.pushText(key);\n    }\n  }\n\n  function logInsertModeChange(macroModeState) {\n    if (macroModeState.isPlaying) {\n      return;\n    }\n\n    var registerName = macroModeState.latestRegister;\n    var register = vimGlobalState.registerController.getRegister(registerName);\n\n    if (register && register.pushInsertModeChanges) {\n      register.pushInsertModeChanges(macroModeState.lastInsertModeChanges);\n    }\n  }\n\n  function logSearchQuery(macroModeState, query) {\n    if (macroModeState.isPlaying) {\n      return;\n    }\n\n    var registerName = macroModeState.latestRegister;\n    var register = vimGlobalState.registerController.getRegister(registerName);\n\n    if (register && register.pushSearchQuery) {\n      register.pushSearchQuery(query);\n    }\n  }\n  /**\n   * Listens for changes made in insert mode.\n   * Should only be active in insert mode.\n   */\n\n\n  function onChange(cm, changeObj) {\n    var macroModeState = vimGlobalState.macroModeState;\n    var lastChange = macroModeState.lastInsertModeChanges;\n\n    if (!macroModeState.isPlaying) {\n      while (changeObj) {\n        lastChange.expectCursorActivityForChange = true;\n\n        if (changeObj.origin == '+input' || changeObj.origin == 'paste' || changeObj.origin === undefined\n        /* only in testing */\n        ) {\n            var text = changeObj.text.join('\\n');\n\n            if (lastChange.maybeReset) {\n              lastChange.changes = [];\n              lastChange.maybeReset = false;\n            }\n\n            if (cm.state.overwrite && !/\\n/.test(text)) {\n              lastChange.changes.push([text]);\n            } else {\n              lastChange.changes.push(text);\n            }\n          } // Change objects may be chained with next.\n\n\n        changeObj = changeObj.next;\n      }\n    }\n  }\n  /**\n  * Listens for any kind of cursor activity on CodeMirror.\n  */\n\n\n  function onCursorActivity(cm) {\n    var vim = cm.state.vim;\n\n    if (vim.insertMode) {\n      // Tracking cursor activity in insert mode (for macro support).\n      var macroModeState = vimGlobalState.macroModeState;\n\n      if (macroModeState.isPlaying) {\n        return;\n      }\n\n      var lastChange = macroModeState.lastInsertModeChanges;\n\n      if (lastChange.expectCursorActivityForChange) {\n        lastChange.expectCursorActivityForChange = false;\n      } else {\n        // Cursor moved outside the context of an edit. Reset the change.\n        lastChange.maybeReset = true;\n      }\n    } else if (!cm.curOp.isVimOp) {\n      handleExternalSelection(cm, vim);\n    }\n\n    if (vim.visualMode) {\n      updateFakeCursor(cm);\n    }\n  }\n\n  function updateFakeCursor(cm) {\n    var vim = cm.state.vim;\n    var from = clipCursorToContent(cm, copyCursor(vim.sel.head));\n    var to = offsetCursor(from, 0, 1);\n\n    if (vim.fakeCursor) {\n      vim.fakeCursor.clear();\n    }\n\n    vim.fakeCursor = cm.markText(from, to, {\n      className: 'cm-animate-fat-cursor'\n    });\n  }\n\n  function handleExternalSelection(cm, vim) {\n    var anchor = cm.getCursor('anchor');\n    var head = cm.getCursor('head'); // Enter or exit visual mode to match mouse selection.\n\n    if (vim.visualMode && !cm.somethingSelected()) {\n      exitVisualMode(cm, false);\n    } else if (!vim.visualMode && !vim.insertMode && cm.somethingSelected()) {\n      vim.visualMode = true;\n      vim.visualLine = false;\n\n      _cm_adapter[\"default\"].signal(cm, \"vim-mode-change\", {\n        mode: \"visual\"\n      });\n    }\n\n    if (vim.visualMode) {\n      // Bind CodeMirror selection model to vim selection model.\n      // Mouse selections are considered visual characterwise.\n      var headOffset = !cursorIsBefore(head, anchor) ? -1 : 0;\n      var anchorOffset = cursorIsBefore(head, anchor) ? -1 : 0;\n      head = offsetCursor(head, 0, headOffset);\n      anchor = offsetCursor(anchor, 0, anchorOffset);\n      vim.sel = {\n        anchor: anchor,\n        head: head\n      };\n      updateMark(cm, vim, '<', cursorMin(head, anchor));\n      updateMark(cm, vim, '>', cursorMax(head, anchor));\n    } else if (!vim.insertMode) {\n      // Reset lastHPos if selection was modified by something outside of vim mode e.g. by mouse.\n      vim.lastHPos = cm.getCursor().ch;\n    }\n  }\n  /** Wrapper for special keys pressed in insert mode */\n\n\n  function InsertModeKey(keyName) {\n    this.keyName = keyName;\n  }\n  /**\n  * Handles raw key down events from the text area.\n  * - Should only be active in insert mode.\n  * - For recording deletes in insert mode.\n  */\n\n\n  function onKeyEventTargetKeyDown(e) {\n    var macroModeState = vimGlobalState.macroModeState;\n    var lastChange = macroModeState.lastInsertModeChanges;\n\n    var keyName = _cm_adapter[\"default\"].keyName(e);\n\n    if (!keyName) {\n      return;\n    }\n\n    function onKeyFound() {\n      if (lastChange.maybeReset) {\n        lastChange.changes = [];\n        lastChange.maybeReset = false;\n      }\n\n      lastChange.changes.push(new InsertModeKey(keyName));\n      return true;\n    }\n\n    if (keyName.indexOf('Delete') != -1 || keyName.indexOf('Backspace') != -1) {\n      _cm_adapter[\"default\"].lookupKey(keyName, 'vim-insert', onKeyFound);\n    }\n  }\n  /**\n   * Repeats the last edit, which includes exactly 1 command and at most 1\n   * insert. Operator and motion commands are read from lastEditInputState,\n   * while action commands are read from lastEditActionCommand.\n   *\n   * If repeatForInsert is true, then the function was called by\n   * exitInsertMode to repeat the insert mode changes the user just made. The\n   * corresponding enterInsertMode call was made with a count.\n   */\n\n\n  function _repeatLastEdit(cm, vim, repeat, repeatForInsert) {\n    var macroModeState = vimGlobalState.macroModeState;\n    macroModeState.isPlaying = true;\n    var isAction = !!vim.lastEditActionCommand;\n    var cachedInputState = vim.inputState;\n\n    function repeatCommand() {\n      if (isAction) {\n        commandDispatcher.processAction(cm, vim, vim.lastEditActionCommand);\n      } else {\n        commandDispatcher.evalInput(cm, vim);\n      }\n    }\n\n    function repeatInsert(repeat) {\n      if (macroModeState.lastInsertModeChanges.changes.length > 0) {\n        // For some reason, repeat cw in desktop VIM does not repeat\n        // insert mode changes. Will conform to that behavior.\n        repeat = !vim.lastEditActionCommand ? 1 : repeat;\n        var changeObject = macroModeState.lastInsertModeChanges;\n        repeatInsertModeChanges(cm, changeObject.changes, repeat);\n      }\n    }\n\n    vim.inputState = vim.lastEditInputState;\n\n    if (isAction && vim.lastEditActionCommand.interlaceInsertRepeat) {\n      // o and O repeat have to be interlaced with insert repeats so that the\n      // insertions appear on separate lines instead of the last line.\n      for (var i = 0; i < repeat; i++) {\n        repeatCommand();\n        repeatInsert(1);\n      }\n    } else {\n      if (!repeatForInsert) {\n        // Hack to get the cursor to end up at the right place. If I is\n        // repeated in insert mode repeat, cursor will be 1 insert\n        // change set left of where it should be.\n        repeatCommand();\n      }\n\n      repeatInsert(repeat);\n    }\n\n    vim.inputState = cachedInputState;\n\n    if (vim.insertMode && !repeatForInsert) {\n      // Don't exit insert mode twice. If repeatForInsert is set, then we\n      // were called by an exitInsertMode call lower on the stack.\n      exitInsertMode(cm);\n    }\n\n    macroModeState.isPlaying = false;\n  }\n\n  function repeatInsertModeChanges(cm, changes, repeat) {\n    function keyHandler(binding) {\n      if (typeof binding == 'string') {\n        _cm_adapter[\"default\"].commands[binding](cm);\n      } else {\n        binding(cm);\n      }\n\n      return true;\n    }\n\n    var head = cm.getCursor('head');\n    var inVisualBlock = vimGlobalState.macroModeState.lastInsertModeChanges.inVisualBlock;\n\n    if (inVisualBlock) {\n      // Set up block selection again for repeating the changes.\n      var vim = cm.state.vim;\n      var lastSel = vim.lastSelection;\n      var offset = getOffset(lastSel.anchor, lastSel.head);\n      selectForInsert(cm, head, offset.line + 1);\n      repeat = cm.listSelections().length;\n      cm.setCursor(head);\n    }\n\n    for (var i = 0; i < repeat; i++) {\n      if (inVisualBlock) {\n        cm.setCursor(offsetCursor(head, i, 0));\n      }\n\n      for (var j = 0; j < changes.length; j++) {\n        var change = changes[j];\n\n        if (change instanceof InsertModeKey) {\n          _cm_adapter[\"default\"].lookupKey(change.keyName, 'vim-insert', keyHandler);\n        } else if (typeof change == \"string\") {\n          var cur = cm.getCursor();\n          cm.replaceRange(change, cur, cur);\n        } else {\n          var start = cm.getCursor();\n          var end = offsetCursor(start, 0, change[0].length);\n          cm.replaceRange(change[0], start, end);\n        }\n      }\n    }\n\n    if (inVisualBlock) {\n      cm.setCursor(offsetCursor(head, 0, 1));\n    }\n  }\n\n  resetVimGlobalState();\n  return vimApi;\n};\n\nexports.Vim = Vim;\n_cm_adapter[\"default\"].Vim = Vim();\nvar _default = _cm_adapter[\"default\"];\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/webviz-core/node_modules/monaco-vim/lib/cm/keymap_vim.js\n");

/***/ }),

/***/ "./packages/webviz-core/node_modules/monaco-vim/lib/cm_adapter.js":
/*!************************************************************************!*\
  !*** ./packages/webviz-core/node_modules/monaco-vim/lib/cm_adapter.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _monacoEditor = __webpack_require__(/*! monaco-editor */ \"./include-loader!./node_modules/monaco-editor/esm/vs/editor/editor.main.js\");\n\nvar _cursorTypeOperations = __webpack_require__(/*! monaco-editor/esm/vs/editor/common/controller/cursorTypeOperations */ \"./node_modules/monaco-editor/esm/vs/editor/common/controller/cursorTypeOperations.js\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar VerticalRevealType = {\n  Bottom: 4\n}; // for monaco 0.19.x where x < 3\n\nvar EditorOptConstants = {\n  readOnly: 65,\n  cursorWidth: 20,\n  fontInfo: 32\n};\nvar _window$navigator = window.navigator,\n    userAgent = _window$navigator.userAgent,\n    platform = _window$navigator.platform;\nvar edge = /Edge\\/(\\d+)/.exec(userAgent);\nvar ios = !edge && /AppleWebKit/.test(userAgent) && /Mobile\\/\\w+/.test(userAgent);\nvar mac = ios || /Mac/.test(platform);\nvar nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\n\nfunction isWordCharBasic(ch) {\n  return /\\w/.test(ch) || ch > \"\\x80\" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch));\n}\n\nfunction Pos(line, column) {\n  if (!(this instanceof Pos)) {\n    return new Pos(line, column);\n  }\n\n  this.line = line;\n  this.ch = column;\n}\n\nfunction signal(cm, signal, args) {\n  cm.dispatch(signal, args);\n}\n\nfunction dummy(key) {\n  return function () {// console.log(key, 'dummy function called with', Array.prototype.slice.call(arguments));\n  };\n}\n\nvar doFold, noFold;\n\nif (String.prototype.normalize) {\n  doFold = function doFold(str) {\n    return str.normalize(\"NFD\").toLowerCase();\n  };\n\n  noFold = function noFold(str) {\n    return str.normalize(\"NFD\");\n  };\n} else {\n  doFold = function doFold(str) {\n    return str.toLowerCase();\n  };\n\n  noFold = function noFold(str) {\n    return str;\n  };\n}\n\nvar StringStream = function StringStream(string, tabSize) {\n  this.pos = this.start = 0;\n  this.string = string;\n  this.tabSize = tabSize || 8;\n  this.lastColumnPos = this.lastColumnValue = 0;\n  this.lineStart = 0;\n};\n\nStringStream.prototype = {\n  eol: function eol() {\n    return this.pos >= this.string.length;\n  },\n  sol: function sol() {\n    return this.pos == this.lineStart;\n  },\n  peek: function peek() {\n    return this.string.charAt(this.pos) || undefined;\n  },\n  next: function next() {\n    if (this.pos < this.string.length) return this.string.charAt(this.pos++);\n  },\n  eat: function eat(match) {\n    var ch = this.string.charAt(this.pos);\n    if (typeof match == \"string\") var ok = ch == match;else var ok = ch && (match.test ? match.test(ch) : match(ch));\n\n    if (ok) {\n      ++this.pos;\n      return ch;\n    }\n  },\n  eatWhile: function eatWhile(match) {\n    var start = this.pos;\n\n    while (this.eat(match)) {}\n\n    return this.pos > start;\n  },\n  eatSpace: function eatSpace() {\n    var start = this.pos;\n\n    while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos))) {\n      ++this.pos;\n    }\n\n    return this.pos > start;\n  },\n  skipToEnd: function skipToEnd() {\n    this.pos = this.string.length;\n  },\n  skipTo: function skipTo(ch) {\n    var found = this.string.indexOf(ch, this.pos);\n\n    if (found > -1) {\n      this.pos = found;\n      return true;\n    }\n  },\n  backUp: function backUp(n) {\n    this.pos -= n;\n  },\n  column: function column() {\n    throw \"not implemented\";\n  },\n  indentation: function indentation() {\n    throw \"not implemented\";\n  },\n  match: function match(pattern, consume, caseInsensitive) {\n    if (typeof pattern == \"string\") {\n      var cased = function cased(str) {\n        return caseInsensitive ? str.toLowerCase() : str;\n      };\n\n      var substr = this.string.substr(this.pos, pattern.length);\n\n      if (cased(substr) == cased(pattern)) {\n        if (consume !== false) this.pos += pattern.length;\n        return true;\n      }\n    } else {\n      var match = this.string.slice(this.pos).match(pattern);\n      if (match && match.index > 0) return null;\n      if (match && consume !== false) this.pos += match[0].length;\n      return match;\n    }\n  },\n  current: function current() {\n    return this.string.slice(this.start, this.pos);\n  },\n  hideFirstChars: function hideFirstChars(n, inner) {\n    this.lineStart += n;\n\n    try {\n      return inner();\n    } finally {\n      this.lineStart -= n;\n    }\n  }\n};\n\nfunction toCmPos(pos) {\n  return new Pos(pos.lineNumber - 1, pos.column - 1);\n}\n\nfunction toMonacoPos(pos) {\n  return new _monacoEditor.Position(pos.line + 1, pos.ch + 1);\n}\n\nvar Marker =\n/*#__PURE__*/\nfunction () {\n  function Marker(cm, id, line, ch) {\n    _classCallCheck(this, Marker);\n\n    this.cm = cm;\n    this.id = id;\n    this.lineNumber = line + 1;\n    this.column = ch + 1;\n    cm.marks[this.id] = this;\n  }\n\n  _createClass(Marker, [{\n    key: \"clear\",\n    value: function clear() {\n      delete this.cm.marks[this.id];\n    }\n  }, {\n    key: \"find\",\n    value: function find() {\n      return toCmPos(this);\n    }\n  }]);\n\n  return Marker;\n}();\n\nfunction monacoToCmKey(e) {\n  var skip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var addQuotes = true;\n  var keyName = monaco.KeyCode[e.keyCode];\n\n  if (e.key) {\n    keyName = e.key;\n    addQuotes = false;\n  }\n\n  var key = keyName;\n  var skipOnlyShiftCheck = skip;\n\n  switch (e.keyCode) {\n    case _monacoEditor.KeyCode.Shift:\n    case _monacoEditor.KeyCode.Meta:\n    case _monacoEditor.KeyCode.Alt:\n    case _monacoEditor.KeyCode.Ctrl:\n      return key;\n\n    case _monacoEditor.KeyCode.Escape:\n      skipOnlyShiftCheck = true;\n      key = 'Esc';\n      break;\n  }\n\n  if (keyName.startsWith('KEY_')) {\n    key = keyName[keyName.length - 1].toLowerCase();\n  } else if (keyName.endsWith('Arrow')) {\n    skipOnlyShiftCheck = true;\n    key = keyName.substr(0, keyName.length - 5);\n  } else if (keyName.startsWith('US_')) {\n    key = e.browserEvent.key;\n  }\n\n  if (!skipOnlyShiftCheck && !e.altKey && !e.ctrlKey && !e.metaKey) {\n    key = e.key || e.browserEvent.key;\n  } else {\n    if (e.altKey) {\n      key = \"Alt-\".concat(key);\n    }\n\n    if (e.ctrlKey) {\n      key = \"Ctrl-\".concat(key);\n    }\n\n    if (e.metaKey) {\n      key = \"Meta-\".concat(key);\n    }\n\n    if (e.shiftKey) {\n      key = \"Shift-\".concat(key);\n    }\n  }\n\n  if (key.length === 1 && addQuotes) {\n    key = \"'\".concat(key, \"'\");\n  }\n\n  return key;\n}\n\nvar CMAdapter =\n/*#__PURE__*/\nfunction () {\n  function CMAdapter(editor) {\n    _classCallCheck(this, CMAdapter);\n\n    _initialiseProps.call(this);\n\n    this.editor = editor;\n    this.state = {};\n    this.marks = {};\n    this.$uid = 0;\n    this.disposables = [];\n    this.listeners = {};\n    this.curOp = {};\n    this.attached = false;\n    this.statusBar = null;\n    this.addLocalListeners();\n    this.ctxInsert = this.editor.createContextKey('insertMode', true);\n  }\n\n  _createClass(CMAdapter, [{\n    key: \"attach\",\n    value: function attach() {\n      CMAdapter.keyMap.vim.attach(this);\n    }\n  }, {\n    key: \"addLocalListeners\",\n    value: function addLocalListeners() {\n      this.disposables.push(this.editor.onDidChangeCursorPosition(this.handleCursorChange), this.editor.onDidChangeModelContent(this.handleChange), this.editor.onKeyDown(this.handleKeyDown));\n    }\n  }, {\n    key: \"handleReplaceMode\",\n    value: function handleReplaceMode(key, e) {\n      var fromReplace = false;\n      var _char = key;\n      var pos = this.editor.getPosition();\n      var range = new _monacoEditor.Range(pos.lineNumber, pos.column, pos.lineNumber, pos.column + 1);\n      var forceMoveMarkers = true;\n\n      if (key.startsWith('\\'')) {\n        _char = key[1];\n      } else if (_char === 'Enter') {\n        _char = '\\n';\n      } else if (_char === 'Backspace') {\n        var lastItem = this.replaceStack.pop();\n\n        if (!lastItem) {\n          return;\n        }\n\n        fromReplace = true;\n        _char = lastItem;\n        range = new _monacoEditor.Range(pos.lineNumber, pos.column, pos.lineNumber, pos.column - 1);\n      } else {\n        return;\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (!this.replaceStack) {\n        this.replaceStack = [];\n      }\n\n      if (!fromReplace) {\n        this.replaceStack.push(this.editor.getModel().getValueInRange(range));\n      }\n\n      this.editor.executeEdits('vim', [{\n        text: _char,\n        range: range,\n        forceMoveMarkers: forceMoveMarkers\n      }]);\n\n      if (fromReplace) {\n        this.editor.setPosition(range.getStartPosition());\n      }\n    }\n  }, {\n    key: \"setOption\",\n    value: function setOption(key, value) {\n      this.state[key] = value;\n\n      if (key === 'theme') {\n        _monacoEditor.editor.setTheme(value);\n      }\n    }\n  }, {\n    key: \"getConfiguration\",\n    value: function getConfiguration() {\n      var editor = this.editor;\n      var opts = EditorOptConstants;\n\n      if (typeof editor.getConfiguration === 'function') {\n        return editor.getConfiguration();\n      } else if ('EditorOption' in _monacoEditor.editor) {\n        // for monaco 0.19.3 onwards\n        opts = _monacoEditor.editor.EditorOption;\n      }\n\n      return {\n        readOnly: editor.getOption(opts.readOnly),\n        viewInfo: {\n          cursorWidth: editor.getOption(opts.cursorWidth)\n        },\n        fontInfo: editor.getOption(opts.fontInfo)\n      };\n    }\n  }, {\n    key: \"getOption\",\n    value: function getOption(key) {\n      if (key === 'readOnly') {\n        return this.getConfiguration().readOnly;\n      } else if (key === 'firstLineNumber') {\n        return this.firstLine() + 1;\n      } else if (key === 'indentWithTabs') {\n        return !this.editor.getModel().getOptions().insertSpaces;\n      } else {\n        if (typeof this.editor.getConfiguration === 'function') {\n          return this.editor.getRawConfiguration()[key];\n        }\n\n        return this.editor.getRawOptions()[key];\n      }\n\n      return this.state[key];\n    }\n  }, {\n    key: \"dispatch\",\n    value: function dispatch(signal) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var listeners = this.listeners[signal];\n\n      if (!listeners) {\n        return;\n      }\n\n      listeners.forEach(function (handler) {\n        return handler.apply(void 0, args);\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, handler) {\n      if (!this.listeners[event]) {\n        this.listeners[event] = [];\n      }\n\n      this.listeners[event].push(handler);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, handler) {\n      var listeners = this.listeners[event];\n\n      if (!listeners) {\n        return;\n      }\n\n      this.listeners[event] = listeners.filter(function (l) {\n        return l !== handler;\n      });\n    }\n  }, {\n    key: \"firstLine\",\n    value: function firstLine() {\n      return 0;\n    }\n  }, {\n    key: \"lastLine\",\n    value: function lastLine() {\n      return this.lineCount() - 1;\n    }\n  }, {\n    key: \"lineCount\",\n    value: function lineCount() {\n      return this.editor.getModel().getLineCount();\n    }\n  }, {\n    key: \"defaultTextHeight\",\n    value: function defaultTextHeight() {\n      return 1;\n    }\n  }, {\n    key: \"getLine\",\n    value: function getLine(line) {\n      if (line < 0) {\n        return '';\n      }\n\n      var model = this.editor.getModel();\n      var maxLines = model.getLineCount();\n\n      if (line + 1 > maxLines) {\n        line = maxLines - 1;\n      }\n\n      return this.editor.getModel().getLineContent(line + 1);\n    }\n  }, {\n    key: \"getAnchorForSelection\",\n    value: function getAnchorForSelection(selection) {\n      if (selection.isEmpty()) {\n        return selection.getPosition();\n      }\n\n      var selDir = selection.getDirection();\n      return selDir === _monacoEditor.SelectionDirection.LTR ? selection.getStartPosition() : selection.getEndPosition();\n    }\n  }, {\n    key: \"getHeadForSelection\",\n    value: function getHeadForSelection(selection) {\n      if (selection.isEmpty()) {\n        return selection.getPosition();\n      }\n\n      var selDir = selection.getDirection();\n      return selDir === _monacoEditor.SelectionDirection.LTR ? selection.getEndPosition() : selection.getStartPosition();\n    }\n  }, {\n    key: \"getCursor\",\n    value: function getCursor() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (!type) {\n        return toCmPos(this.editor.getPosition());\n      }\n\n      var sel = this.editor.getSelection();\n      var pos;\n\n      if (sel.isEmpty()) {\n        pos = sel.getPosition();\n      } else if (type === 'anchor') {\n        pos = this.getAnchorForSelection(sel);\n      } else {\n        pos = this.getHeadForSelection(sel);\n      }\n\n      return toCmPos(pos);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(start, end) {\n      var p1 = toMonacoPos(start);\n      var p2 = toMonacoPos(end);\n      return this.editor.getModel().getValueInRange(_monacoEditor.Range.fromPositions(p1, p2));\n    }\n  }, {\n    key: \"getSelection\",\n    value: function getSelection() {\n      return this.editor.getModel().getValueInRange(this.editor.getSelection());\n    }\n  }, {\n    key: \"replaceRange\",\n    value: function replaceRange(text, start, end) {\n      var p1 = toMonacoPos(start);\n      var p2 = !end ? p1 : toMonacoPos(end);\n      this.editor.executeEdits('vim', [{\n        text: text,\n        range: _monacoEditor.Range.fromPositions(p1, p2)\n      }]); // @TODO - Check if this breaks any other expectation\n\n      this.pushUndoStop();\n    }\n  }, {\n    key: \"pushUndoStop\",\n    value: function pushUndoStop() {\n      this.editor.pushUndoStop();\n    }\n  }, {\n    key: \"setCursor\",\n    value: function setCursor(line, ch) {\n      var pos = line;\n\n      if (_typeof(line) !== 'object') {\n        pos = {};\n        pos.line = line;\n        pos.ch = ch;\n      }\n\n      var monacoPos = this.editor.getModel().validatePosition(toMonacoPos(pos));\n      this.editor.setPosition(toMonacoPos(pos));\n      this.editor.revealPosition(monacoPos);\n    }\n  }, {\n    key: \"somethingSelected\",\n    value: function somethingSelected() {\n      return !this.editor.getSelection().isEmpty();\n    }\n  }, {\n    key: \"operation\",\n    value: function operation(fn, force) {\n      return fn();\n    }\n  }, {\n    key: \"listSelections\",\n    value: function listSelections() {\n      var _this = this;\n\n      var selections = this.editor.getSelections();\n\n      if (!selections.length || this.inVirtualSelectionMode) {\n        return [{\n          anchor: this.getCursor('anchor'),\n          head: this.getCursor('head')\n        }];\n      }\n\n      return selections.map(function (sel) {\n        var pos = sel.getPosition();\n        var start = sel.getStartPosition();\n        var end = sel.getEndPosition();\n        return {\n          anchor: _this.clipPos(toCmPos(_this.getAnchorForSelection(sel))),\n          head: _this.clipPos(toCmPos(_this.getHeadForSelection(sel)))\n        };\n      });\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.editor.focus();\n    }\n  }, {\n    key: \"setSelections\",\n    value: function setSelections(selections, primIndex) {\n      var hasSel = !!this.editor.getSelections().length;\n      var sels = selections.map(function (sel, index) {\n        var anchor = sel.anchor,\n            head = sel.head;\n\n        if (hasSel) {\n          return _monacoEditor.Selection.fromPositions(toMonacoPos(anchor), toMonacoPos(head));\n        } else {\n          return _monacoEditor.Selection.fromPositions(toMonacoPos(head), toMonacoPos(anchor));\n        }\n      });\n\n      if (!primIndex) {\n        sels.reverse();\n      } else if (sels[primIndex]) {\n        sels.push(sels.splice(primIndex, 1)[0]);\n      }\n\n      if (!sels.length) {\n        return;\n      }\n\n      var sel = sels[0];\n      var posToReveal;\n\n      if (sel.getDirection() === _monacoEditor.SelectionDirection.LTR) {\n        posToReveal = sel.getEndPosition();\n      } else {\n        posToReveal = sel.getStartPosition();\n      }\n\n      this.editor.setSelections(sels);\n      this.editor.revealPosition(posToReveal);\n    }\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(frm, to) {\n      var range = _monacoEditor.Range.fromPositions(toMonacoPos(frm), toMonacoPos(to));\n\n      this.editor.setSelection(range);\n    }\n  }, {\n    key: \"getSelections\",\n    value: function getSelections() {\n      var editor = this.editor;\n      return editor.getSelections().map(function (sel) {\n        return editor.getModel().getValueInRange(sel);\n      });\n    }\n  }, {\n    key: \"replaceSelections\",\n    value: function replaceSelections(texts) {\n      var editor = this.editor;\n      editor.getSelections().forEach(function (sel, index) {\n        editor.executeEdits('vim', [{\n          range: sel,\n          text: texts[index],\n          forceMoveMarkers: false\n        }]);\n      });\n    }\n  }, {\n    key: \"toggleOverwrite\",\n    value: function toggleOverwrite(toggle) {\n      if (toggle) {\n        this.enterVimMode();\n        this.replaceMode = true;\n      } else {\n        this.leaveVimMode();\n        this.replaceMode = false;\n        this.replaceStack = [];\n      }\n    }\n  }, {\n    key: \"charCoords\",\n    value: function charCoords(pos, mode) {\n      return {\n        top: pos.line,\n        left: pos.ch\n      };\n    }\n  }, {\n    key: \"coordsChar\",\n    value: function coordsChar(pos, mode) {\n      if (mode === 'local') {}\n    }\n  }, {\n    key: \"clipPos\",\n    value: function clipPos(p) {\n      var pos = this.editor.getModel().validatePosition(toMonacoPos(p));\n      return toCmPos(pos);\n    }\n  }, {\n    key: \"setBookmark\",\n    value: function setBookmark(cursor, options) {\n      var bm = new Marker(this, this.$uid++, cursor.line, cursor.ch);\n\n      if (!options || !options.insertLeft) {\n        bm.$insertRight = true;\n      }\n\n      this.marks[bm.id] = bm;\n      return bm;\n    }\n  }, {\n    key: \"getScrollInfo\",\n    value: function getScrollInfo() {\n      var editor = this.editor;\n\n      var _editor$getVisibleRan = editor.getVisibleRanges(),\n          _editor$getVisibleRan2 = _slicedToArray(_editor$getVisibleRan, 1),\n          range = _editor$getVisibleRan2[0];\n\n      return {\n        left: 0,\n        top: range.startLineNumber - 1,\n        height: editor.getModel().getLineCount(),\n        clientHeight: range.endLineNumber - range.startLineNumber + 1\n      };\n    }\n  }, {\n    key: \"triggerEditorAction\",\n    value: function triggerEditorAction(action) {\n      this.editor.trigger('vim', action);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.dispatch('dispose');\n      this.removeOverlay();\n\n      if (CMAdapter.keyMap.vim) {\n        CMAdapter.keyMap.vim.detach(this);\n      }\n\n      this.disposables.forEach(function (d) {\n        return d.dispose();\n      });\n    }\n  }, {\n    key: \"getInputField\",\n    value: function getInputField() {}\n  }, {\n    key: \"getWrapperElement\",\n    value: function getWrapperElement() {}\n  }, {\n    key: \"enterVimMode\",\n    value: function enterVimMode() {\n      var toVim = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.ctxInsert.set(false);\n      var config = this.getConfiguration();\n      this.initialCursorWidth = config.viewInfo.cursorWidth || 0;\n      this.editor.updateOptions({\n        cursorWidth: config.fontInfo.typicalFullwidthCharacterWidth,\n        cursorBlinking: 'solid'\n      });\n    }\n  }, {\n    key: \"leaveVimMode\",\n    value: function leaveVimMode() {\n      this.ctxInsert.set(true);\n      this.editor.updateOptions({\n        cursorWidth: this.initialCursorWidth || 0,\n        cursorBlinking: 'blink'\n      });\n    }\n  }, {\n    key: \"virtualSelectionMode\",\n    value: function virtualSelectionMode() {\n      return this.inVirtualSelectionMode;\n    }\n  }, {\n    key: \"markText\",\n    value: function markText() {\n      // only used for fat-cursor, not needed\n      return {\n        clear: function clear() {},\n        find: function find() {}\n      };\n    }\n  }, {\n    key: \"getUserVisibleLines\",\n    value: function getUserVisibleLines() {\n      var ranges = this.editor.getVisibleRanges();\n\n      if (!ranges.length) {\n        return {\n          top: 0,\n          bottom: 0\n        };\n      }\n\n      var res = {\n        top: Infinity,\n        bottom: 0\n      };\n      ranges.reduce(function (acc, range) {\n        if (range.startLineNumber < acc.top) {\n          acc.top = range.startLineNumber;\n        }\n\n        if (range.endLineNumber > acc.bottom) {\n          acc.bottom = range.endLineNumber;\n        }\n\n        return acc;\n      }, res);\n      res.top -= 1;\n      res.bottom -= 1;\n      return res;\n    }\n  }, {\n    key: \"findPosV\",\n    value: function findPosV(startPos, amount, unit) {\n      var editor = this.editor;\n      var finalAmount = amount;\n      var finalUnit = unit;\n      var pos = toMonacoPos(startPos);\n\n      if (unit === 'page') {\n        var editorHeight = editor.getLayoutInfo().height;\n        var lineHeight = this.getConfiguration().fontInfo.lineHeight;\n        finalAmount = finalAmount * Math.floor(editorHeight / lineHeight);\n        finalUnit = 'line';\n      }\n\n      if (unit === 'line') {\n        pos.lineNumber += finalAmount;\n      }\n\n      return toCmPos(pos);\n    }\n  }, {\n    key: \"findMatchingBracket\",\n    value: function findMatchingBracket(pos) {\n      var mPos = toMonacoPos(pos);\n      var res = this.editor.getModel().matchBracket(mPos);\n\n      if (!res || !(res.length === 2)) {\n        return {\n          to: null\n        };\n      }\n\n      return {\n        to: toCmPos(res[1].getStartPosition())\n      };\n    }\n  }, {\n    key: \"findFirstNonWhiteSpaceCharacter\",\n    value: function findFirstNonWhiteSpaceCharacter(line) {\n      return this.editor.getModel().getLineFirstNonWhitespaceColumn(line + 1) - 1;\n    }\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(x, y) {\n      if (!x && !y) {\n        return;\n      }\n\n      if (!x) {\n        if (y < 0) {\n          y = this.editor.getPosition().lineNumber - y;\n        }\n\n        this.editor.setScrollTop(this.editor.getTopForLineNumber(y + 1));\n      }\n    }\n  }, {\n    key: \"moveCurrentLineTo\",\n    value: function moveCurrentLineTo(viewPosition) {\n      var editor = this.editor;\n      var pos = editor.getPosition();\n\n      var range = _monacoEditor.Range.fromPositions(pos, pos);\n\n      switch (viewPosition) {\n        case 'top':\n          editor.revealRangeAtTop(range);\n          return;\n\n        case 'center':\n          editor.revealRangeInCenter(range);\n          return;\n\n        case 'bottom':\n          // private api. no other way\n          editor._revealRange(range, VerticalRevealType.Bottom);\n\n          return;\n      }\n    }\n  }, {\n    key: \"getSearchCursor\",\n    value: function getSearchCursor(query, pos, caseFold) {\n      var matchCase = false;\n      var isRegex = false;\n\n      if (query instanceof RegExp && !query.global) {\n        matchCase = !query.ignoreCase;\n        query = query.source;\n        isRegex = true;\n      }\n\n      if (pos.ch == undefined) pos.ch = Number.MAX_VALUE;\n      var monacoPos = toMonacoPos(pos);\n      var context = this;\n      var editor = this.editor;\n      var lastSearch = null;\n      var model = editor.getModel();\n      var matches = model.findMatches(query, false, isRegex, matchCase) || [];\n      return {\n        getMatches: function getMatches() {\n          return matches;\n        },\n        findNext: function findNext() {\n          return this.find(false);\n        },\n        findPrevious: function findPrevious() {\n          return this.find(true);\n        },\n        jumpTo: function jumpTo(index) {\n          if (!matches || !matches.length) {\n            return false;\n          }\n\n          var match = matches[index];\n          lastSearch = match.range;\n          context.highlightRanges([lastSearch], 'currentFindMatch');\n          context.highlightRanges(matches.map(function (m) {\n            return m.range;\n          }).filter(function (r) {\n            return !r.equalsRange(lastSearch);\n          }));\n          return lastSearch;\n        },\n        find: function find(back) {\n          if (!matches || !matches.length) {\n            return false;\n          }\n\n          var match;\n\n          if (back) {\n            var _pos = lastSearch ? lastSearch.getStartPosition() : monacoPos;\n\n            match = model.findPreviousMatch(query, _pos, isRegex, matchCase);\n\n            if (!match || !match.range.getStartPosition().isBeforeOrEqual(_pos)) {\n              return false;\n            }\n          } else {\n            var _pos2 = lastSearch ? lastSearch.getEndPosition() : monacoPos;\n\n            match = model.findNextMatch(query, _pos2, isRegex, matchCase);\n\n            if (!match || !_pos2.isBeforeOrEqual(match.range.getStartPosition())) {\n              return false;\n            }\n          }\n\n          lastSearch = match.range;\n          context.highlightRanges([lastSearch], 'currentFindMatch');\n          context.highlightRanges(matches.map(function (m) {\n            return m.range;\n          }).filter(function (r) {\n            return !r.equalsRange(lastSearch);\n          }));\n          return lastSearch;\n        },\n        from: function from() {\n          return lastSearch && toCmPos(lastSearch.getStartPosition());\n        },\n        to: function to() {\n          return lastSearch && toCmPos(lastSearch.getEndPosition());\n        },\n        replace: function replace(text) {\n          if (lastSearch) {\n            editor.executeEdits('vim', [{\n              range: lastSearch,\n              text: text,\n              forceMoveMarkers: true\n            }]);\n            lastSearch.setEndPosition(editor.getPosition());\n            editor.setPosition(lastSearch.getStartPosition());\n          }\n        }\n      };\n    }\n  }, {\n    key: \"highlightRanges\",\n    value: function highlightRanges(ranges) {\n      var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'findMatch';\n      var decorationKey = \"decoration\".concat(className);\n      this[decorationKey] = this.editor.deltaDecorations(this[decorationKey] || [], ranges.map(function (range) {\n        return {\n          range: range,\n          options: {\n            stickiness: _monacoEditor.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n            zIndex: 13,\n            className: className,\n            showIfCollapsed: true\n          }\n        };\n      }));\n      return this[decorationKey];\n    }\n  }, {\n    key: \"addOverlay\",\n    value: function addOverlay(_ref, hasBoundary, style) {\n      var query = _ref.query;\n      var matchCase = false;\n      var isRegex = false;\n\n      if (query && query instanceof RegExp && !query.global) {\n        isRegex = true;\n        matchCase = !query.ignoreCase;\n        query = query.source;\n      }\n\n      var match = this.editor.getModel().findNextMatch(query, this.editor.getPosition(), isRegex, matchCase);\n\n      if (!match || !match.range) {\n        return;\n      }\n\n      this.highlightRanges([match.range]);\n    }\n  }, {\n    key: \"removeOverlay\",\n    value: function removeOverlay() {\n      var _this2 = this;\n\n      ['currentFindMatch', 'findMatch'].forEach(function (key) {\n        _this2.editor.deltaDecorations(_this2[\"decoration\".concat(key)] || [], []);\n      });\n    }\n  }, {\n    key: \"scrollIntoView\",\n    value: function scrollIntoView(pos) {\n      if (!pos) {\n        return;\n      }\n\n      this.editor.revealPosition(toMonacoPos(pos));\n    }\n  }, {\n    key: \"moveH\",\n    value: function moveH(units, type) {\n      if (type !== 'char') {\n        return;\n      }\n\n      var pos = this.editor.getPosition();\n      this.editor.setPosition(new _monacoEditor.Position(pos.lineNumber, pos.column + units));\n    }\n    /**\n     * Uses internal apis which not sure why is internal\n     */\n\n  }, {\n    key: \"scanForBracket\",\n    value: function scanForBracket(pos, dir, dd, config) {\n      var mPos = toMonacoPos(pos);\n      var model = this.editor.getModel();\n      var range = model.matchBracket(mPos);\n\n      if (!range || range.length !== 2) {\n        var bracket = '{([';\n\n        for (var i = 0; i < bracket.length; i++) {\n          var bracketRange = model.findMatchingBracketUp(bracket[i], mPos);\n\n          if (bracketRange) {\n            range = model.matchBracket(bracketRange.getEndPosition());\n            break;\n          }\n        }\n      }\n\n      if (!range || range.length !== 2) {\n        return null;\n      }\n\n      var res;\n\n      if (dir === -1) {\n        res = range[1].getStartPosition();\n      } else {\n        res = range[0].getStartPosition();\n      }\n\n      return {\n        pos: toCmPos(res),\n        ch: model.getValueInRange(dir === -1 ? range[0] : range[1])\n      };\n    }\n  }, {\n    key: \"indexFromPos\",\n    value: function indexFromPos(pos) {\n      return this.editor.getModel().getOffsetAt(toMonacoPos(pos));\n    }\n  }, {\n    key: \"posFromIndex\",\n    value: function posFromIndex(offset) {\n      return toCmPos(this.editor.getModel().getPositionAt(offset));\n    }\n  }, {\n    key: \"indentLine\",\n    value: function indentLine(line) {\n      var indentRight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var editor = this.editor;\n\n      var cursors = editor._getCursors();\n\n      var pos = new _monacoEditor.Position(line + 1, 1);\n\n      var sel = _monacoEditor.Selection.fromPositions(pos, pos); // no other way than to use internal apis to preserve the undoStack for a batch of indents\n\n\n      editor.executeCommands(\"editor.action.\".concat(indentRight ? 'indent' : 'outdent', \"Lines\"), _cursorTypeOperations.TypeOperations[indentRight ? 'indent' : 'outdent'](cursors.context.config, this.editor.getModel(), [sel]));\n    }\n  }, {\n    key: \"setStatusBar\",\n    value: function setStatusBar(statusBar) {\n      this.statusBar = statusBar;\n    }\n  }, {\n    key: \"openDialog\",\n    value: function openDialog(html, callback, options) {\n      if (!this.statusBar) {\n        return;\n      }\n\n      return this.statusBar.setSec(html, callback, options);\n    }\n  }, {\n    key: \"openNotification\",\n    value: function openNotification(html) {\n      if (!this.statusBar) {\n        return;\n      }\n\n      this.statusBar.showNotification(html);\n    }\n  }]);\n\n  return CMAdapter;\n}();\n\nCMAdapter.Pos = Pos;\nCMAdapter.signal = signal;\nCMAdapter.on = dummy('on');\nCMAdapter.off = dummy('off');\nCMAdapter.addClass = dummy('addClass');\nCMAdapter.rmClass = dummy('rmClass');\nCMAdapter.defineOption = dummy('defineOption');\nCMAdapter.keyMap = {\n  'default': function _default(key) {\n    return function (cm) {\n      return true;\n    };\n  }\n};\nCMAdapter.isWordChar = isWordCharBasic;\nCMAdapter.keyName = monacoToCmKey;\nCMAdapter.StringStream = StringStream;\n\nCMAdapter.e_stop = function (e) {\n  if (e.stopPropagation) {\n    e.stopPropagation();\n  } else {\n    e.cancelBubble = true;\n  }\n\n  CMAdapter.e_preventDefault(e);\n  return false;\n};\n\nCMAdapter.e_preventDefault = function (e) {\n  if (e.preventDefault) {\n    e.preventDefault();\n\n    if (e.browserEvent) {\n      e.browserEvent.preventDefault();\n    }\n  } else {\n    e.returnValue = false;\n  }\n\n  return false;\n};\n\nCMAdapter.commands = {\n  redo: function redo(cm) {\n    cm.triggerEditorAction('redo');\n  },\n  undo: function undo(cm) {\n    cm.triggerEditorAction('undo');\n  },\n  newlineAndIndent: function newlineAndIndent(cm) {\n    cm.triggerEditorAction('editor.action.insertLineAfter');\n  }\n};\n\nCMAdapter.lookupKey = function lookupKey(key, map, handle) {\n  if (typeof map === 'string') {\n    map = CMAdapter.keyMap[map];\n  }\n\n  var found = typeof map == \"function\" ? map(key) : map[key];\n  if (found === false) return \"nothing\";\n  if (found === \"...\") return \"multi\";\n  if (found != null && handle(found)) return \"handled\";\n\n  if (map.fallthrough) {\n    if (!Array.isArray(map.fallthrough)) return lookupKey(key, map.fallthrough, handle);\n\n    for (var i = 0; i < map.fallthrough.length; i++) {\n      var result = lookupKey(key, map.fallthrough[i], handle);\n      if (result) return result;\n    }\n  }\n};\n\nCMAdapter.defineExtension = function (name, fn) {\n  CMAdapter.prototype[name] = fn;\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.handleKeyDown = function (e) {\n    // Allow previously registered keydown listeners to handle the event and\n    // prevent this extension from also handling it.\n    if (e.browserEvent.defaultPrevented & e.keyCode !== _monacoEditor.KeyCode.Escape) {\n      return;\n    }\n\n    if (!_this3.attached) {\n      return;\n    }\n\n    var key = monacoToCmKey(e);\n\n    if (_this3.replaceMode) {\n      _this3.handleReplaceMode(key, e);\n    }\n\n    if (!key) {\n      return;\n    }\n\n    if (CMAdapter.keyMap.vim && CMAdapter.keyMap.vim.call) {\n      var cmd = CMAdapter.keyMap.vim.call(key, _this3);\n\n      if (cmd) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        try {\n          cmd();\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    }\n  };\n\n  this.handleCursorChange = function (e) {\n    var position = e.position,\n        source = e.source;\n    var editor = _this3.editor;\n    var selection = editor.getSelection();\n\n    if (!_this3.ctxInsert.get() && e.source === 'mouse' && selection.isEmpty()) {\n      var maxCol = editor.getModel().getLineMaxColumn(position.lineNumber);\n\n      if (e.position.column === maxCol) {\n        editor.setPosition(new _monacoEditor.Position(e.position.lineNumber, maxCol - 1));\n        return;\n      }\n    }\n\n    _this3.dispatch('cursorActivity', _this3, e);\n  };\n\n  this.handleChange = function (e) {\n    var changes = e.changes;\n    var change = {\n      text: changes.reduce(function (acc, change) {\n        acc.push(change.text);\n        return acc;\n      }, []),\n      origin: '+input'\n    };\n    var curOp = _this3.curOp = _this3.curOp || {};\n\n    if (!curOp.changeHandlers) {\n      curOp.changeHandlers = _this3.listeners['change'] && _this3.listeners['change'].slice();\n    }\n\n    if (_this3.virtualSelectionMode()) {\n      return;\n    }\n\n    if (!curOp.lastChange) {\n      curOp.lastChange = curOp.change = change;\n    } else {\n      curOp.lastChange.next = curOp.lastChange = change;\n    }\n\n    _this3.dispatch('change', _this3, change);\n  };\n};\n\nvar _default2 = CMAdapter;\nexports[\"default\"] = _default2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/webviz-core/node_modules/monaco-vim/lib/cm_adapter.js\n");

/***/ }),

/***/ "./packages/webviz-core/node_modules/monaco-vim/lib/index.js":
/*!*******************************************************************!*\
  !*** ./packages/webviz-core/node_modules/monaco-vim/lib/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initVimMode = initVimMode;\nObject.defineProperty(exports, \"VimMode\", {\n  enumerable: true,\n  get: function get() {\n    return _keymap_vim[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"StatusBar\", {\n  enumerable: true,\n  get: function get() {\n    return _statusbar[\"default\"];\n  }\n});\n\nvar _keymap_vim = _interopRequireDefault(__webpack_require__(/*! ./cm/keymap_vim */ \"./packages/webviz-core/node_modules/monaco-vim/lib/cm/keymap_vim.js\"));\n\nvar _statusbar = _interopRequireDefault(__webpack_require__(/*! ./statusbar */ \"./packages/webviz-core/node_modules/monaco-vim/lib/statusbar.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction initVimMode(editor) {\n  var statusbarNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var StatusBarClass = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _statusbar[\"default\"];\n  var sanitizer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var vimAdapter = new _keymap_vim[\"default\"](editor);\n\n  if (!statusbarNode) {\n    vimAdapter.attach();\n    return vimAdapter;\n  }\n\n  var statusBar = new StatusBarClass(statusbarNode, editor, sanitizer);\n  var keyBuffer = '';\n  vimAdapter.on('vim-mode-change', function (mode) {\n    statusBar.setMode(mode);\n  });\n  vimAdapter.on('vim-keypress', function (key) {\n    if (key === ':') {\n      keyBuffer = '';\n    } else {\n      keyBuffer += key;\n    }\n\n    statusBar.setKeyBuffer(keyBuffer);\n  });\n  vimAdapter.on('vim-command-done', function () {\n    keyBuffer = '';\n    statusBar.setKeyBuffer(keyBuffer);\n  });\n  vimAdapter.on('dispose', function () {\n    statusBar.toggleVisibility(false);\n    statusBar.closeInput();\n    statusBar.clear();\n  });\n  statusBar.toggleVisibility(true);\n  vimAdapter.setStatusBar(statusBar);\n  vimAdapter.attach();\n  return vimAdapter;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy93ZWJ2aXotY29yZS9ub2RlX21vZHVsZXMvbW9uYWNvLXZpbS9saWIvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpcy5oYXNzb24vRG9jdW1lbnRzL1dvcmtzcGFjZXMvb3Mtd2Vidml6L3BhY2thZ2VzL3dlYnZpei1jb3JlL25vZGVfbW9kdWxlcy9tb25hY28tdmltL2xpYi9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuaW5pdFZpbU1vZGUgPSBpbml0VmltTW9kZTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlZpbU1vZGVcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX2tleW1hcF92aW1bXCJkZWZhdWx0XCJdO1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlN0YXR1c0JhclwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfc3RhdHVzYmFyW1wiZGVmYXVsdFwiXTtcbiAgfVxufSk7XG5cbnZhciBfa2V5bWFwX3ZpbSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vY20va2V5bWFwX3ZpbVwiKSk7XG5cbnZhciBfc3RhdHVzYmFyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9zdGF0dXNiYXJcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBcImRlZmF1bHRcIjogb2JqIH07IH1cblxuZnVuY3Rpb24gaW5pdFZpbU1vZGUoZWRpdG9yKSB7XG4gIHZhciBzdGF0dXNiYXJOb2RlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBudWxsO1xuICB2YXIgU3RhdHVzQmFyQ2xhc3MgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IF9zdGF0dXNiYXJbXCJkZWZhdWx0XCJdO1xuICB2YXIgc2FuaXRpemVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiBudWxsO1xuICB2YXIgdmltQWRhcHRlciA9IG5ldyBfa2V5bWFwX3ZpbVtcImRlZmF1bHRcIl0oZWRpdG9yKTtcblxuICBpZiAoIXN0YXR1c2Jhck5vZGUpIHtcbiAgICB2aW1BZGFwdGVyLmF0dGFjaCgpO1xuICAgIHJldHVybiB2aW1BZGFwdGVyO1xuICB9XG5cbiAgdmFyIHN0YXR1c0JhciA9IG5ldyBTdGF0dXNCYXJDbGFzcyhzdGF0dXNiYXJOb2RlLCBlZGl0b3IsIHNhbml0aXplcik7XG4gIHZhciBrZXlCdWZmZXIgPSAnJztcbiAgdmltQWRhcHRlci5vbigndmltLW1vZGUtY2hhbmdlJywgZnVuY3Rpb24gKG1vZGUpIHtcbiAgICBzdGF0dXNCYXIuc2V0TW9kZShtb2RlKTtcbiAgfSk7XG4gIHZpbUFkYXB0ZXIub24oJ3ZpbS1rZXlwcmVzcycsIGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAoa2V5ID09PSAnOicpIHtcbiAgICAgIGtleUJ1ZmZlciA9ICcnO1xuICAgIH0gZWxzZSB7XG4gICAgICBrZXlCdWZmZXIgKz0ga2V5O1xuICAgIH1cblxuICAgIHN0YXR1c0Jhci5zZXRLZXlCdWZmZXIoa2V5QnVmZmVyKTtcbiAgfSk7XG4gIHZpbUFkYXB0ZXIub24oJ3ZpbS1jb21tYW5kLWRvbmUnLCBmdW5jdGlvbiAoKSB7XG4gICAga2V5QnVmZmVyID0gJyc7XG4gICAgc3RhdHVzQmFyLnNldEtleUJ1ZmZlcihrZXlCdWZmZXIpO1xuICB9KTtcbiAgdmltQWRhcHRlci5vbignZGlzcG9zZScsIGZ1bmN0aW9uICgpIHtcbiAgICBzdGF0dXNCYXIudG9nZ2xlVmlzaWJpbGl0eShmYWxzZSk7XG4gICAgc3RhdHVzQmFyLmNsb3NlSW5wdXQoKTtcbiAgICBzdGF0dXNCYXIuY2xlYXIoKTtcbiAgfSk7XG4gIHN0YXR1c0Jhci50b2dnbGVWaXNpYmlsaXR5KHRydWUpO1xuICB2aW1BZGFwdGVyLnNldFN0YXR1c0JhcihzdGF0dXNCYXIpO1xuICB2aW1BZGFwdGVyLmF0dGFjaCgpO1xuICByZXR1cm4gdmltQWRhcHRlcjtcbn0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/webviz-core/node_modules/monaco-vim/lib/index.js\n");

/***/ }),

/***/ "./packages/webviz-core/node_modules/monaco-vim/lib/statusbar.js":
/*!***********************************************************************!*\
  !*** ./packages/webviz-core/node_modules/monaco-vim/lib/statusbar.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar VimStatusBar =\n/*#__PURE__*/\nfunction () {\n  function VimStatusBar(node, editor) {\n    var _this = this;\n\n    var sanitizer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    _classCallCheck(this, VimStatusBar);\n\n    this.closeInput = function () {\n      _this.removeInputListeners();\n\n      _this.input = null;\n\n      _this.setSec('');\n\n      if (_this.editor) {\n        _this.editor.focus();\n      }\n    };\n\n    this.clear = function () {\n      _this.setInnerHtml_(_this.node, '');\n    };\n\n    this.inputKeyUp = function (e) {\n      var options = _this.input.options;\n\n      if (options && options.onKeyUp) {\n        options.onKeyUp(e, e.target.value, _this.closeInput);\n      }\n    };\n\n    this.inputBlur = function () {\n      var options = _this.input.options;\n\n      if (options.closeOnBlur) {\n        _this.closeInput();\n      }\n    };\n\n    this.inputKeyDown = function (e) {\n      var _this$input = _this.input,\n          options = _this$input.options,\n          callback = _this$input.callback;\n\n      if (options && options.onKeyDown && options.onKeyDown(e, e.target.value, _this.closeInput)) {\n        return;\n      }\n\n      if (e.keyCode === 27 || options && options.closeOnEnter !== false && e.keyCode == 13) {\n        _this.input.node.blur();\n\n        e.stopPropagation();\n\n        _this.closeInput();\n      }\n\n      if (e.keyCode === 13 && callback) {\n        e.stopPropagation();\n        e.preventDefault();\n        callback(e.target.value);\n      }\n    };\n\n    this.node = node;\n    this.modeInfoNode = document.createElement('span');\n    this.secInfoNode = document.createElement('span');\n    this.notifNode = document.createElement('span');\n    this.notifNode.className = 'vim-notification';\n    this.keyInfoNode = document.createElement('span');\n    this.keyInfoNode.setAttribute('style', 'float: right');\n    this.node.appendChild(this.modeInfoNode);\n    this.node.appendChild(this.secInfoNode);\n    this.node.appendChild(this.notifNode);\n    this.node.appendChild(this.keyInfoNode);\n    this.toggleVisibility(false);\n    this.editor = editor;\n    this.sanitizer = sanitizer;\n  }\n\n  _createClass(VimStatusBar, [{\n    key: \"setMode\",\n    value: function setMode(ev) {\n      if (ev.mode === 'visual' && ev.subMode === 'linewise') {\n        this.setText('--VISUAL LINE--');\n        return;\n      }\n\n      this.setText(\"--\".concat(ev.mode.toUpperCase(), \"--\"));\n    }\n  }, {\n    key: \"setKeyBuffer\",\n    value: function setKeyBuffer(key) {\n      this.keyInfoNode.textContent = key;\n    }\n  }, {\n    key: \"setSec\",\n    value: function setSec(text, callback, options) {\n      this.notifNode.textContent = '';\n\n      if (text === undefined) {\n        return;\n      }\n\n      this.setInnerHtml_(this.secInfoNode, text);\n      var input = this.secInfoNode.querySelector('input');\n\n      if (input) {\n        input.focus();\n        this.input = {\n          callback: callback,\n          options: options,\n          node: input\n        };\n\n        if (options) {\n          if (options.selectValueOnOpen) {\n            input.select();\n          }\n\n          if (options.value) {\n            input.value = options.value;\n          }\n        }\n\n        this.addInputListeners();\n      }\n\n      return this.closeInput;\n    }\n  }, {\n    key: \"setText\",\n    value: function setText(text) {\n      this.modeInfoNode.textContent = text;\n    }\n  }, {\n    key: \"toggleVisibility\",\n    value: function toggleVisibility(toggle) {\n      if (toggle) {\n        this.node.style.display = 'block';\n      } else {\n        this.node.style.display = 'none';\n      }\n\n      if (this.input) {\n        this.removeInputListeners();\n      }\n\n      clearInterval(this.notifTimeout);\n    }\n  }, {\n    key: \"addInputListeners\",\n    value: function addInputListeners() {\n      var node = this.input.node;\n      node.addEventListener('keyup', this.inputKeyUp);\n      node.addEventListener('keydown', this.inputKeyDown);\n      node.addEventListener('input', this.inputKeyInput);\n      node.addEventListener('blur', this.inputBlur);\n    }\n  }, {\n    key: \"removeInputListeners\",\n    value: function removeInputListeners() {\n      if (!this.input || !this.input.node) {\n        return;\n      }\n\n      var node = this.input.node;\n      node.removeEventListener('keyup', this.inputKeyUp);\n      node.removeEventListener('keydown', this.inputKeyDown);\n      node.removeEventListener('input', this.inputKeyInput);\n      node.removeEventListener('blur', this.inputBlur);\n    }\n  }, {\n    key: \"showNotification\",\n    value: function showNotification(text) {\n      var _this2 = this;\n\n      var sp = document.createElement('span');\n      this.setInnerHtml_(sp, text);\n      this.notifNode.textContent = sp.textContent;\n      this.notifTimeout = setTimeout(function () {\n        _this2.notifNode.textContent = '';\n      }, 5000);\n    }\n  }, {\n    key: \"setInnerHtml_\",\n    value: function setInnerHtml_(element, htmlContents) {\n      if (this.sanitizer) {\n        // Clear out previous contents first.\n        while (element.children.length) {\n          element.removeChild(element.children[0]);\n        }\n\n        element.appendChild(this.sanitizer(htmlContents));\n      } else {\n        element.innerHTML = htmlContents;\n      }\n    }\n  }]);\n\n  return VimStatusBar;\n}();\n\nexports[\"default\"] = VimStatusBar;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/webviz-core/node_modules/monaco-vim/lib/statusbar.js\n");

/***/ })

}]);