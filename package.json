{
  "name": "root",
  "private": true,
  "engines": {
    "node": ">=10.0.0 <12.0.0",
    "npm": ">=6.0.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.1.5",
    "@babel/core": "^7.2.0",
    "@babel/plugin-proposal-class-properties": "^7.2.1",
    "@babel/plugin-proposal-object-rest-spread": "^7.2.0",
    "@babel/plugin-syntax-dynamic-import": "^7.2.0",
    "@babel/plugin-transform-modules-commonjs": "^7.2.0",
    "@babel/plugin-transform-runtime": "^7.2.0",
    "@babel/preset-flow": "^7.0.0",
    "@babel/preset-react": "^7.0.0",
    "@dump247/storybook-state": "^1.5.2",
    "@mapbox/rehype-prism": "^0.3.0",
    "@mdx-js/loader": "^0.16.6",
    "@storybook/addon-actions": "^4.0.12",
    "@storybook/addon-knobs": "^4.0.12",
    "@storybook/addon-links": "^4.0.12",
    "@storybook/addons": "^4.0.12",
    "@storybook/react": "^4.0.12",
    "autoprefixer": "^9.4.2",
    "babel-core": "^7.0.0-bridge.0",
    "babel-eslint": "^10.0.1",
    "babel-jest": "^23.4.2",
    "babel-loader": "^8.0.4",
    "case-sensitive-paths-webpack-plugin": "^2.1.2",
    "css-loader": "^1.0.1",
    "enzyme": "^3.9.0",
    "enzyme-adapter-react-16": "^1.11.2",
    "eslint": "^5.9.0",
    "eslint-config-prettier": "^3.3.0",
    "eslint-config-problems": "^2.0.0",
    "eslint-import-resolver-webpack": "^0.10.1",
    "eslint-plugin-flowtype": "^3.2.0",
    "eslint-plugin-header": "^2.0.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-import-order-alphabetical": "^0.0.2",
    "eslint-plugin-jest": "^22.0.1",
    "eslint-plugin-prettier": "^3.0.0",
    "eslint-plugin-react": "^7.11.1",
    "eslint-plugin-react-hooks": "^1.6.0",
    "expect": "^24.9.0",
    "file-loader": "^4.0.0",
    "flow-bin": "0.106.2",
    "flow-copy-source": "^2.0.2",
    "flow-typed": "2.6.1",
    "gh-pages": "^2.0.1",
    "gl-matrix": "^2.8.1",
    "history": "^4.7.2",
    "jest": "^23.6.0",
    "jest-canvas-mock": "^2.0.0-beta.1",
    "jest-diff": "24.9.0",
    "lerna": "^3.4.3",
    "lodash": "^4.17.11",
    "lz-string": "^1.4.4",
    "monaco-editor": "0.17.1",
    "monaco-editor-webpack-plugin": "1.7.0",
    "nearley-loader": "^2.0.0",
    "node-sass": "^4.10.0",
    "polygon-generator": "^1.1.2",
    "postcss-flexbugs-fixes": "^4.1.0",
    "postcss-loader": "^3.0.0",
    "prettier": "1.15.2",
    "quickhull3d": "2.0.4",
    "raw-loader": "^0.5.1",
    "react": "16.8.6",
    "react-container-dimensions": "^1.4.1",
    "react-copy-to-clipboard": "^5.0.1",
    "react-dom": "16.8.6",
    "react-hooks-testing-library": "^0.4.0",
    "react-hot-loader": "4.8.2",
    "react-live": "^1.12.0",
    "react-router": "^4.3.1",
    "react-router-dom": "^4.3.1",
    "react-svg-loader": "^2.1.0",
    "react-virtualized-select": "^3.1.3",
    "redux-devtools-extension": "^2.13.7",
    "reg-notify-github-plugin": "0.7.19",
    "reg-publish-s3-plugin": "0.7.18",
    "reg-simple-keygen-plugin": "0.7.16",
    "reg-suit": "0.7.17",
    "retext": "^6.0.1",
    "retext-smartypants": "^3.0.2",
    "rimraf": "^2.6.2",
    "rollup": "^0.67.3",
    "rollup-plugin-babel": "^4.0.3",
    "rollup-plugin-commonjs": "^9.2.0",
    "rollup-plugin-copy": "^0.2.3",
    "rollup-plugin-node-resolve": "^3.4.0",
    "rollup-plugin-peer-deps-external": "^2.2.0",
    "rollup-plugin-replace": "^2.1.0",
    "rollup-plugin-terser": "^3.0.0",
    "sass-loader": "^7.1.0",
    "seedrandom": "^2.4.4",
    "sinon": "^7.1.1",
    "storybook-chrome-screenshot": "^1.4.0",
    "style-loader": "^0.23.1",
    "styled-components": "3.4.10",
    "terser-webpack-plugin": "^1.1.0",
    "text-encoding": "^0.7.0",
    "unist-util-visit": "^1.4.0",
    "url-loader": "^1.1.2",
    "url-search-params": "^1.1.0",
    "webpack-cli": "^3.3.3",
    "webpack-dev-server": "^3.7.1",
    "worker-loader": "^2.0.0"
  },
  "dependencies": {},
  "scripts": {
    "bootstrap": "npm install && lerna bootstrap --hoist react",
    "install-ci": "npm ci && lerna bootstrap --hoist react",
    "build": "lerna run build && webpack",
    "watch": "lerna run watch --parallel",
    "clean": "lerna run clean",
    "lerna": "lerna",
    "lint": "eslint . --max-warnings=0 && prettier -l '**/*.css' --ignore-path .eslintignore",
    "lint:fix": "eslint . --fix && prettier --write '**/*.css' --ignore-path .eslintignore",
    "test": "NODE_ENV=test jest --config jest/jest.config.js",
    "link": "lerna link --force-local",
    "update-version": "lerna publish --skip-git --skip-npm --force-publish '*'",
    "storybook": "start-storybook -p 6006 -c stories",
    "build-storybook": "build-storybook -c stories",
    "flow": "flow",
    "flow-typed-rebuild": "rm -rf flow-typed/ && flow-typed install && flow-typed install --rootDir packages/@cruise-automation/hooks && flow-typed install --rootDir packages/@cruise-automation/button && flow-typed install --rootDir packages/@cruise-automation/tooltip && flow-typed install --rootDir packages/react-key-listener && flow-typed install --rootDir packages/regl-worldview",
    "docs": "DEV_SERVER=true webpack-dev-server",
    "docs-deploy": "cp -r docs/public __temp_deploy__ && cp --remove-destination packages/webviz-core/public/index.html __temp_deploy__/try/index.html && echo 'webviz.io' > __temp_deploy__/CNAME && gh-pages -d __temp_deploy__ && rm -rf __temp_deploy__",
    "publish": "lerna run clean && lerna run build && lerna publish",
    "screenshot": "NODE_ENV=development storybook-chrome-screenshot -c stories --parallel 8 --inject-files stories/injected.js --browser-timeout 1200000",
    "screenshot-ci": "npm run screenshot -- --puppeteer-launch-config '{\"executablePath\": \"/usr/bin/google-chrome\", \"headless\": false, \"args\":[\"--use-gl=swiftshader\", \"--no-sandbox\",\"--disable-setuid-sandbox\", \"--disable-dev-shm-usage\", \"--headless\", \"--mute-audio\", \"--user-agent=PuppeteerTestingChrome/72.\"]}'",
    "screenshot-debug": "npm run screenshot -- --parallel 1 --debug --puppeteer-launch-config '{\"headless\": false, \"--args\":[\"--user-agent=PuppeteerTestingChrome/72.\"]}'",
    "ci-commands-for-cruise-proprietary-repo": "npm run install-ci && NODE_ENV=production npm run build && npm run lint && npm run flow && npm test && NODE_ENV=production npm run screenshot-ci",
    "ci": "npm run ci-commands-for-cruise-proprietary-repo && reg-suit run --verbose"
  },
  "workspaces": [
    "packages/*"
  ]
}
